<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lib2013</name>
    </assembly>
    <members>
        <member name="F:Lib2013.oGridSearchBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lib2013.oGridSearchBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lib2013.oGridSearchBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Lib2013.oForm.LoadingMsg(System.String)">
            <summary>
            顯示讀取中訊息
            </summary>
            <param name="Msg">顯示訊息{顏色1:紅 2:藍}</param>
        </member>
        <member name="M:Lib2013.oForm.LoadingMsg(System.String,System.Drawing.Color[])">
            <summary>
            顯示讀取中訊息
            </summary>
            <param name="Msg">顯示訊息</param>
            <param name="MarkColor">色盤顏色</param>
        </member>
        <member name="F:Lib2013.oForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lib2013.oForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lib2013.oForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Lib2013.oBaseBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lib2013.oBaseBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lib2013.oBaseBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Lib2013.oMsgBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lib2013.oMsgBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lib2013.oMsgBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Lib2013.oTestFunBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oTestFunBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oTestFunBox.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="T:Lib2013.MyFun">
            <summary>
            提供基本函數
            </summary>
        </member>
        <member name="M:Lib2013.MyFun.SeekArray(System.String[0:,0:],System.String,System.Int32,System.Int32)">
            <summary>
            查找2維陣列找出對應值
            </summary>
            <param name="array">查詢陣列</param>
            <param name="seek">查詢值</param>
            <param name="seekIndex">查詢位置</param>
            <param name="retrunIndex">回傳值位置</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.STRCompare(System.String,System.String)">
            <summary>
            比較文字排列順序 正數:文字1＞文字2 負數:文字1＜文字2 0:文字1=文字2
            </summary>
            <param name="str1">文字1</param>
            <param name="str2">文字2</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.STR(System.Object)">
            <summary>
            object轉換為文字,null則傳回空值
            </summary>
            <param name="oStr">轉換object</param>
            <returns>轉換文字</returns>
        </member>
        <member name="M:Lib2013.MyFun.CK_SKIP4(System.Int32,System.Int32)">
            <summary>
            以跳4規則檢查是否跳過該號碼
            </summary>
            <param name="nT1">檢查號碼</param>
            <param name="nMode">模式: 1:不拘 2:跳4 3:跳尾4 4:4全跳 5:跳44</param>
            <returns>是否跳過</returns>
        </member>
        <member name="M:Lib2013.MyFun.FillString(System.String,System.Int32,System.String)">
            <summary>
            以雜湊字元並使用分隔符號填充字串至指定長度
            </summary>
            <param name="cPr">原始字串</param>
            <param name="FillLength">填充至此長度</param>
            <param name="SplitString">分格符號</param>
            <returns>雜湊字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.NVL(System.String,System.String)">
            <summary>
            如果字串為空時填入預設值
            </summary>
            <param name="cPr">檢查字串</param>
            <param name="cDefaultValue">預設值</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.NVL(System.Object,System.String)">
            <summary>
            如果數值為空或DBNull時填入預設值
            </summary>
            <param name="oPr">檢查數值</param>
            <param name="cDefaultValue">預設值</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.NVL``1(System.Object,``0)">
            <summary>
            如果數值為null或DBNull時填入預設值
            </summary>
            <typeparam name="T">數值類型</typeparam>
            <param name="oPr">檢查數值</param>
            <param name="cDefaultValue">預設值</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:Lib2013.MyFun.IsBEOK(System.Windows.Forms.Control,System.Windows.Forms.Control,System.String,System.String)">
            <summary>
            檢查兩控制項值是否符合起迄規則
            </summary>
            <param name="oBegin">起始值控制項</param>
            <param name="oEnd">截止值控制項</param>
            <param name="cCaption">錯誤時彈出錯誤視窗標題</param>
            <param name="oMsg">錯誤時彈出錯誤視窗訊息,default為預設訊息</param>
            <returns>是否符合起迄規則</returns>
        </member>
        <member name="M:Lib2013.MyFun.IsBEOK(System.Object,System.Object,System.String,System.String,System.Windows.Forms.Control)">
            <summary>
            檢查兩物件是否符合起迄規則
            </summary>
            <param name="oBegin">起始值</param>
            <param name="oEnd">截止值</param>
            <param name="oMsg">錯誤時彈出錯誤視窗訊息</param>
            <param name="cCaption">錯誤時彈出錯誤視窗標題,空值為不跳出錯誤視窗</param>
            <param name="oFalseFocus">檢查不符時焦點目標</param>
            <returns>是否符合起迄規則</returns>
        </member>
        <member name="M:Lib2013.MyFun.IsBEOK(System.Double,System.Double,System.String,System.String,System.Windows.Forms.Control)">
            <summary>
            檢查兩數值是否符合起迄規則
            </summary>
            <param name="nBegin">起始值</param>
            <param name="nEnd">截止值</param>
            <param name="oMsg">錯誤時彈出錯誤視窗訊息</param>
            <param name="cCaption">錯誤時彈出錯誤視窗標題,空值為不跳出錯誤視窗</param>
            <param name="oFalseFocus">檢查不符時焦點目標</param>
            <returns>是否符合起迄規則</returns>
        </member>
        <member name="M:Lib2013.MyFun.RndString(System.Int32)">
            <summary>
            產生指定長度的亂數字串
            </summary>
            <param name="nLength">亂數字串長度</param>
            <returns>亂數字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.IsEmpty(System.Object,System.String,System.String)">
            <summary>
            傳回指定物件是否為空
            </summary>
            <param name="oPr">檢查物件</param>
            <param name="cMsg">錯誤時彈出錯誤視窗訊息</param>
            <param name="cCaption">錯誤時彈出錯誤視窗標題,空值為不跳出錯誤視窗</param>
            <returns>指定物件是否為空</returns>
        </member>
        <member name="M:Lib2013.MyFun.NMaskStr(System.String,System.Int32)">
            <summary>
            SQL欄位字串處理(UniCode)
            </summary>
            <param name="cPr">字串</param>
            <param name="nPr">處理方式(0:去空白加「'」,1:不去空白加「'」</param>
            <returns>SQL欄位字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.NMaskStr(System.Object,System.Int32)">
            <summary>
            SQL欄位字串處理(UniCode)
            </summary>
            <param name="oPr">物件</param>
            <param name="nPr">處理方式(0:去空白加「'」,1:不去空白加「'」</param>
            <returns>SQL欄位字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.NRMaskStr(System.String)">
            <summary>
            SQL欄位字串去右邊空白加「'」處理(UniCode)
            </summary>
            <param name="cPr">字串</param>
            <returns>SQL欄位字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.NRMaskStr(System.Object)">
            <summary>
            SQL欄位字串去右邊空白加「'」處理(UniCode)
            </summary>
            <param name="oPr">物件</param>
            <returns>SQL欄位字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.MaskStr(System.String,System.Int32)">
            <summary>
            SQL欄位字串處理
            </summary>
            <param name="cPr">字串</param>
            <param name="nPr">處理方式(0:去空白加「'」,1:不去空白加「'」,2:去右邊空白加「'」</param>
            <returns>SQL欄位字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.MaskStr(System.Object,System.Int32)">
            <summary>
            SQL欄位字串處理
            </summary>
            <param name="oPr">物件</param>
            <param name="nPr">處理方式(0:去空白加「'」,1:不去空白加「'」,2:去右邊空白加「'</param>
            <returns>SQL欄位字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.RMaskStr(System.String)">
            <summary>
            SQL欄位字串去右邊空白加「'」處理
            </summary>
            <param name="cPr">字串</param>
            <returns>SQL欄位字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.RMaskStr(System.Object)">
            <summary>
            SQL欄位字串去右邊空白加「'」處理
            </summary>
            <param name="oPr">物件</param>
            <returns>SQL欄位字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.CHR(System.Int32)">
            <summary>
            ASC轉字元字串,建議直接(char)n
            </summary>
            <param name="nPr">ASC Code</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.StrNum(System.Double,System.Int32,System.Int32)">
            <summary>
            轉換數值成文字
            </summary>
            <param name="nPr">轉換數值</param>
            <param name="nPr2">數值最大長度(含小數),整數部份超出時傳回****,(-1為不限)</param>
            <param name="nPr3">小數位數</param>
            <returns>轉換後文字</returns>
        </member>
        <member name="M:Lib2013.MyFun.StrNum(System.Int32,System.Int32)">
            <summary>
            轉換數值成文字
            </summary>
            <param name="nPr">轉換數值</param>
            <param name="nPr2">數值最大長度,超出時傳回****</param>
            <returns>轉換後文字</returns>
        </member>
        <member name="M:Lib2013.MyFun.Double(System.String)">
            <summary>
            轉換字串為實數,格式錯誤時傳回0
            </summary>
            <param name="cPr1">數值字串</param>
            <returns>轉換實數</returns>
        </member>
        <member name="M:Lib2013.MyFun.Float(System.String)">
            <summary>
            轉換字串為浮點數,格式錯誤時傳回0
            </summary>
            <param name="cPr1">數值字串</param>
            <returns>轉換浮點數</returns>
        </member>
        <member name="M:Lib2013.MyFun.IntVal(System.String)">
            <summary>
            轉換字串為整數,格式錯誤時傳回0
            </summary>
            <param name="cPr1">數值字串</param>
            <returns>轉換整數</returns>
        </member>
        <member name="M:Lib2013.MyFun.Long(System.String)">
            <summary>
            轉換字串為長整數,格式錯誤時傳回0
            </summary>
            <param name="cPr1">數值字串</param>
            <returns>轉換長整數</returns>
        </member>
        <member name="M:Lib2013.MyFun.CTONC(System.String,System.Int32,System.Int32)">
            <summary>
            打編號,轉換數值成文字，並以0補齊位數
            </summary>
            <param name="cTitle">抬頭編號</param>
            <param name="nNum">數字</param>
            <param name="nNumLen">'數字部份'位數</param>
            <returns>格式化字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.SUBTRIM(System.String,System.Int32,System.Boolean)">
            <summary>
            取得字串左邊n個字元,並可選擇是否補足長度
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nPr">截取字元數</param>
            <param name="lPr">字元數不足時是否補足右側空白</param>
            <returns>截取字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.SUBTRIMC(System.String,System.Int32,System.Boolean)">
            <summary>
            取得字串左邊n個字數,並可選擇是否補足長度
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nPr">截取字數</param>
            <param name="lPr">字數不足時是否補足右側空白</param>
            <returns>截取字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.SUBTRIM(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            取得字串特定位置開始的n個字元,並可選擇是否補足長度
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nPr">起始位置</param>
            <param name="nPr2">截取字元數</param>
            <param name="lPr">字元數不足時是否補足右側空白</param>
            <returns>截取字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.SUBTRIMC(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            取得字串特定位置開始的n個字數,並可選擇是否補足長度
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nPr">起始位置</param>
            <param name="nPr2">截取字數</param>
            <param name="lPr">字數不足時是否補足右側空白</param>
            <returns>截取字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.CASEERROR(System.String,System.String,System.Object,System.Object[])">
            <summary>
            判斷指定的值是否在列表中,如果在列表中即傳回false並跳出錯誤訊息
            </summary>
            <param name="cMSG">值在列表中要傳回的錯誤訊息(#ERROR#為對應錯誤訊息 ex:編號123已#ERROR#)</param>
            <param name="Caption">跳出的錯誤視窗標題</param>
            <param name="Value">對照值</param>
            <param name="ERRORS">錯誤值列表 格式為:比對值1,訊息1,比對值2,訊息2....</param>
            <returns>指定的值是否不在列表中</returns>
        </member>
        <member name="M:Lib2013.MyFun.DOCASE(System.Object,System.Object[])">
            <summary>
            判斷指定的值是否在列表中,如不存在則傳回預設值
            </summary>
            <param name="oPr">對照值</param>
            <param name="arList">比對列表 格式為:比對值1,回傳值1,比對值2,回傳值2....預設值</param>
            <returns>比對數值</returns>
        </member>
        <member name="M:Lib2013.MyFun.DOCASE(System.String,System.String[],System.String[])">
            <summary>
            判斷指定的值是否在列表中,如不存在則傳回空字串
            </summary>
            <param name="cPr">對照值</param>
            <param name="arPr1">比較陣列</param>
            <param name="arPr2">輸出陣列</param>
            <returns>比對數值</returns>
        </member>
        <member name="M:Lib2013.MyFun.DOCASE(System.Int32,System.Int32[],System.String[])">
            <summary>
            判斷指定的值是否在列表中,如不存在則傳回空字串
            </summary>
            <param name="cPr">對照值</param>
            <param name="arPr1">比較陣列</param>
            <param name="arPr2">輸出陣列</param>
            <returns>比對數值</returns>
        </member>
        <member name="M:Lib2013.MyFun.ChkReg(System.String,System.String,System.String)">
            <summary>
            檢查身份證號是否正確
            </summary>
            <param name="cRegNo">身份證號</param>
            <param name="cErrMsg">不符時跳出錯誤訊息(訊息和標題皆為空值時不跳出錯誤訊息)</param>
            <param name="cCaption">不符時跳出錯誤訊息視窗標題(訊息和標題皆為空值時不跳出錯誤訊息)</param>
            <returns>身份證號是否正確</returns>
        </member>
        <member name="M:Lib2013.MyFun.ChkBid(System.String,System.String,System.String)">
            <summary>
            檢查統一編號是否正確
            </summary>
            <param name="cTCBID">統一編號</param>
            <param name="cErrMsg">不符時跳出錯誤訊息(訊息和標題皆為空值時不跳出錯誤訊息)</param>
            <param name="cCaption">不符時跳出錯誤訊息視窗標題(訊息和標題皆為空值時不跳出錯誤訊息)</param>
            <returns>統一編號是否正確</returns>
        </member>
        <member name="M:Lib2013.MyFun.ChkRegID(System.String,System.String,System.String)">
            <summary>
            檢查身份證號/統一編號是否正確(空值及*視為正確)
            </summary>
            <param name="cRegNoID">身份證號/統一編號</param>
            <param name="cErrMsg">不符時跳出錯誤訊息(訊息和標題皆為空值時不跳出錯誤訊息)</param>
            <param name="cCaption">不符時跳出錯誤訊息視窗標題(訊息和標題皆為空值時不跳出錯誤訊息)</param>
            <returns>身份證號/統一編號是否正確</returns>
        </member>
        <member name="M:Lib2013.MyFun.ChkARC(System.String,System.String,System.String)">
            <summary>
            檢查居留證號是否正確
            </summary>
            <param name="cARCNo">居留證號</param>
            <param name="cErrMsg">不符時跳出錯誤訊息(訊息和標題皆為空值時不跳出錯誤訊息)</param>
            <param name="cCaption">不符時跳出錯誤訊息視窗標題(訊息和標題皆為空值時不跳出錯誤訊息)</param>
            <returns>居留證號是否正確</returns>
        </member>
        <member name="M:Lib2013.MyFun.GETTFN">
            <summary>
            產生暫存檔路徑
            </summary>
            <returns>暫存檔路徑</returns>
        </member>
        <member name="M:Lib2013.MyFun.CMONEY(System.Int32)">
            <summary>
            數字轉金額字串 ex:101->壹佰零壹
            </summary>
            <param name="nPr">轉換數字</param>
            <returns>金額字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.CMONEY(System.String)">
            <summary>
             數字字串轉金額字串 ex:101->壹佰零壹
            </summary>
            <param name="cPr">轉換數字字串</param>
            <returns>金額字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.NTOCC(System.Object)">
            <summary>
            取得大寫數字字串 ex:○-九
            </summary>
            <param name="oPr">數字或數字字串</param>
            <returns>大寫數字字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.HL(System.String)">
            <summary>
            橫式字串轉直式字串
            </summary>
            <param name="cPr">轉換字串</param>
            <returns>值式字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.BIGNUM(System.String,System.Int32)">
            <summary>
            數字轉換全形(0-9和負號)
            </summary>
            <param name="cPr">轉換字串</param>
            <param name="nPr">限制長度(以字元計,超出長度傳回空值,-1為不限制)</param>
            <returns>全型數字字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.BIGNUM(System.Int32,System.Int32)">
            <summary>
            數字轉換全形(0-9和負號)
            </summary>
            <param name="nPr">轉換數字</param>
            <param name="nPr2">限制長度(以字元計,超出長度傳回空值,-1為不限制)</param>
            <returns>全型數字字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.BIGCHAR(System.String)">
            <summary>
            將文字轉換為全型("-"變成"之")
            </summary>
            <param name="cPr">轉換字串</param>
            <returns>全型字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.SWAPCHAR(System.String)">
            <summary>
            取得反轉後字串
            </summary>
            <param name="cPr">原始字串</param>
            <returns>翻轉後字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.InsertString(System.String,System.String)">
            <summary>
            穿插文字至字串(ex:123->1.2.3)
            </summary>
            <param name="cPr1">原始字串</param>
            <param name="cPr2">要插入的文字</param>
            <returns>穿插後字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.PadLeftByByte(System.String,System.Int32,System.Char)">
            <summary>
            填滿字串左側至指定長度(字元數)
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nLength">補足長度</param>
            <param name="cPr2">填充字元</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.PadRightByByte(System.String,System.Int32,System.Char)">
            <summary>
            填滿字串右側至指定長度(字元數)
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nLength">補足長度</param>
            <param name="cPr2">填充字元</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.GetStrByte(System.String)">
            <summary>
            取得字串總字元數
            </summary>
            <param name="cPr">計算字串</param>
            <returns>字串總字元數</returns>
        </member>
        <member name="M:Lib2013.MyFun.CheckStrByByte(System.String,System.Int32)">
            <summary>
            取得字串長度是否小於等於指定字元數
            </summary>
            <param name="cPr">計算字串</param>
            <param name="nPr">字元數</param>
            <returns>字串長度是否小於等於指定字元數</returns>
        </member>
        <member name="M:Lib2013.MyFun.PickStrByByte(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            取得字串某段區間內的的子字串(字元數)
            </summary>
            <param name="cPr1">原始字串</param>
            <param name="nPr">起始位置</param>
            <param name="nCu">截取字元數</param>
            <param name="lRvs">是否從後面開始截取</param>
            <returns>子字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.CH_ADD_NUM(System.String,System.Int32)">
            <summary>
            轉換編號成數字(ex:FF,2=255)
            </summary>
            <param name="cPr">編號</param>
            <param name="nMode">轉換模式 1:0-9 2:A-Z 3:0-9 A-Z</param>
            <returns>轉換後數字</returns>
        </member>
        <member name="M:Lib2013.MyFun.XCH_ADD_NUM(System.Int64,System.Int32,System.Int32)">
            <summary>
            轉換數字為編號(ex:255,2=FF)
            </summary>
            <param name="nPr">轉換數字</param>
            <param name="nMode">轉換模式 1:0-9 2:A-Z 3:0-9 A-Z</param>
            <param name="nLEN">限制編號長度(超出傳回*,未滿則左側補0)</param>
            <returns>轉換後編號</returns>
        </member>
        <member name="M:Lib2013.MyFun.IntToABC(System.Int32)">
            <summary>
            數字轉字母(ex:1->A 2->B),不符合傳回空字串
            </summary>
            <param name="Value">轉換數字</param>
            <returns>對照字母 </returns>
        </member>
        <member name="M:Lib2013.MyFun.AddTotal(System.Data.DataTable,System.String,System.String,System.String[])">
            <summary>
            DataTable加入總計列
            </summary>
            <param name="dtSource">資料來源</param>
            <param name="cCaptionColumn">顯示總計標題的欄位名稱</param>
            <param name="Caption">總計標題文字 ex:"總計:"</param>
            <param name="TotalColumns">要總計的欄位名稱</param>
        </member>
        <member name="M:Lib2013.MyFun.FindRow(System.Data.DataView,System.String,System.Object,System.Int32[])">
            <summary>
            尋找DataView中符合條件的資料列(找不則到傳回null)
            </summary>
            <param name="dtSource">資料來源</param>
            <param name="cColumnName">要尋找的欄位名稱</param>
            <param name="Value">要尋找的值</param>
            <param name="PassIndex">要略過的資料列索引</param>
            <returns>回傳資料列</returns>
        </member>
        <member name="M:Lib2013.MyFun.FindRow(System.Data.DataTable,System.String,System.Object,System.Int32[])">
            <summary>
            尋找DataTable中符合條件的資料列(找不則到傳回null)
            </summary>
            <param name="dtSource">資料來源</param>
            <param name="cColumnName">要尋找的欄位名稱</param>
            <param name="Value">要尋找的值</param>
            <param name="PassIndex">要略過的資料列索引</param>
            <returns>回傳資料列</returns>
        </member>
        <member name="M:Lib2013.MyFun.Filter(System.Data.DataTable@,System.String)">
            <summary>
            設定DataTable的DefaultView的資料過濾條件(條件中出現N''會錯誤,使用此函數將N''替代為'')
            </summary>
            <param name="dtSource">資料來源</param>
            <param name="cFilter">過濾條件條件</param>
        </member>
        <member name="M:Lib2013.MyFun.Filter(System.Windows.Forms.BindingSource@,System.String)">
            <summary>
            設定BindingSource關連之DataTable.DefaultView的資料過濾條件(條件中出現N''會錯誤,使用此函數將N''替代為'')
            </summary>
            <param name="bsSource">資料來源</param>
            <param name="cFilter">過濾條件條件</param>
        </member>
        <member name="M:Lib2013.MyFun.AddIndex(System.Windows.Forms.BindingSource@,System.String,System.String)">
            <summary>
            使用SQL排序建立索引欄位(區分大小寫)
            </summary>
            <param name="bsSource">資料來源</param>
            <param name="ColumnNames">要建立索引的欄位名稱(多欄位時用","分隔 ex:"DB0101,DB0102")</param>
            <param name="IndexFormat">產生的索引欄位名稱(#Name#:原索引欄位名稱 ex:Key_#Name#->Key_DB0101)</param>
        </member>
        <member name="M:Lib2013.MyFun.AddIndex(System.Data.DataTable@,System.String,System.String)">
            <summary>
            使用SQL排序建立索引欄位(區分大小寫)
            </summary>
            <param name="dtSource">資料來源</param>
            <param name="ColumnNames">要建立索引的欄位名稱(多欄位時用","分隔 ex:"DB0101,DB0102")</param>
            <param name="IndexFormat">產生的索引欄位名稱(#Name#:原索引欄位名稱 ex:Key_#Name#->Key_DB0101)</param>
        </member>
        <member name="M:Lib2013.MyFun.SortStr(System.Windows.Forms.BindingSource@,System.String,System.Boolean)">
            <summary>
            使用SQL排序法排序資料(區分大小寫)
            </summary>
            <param name="bsSource">資料來源</param>
            <param name="ColumnName">要排序的欄位</param>
            <param name="Desc">是否反序</param>
        </member>
        <member name="M:Lib2013.MyFun.SortStr(System.Data.DataTable@,System.String,System.Boolean)">
            <summary>
            使用SQL排序法排序資料(區分大小寫)
            </summary>
            <param name="dtSource">資料來源</param>
            <param name="ColumnName">要排序的欄位</param>
            <param name="Desc">是否反序</param>
        </member>
        <member name="F:Lib2013.MyFun.StrCpr">
            <summary>
            SQL排序規則實體
            </summary>
        </member>
        <member name="M:Lib2013.MyFun.PKTCode(System.String)">
            <summary>
            權限資料一次加密(轉成2進位,Ex:"1111111"→CHR(127)
            </summary>
            <param name="cSPKCode">原文</param>
            <returns>加密文字</returns>
        </member>
        <member name="M:Lib2013.MyFun.PKSCode(System.String,System.Int32)">
            <summary>
            權限密文轉權限明文
            </summary>
            <param name="cSPKCode">密文</param>
            <param name="nCodeLen">轉換碼數 7或8</param>
            <returns>解密文字</returns>
        </member>
        <member name="M:Lib2013.MyFun.PKTCodeN(System.String,System.Int32)">
            <summary>
            權限密文二次加密
            </summary>
            <param name="cSPKC1">明文(上限16字)</param>
            <param name="nSPKC2">加密參數</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.PKSCodeN(System.String,System.Int32)">
            <summary>
            權限密文二次解密
            </summary>
            <param name="cSPKC1">密文</param>
            <param name="nSPKC2">解密參數</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.CHECK_one(System.String)">
            <summary>
            將字串轉為asc碼後檢查二進位值中1的數量
            </summary>
            <param name="cCode">檢查字串</param>
            <returns>1的數量</returns>
        </member>
        <member name="M:Lib2013.MyFun.CHECK_zero(System.String)">
            <summary>
            將字串轉為asc碼後檢查二進位值中0的數量
            </summary>
            <param name="cCode">檢查字串</param>
            <returns>0的數量</returns>
        </member>
        <member name="M:Lib2013.MyFun.PKTCodeA7(System.Int32,System.String[])">
            <summary>
            權限資料轉權限密文
            </summary>
            <param name="nRACode">權限資料</param>
            <param name="arSPKC"></param>
            <returns>權限密文</returns>
        </member>
        <member name="M:Lib2013.MyFun.PKSCodeA7(System.String)">
            <summary>
            權限密文(2進位)轉權限資料(2進位)
            </summary>
            <param name="cTPKCode">權限密文(2進位)</param>
            <returns>權限資料(2進位)</returns>
        </member>
        <member name="M:Lib2013.MyFun.UaTCodeA(System.String)">
            <summary>
            UaTCodeA(cUaTCode)	使用者帳號
            </summary>
            <param name="cUaTCode">轉換字串</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.UaSCodeA(System.String)">
            <summary>
            UaSCodeA(cUaSCode)	使用者帳號 
            </summary>
            <param name="cUaSCode">轉換字串</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.CHECK_UaCode(System.String,System.String,System.String)">
            <summary>
            檢查字串中是否有非法字元
            </summary>
            <param name="cUaCode">檢查字串</param>
            <param name="cMsg">錯誤時顯示視窗訊息(空則不顯示訊息)</param>
            <param name="cCpation">錯誤時顯示視窗標題</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.AesEncrypt(System.String,System.String@,System.String,System.String)">
            <summary>
            使用AES加密字串,回傳是否成功
            </summary>
            <param name="cSource">原始字串</param>
            <param name="cEncrypt">加密後字串(Base64)</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.AesEncrypt(System.String,System.Byte[]@,System.String,System.String)">
            <summary>
            使用AES加密字串,回傳是否成功
            </summary>
            <param name="cSource">原始字串</param>
            <param name="cEncrypt">加密後位元組陣列</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.AesEncrypt(System.Byte[],System.Byte[]@,System.String,System.String)">
            <summary>
            使用AES加密位元組陣列,回傳是否成功
            </summary>
            <param name="cSource">原始位元組陣列</param>
            <param name="cEncrypt">加密後位元組陣列</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.AesDecrypt(System.String,System.String@,System.String,System.String)">
            <summary>
            使用AES解密字串,回傳是否成功
            </summary>
            <param name="cEncrypt">加密字串(Base64)</param>
            <param name="cSource">解密後字串</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.AesDecrypt(System.Byte[],System.String@,System.String,System.String)">
            <summary>
            使用AES解密位元組陣列,回傳是否成功
            </summary>
            <param name="cEncrypt">加密位元組陣列</param>
            <param name="cSource">解密後字串</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.AesDecrypt(System.Byte[],System.Byte[]@,System.String,System.String)">
            <summary>
            使用AES解密位元組陣列,回傳是否成功
            </summary>
            <param name="cEncrypt">加密位元組陣列</param>
            <param name="cSource">解密後位元組陣列</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.NMaskStrAes(System.String,System.Boolean,System.String,System.String)">
            <summary>
            AES加密後NMaskStr(Base64),失敗時回傳N''
            </summary>
            <param name="cSource">原始字串</param>
            <param name="lRemoveSpace">是否移除空白</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.MaskStrAes(System.String,System.Boolean,System.String,System.String)">
            <summary>
            AES加密後MaskStr(Base64),失敗時回傳''
            </summary>
            <param name="cSource">原始字串</param>
            <param name="lRemoveSpace">是否移除空白</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.StrToAes(System.String,System.Boolean,System.String,System.String)">
            <summary>
            AES加密後傳回文字(Base64),失敗時傳回空值
            </summary>
            <param name="cSource">原始字串</param>
            <param name="lRemoveSpace">是否移除空白</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.AesToStr(System.String,System.String,System.String)">
            <summary>
            AES解密後傳回文字,失敗時傳回空值
            </summary>
            <param name="cSource">加密字串(Base64)</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.StrToAesByte(System.String,System.Boolean,System.String,System.String)">
            <summary>
            AES加密後傳回位元組陣列,失敗時傳回null
            </summary>
            <param name="cSource">原始字串</param>
            <param name="lRemoveSpace">是否移除空白</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳位元組陣列</returns>
        </member>
        <member name="M:Lib2013.MyFun.AesToStr(System.Byte[],System.String,System.String)">
            <summary>
            AES解密後傳回字串,失敗時傳回空值
            </summary>
            <param name="cSource">位元組陣列</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.NMaskStrTripleDes(System.String,System.Boolean,System.String,System.String)">
            <summary>
            TripleDES加密後NMaskStr(Base64),失敗時回傳N''
            </summary>
            <param name="cSource">原始字串</param>
            <param name="lRemoveSpace">是否移除空白</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.MaskStrTripleDes(System.String,System.Boolean,System.String,System.String)">
            <summary>
            TripleDES加密後MaskStr(Base64),失敗時回傳''
            </summary>
            <param name="cSource">原始字串</param>
            <param name="lRemoveSpace">是否移除空白</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.StrToTripleDes(System.String,System.Boolean,System.String,System.String)">
            <summary>
            TripleDES加密後傳回文字(Base64),失敗時傳回空值
            </summary>
            <param name="cSource">原始字串</param>
            <param name="lRemoveSpace">是否移除空白</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.StrToTripleDesByte(System.String,System.Boolean,System.String,System.String)">
            <summary>
             TripleDES加密後傳回位元組陣列,失敗時傳回null
            </summary>
            <param name="cSource">原始字串</param>
            <param name="lRemoveSpace">是否移除空白</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳位元組陣列</returns>
        </member>
        <member name="M:Lib2013.MyFun.TripleDesToStr(System.String,System.String,System.String)">
            <summary>
            TripleDES解密後傳回文字,失敗時傳回空值
            </summary>
            <param name="cSource">加密字串(Base64)</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.TripleDesToStr(System.Byte[],System.String,System.String)">
            <summary>
            TripleDES解密後傳回字串,失敗時傳回空值
            </summary>
            <param name="cSource">位元組陣列</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.TripleDesEncrypt(System.String,System.String@,System.String,System.String)">
            <summary>
            使用TripleDES加密字串,回傳是否成功
            </summary>
            <param name="cSource">原始字串</param>
            <param name="cEncrypt">加密後字串(Base64)</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.TripleDesEncrypt(System.String,System.Byte[]@,System.String,System.String)">
            <summary>
            使用TripleDES加密字串,回傳是否成功
            </summary>
            <param name="cSource">原始字串</param>
            <param name="cEncrypt">加密後位元組陣列</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.TripleDesEncrypt(System.Byte[],System.Byte[]@,System.String,System.String)">
            <summary>
            使用TripleDES加密位元組陣列,回傳是否成功
            </summary>
            <param name="cSource">原始位元組陣列</param>
            <param name="cEncrypt">加密後位元組陣列</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.TripleDesDecrypt(System.String,System.String@,System.String,System.String)">
            <summary>
            使用TripleDES解密字串,回傳是否成功
            </summary>
            <param name="cEncrypt">加密字串</param>
            <param name="cSource">解密後字串</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.TripleDesDecrypt(System.Byte[],System.String@,System.String,System.String)">
            <summary>
            使用TripleDES解密位元組陣列,回傳是否成功
            </summary>
            <param name="cEncrypt">加密位元組陣列</param>
            <param name="cSource">解密後字串</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.TripleDesDecrypt(System.Byte[],System.Byte[]@,System.String,System.String)">
            <summary>
            使用TripleDES解密位元組陣列,回傳是否成功
            </summary>
            <param name="cEncrypt">加密位元組陣列</param>
            <param name="cSource">解密後位元組陣列</param>
            <param name="cKey">金鑰</param>
            <param name="cIV">初始向量</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.LiniEnc(System.String[],System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Lini資料加密後回傳位元組陣列
            </summary>
            <param name="WriteDate">資料字串陣列</param>
            <param name="Key1Index">金鑰1位置</param>
            <param name="Key2Index">金鑰2位置</param>
            <param name="FillLength">填充資料長度</param>
            <param name="cKeyForKey1">加密金鑰1的金鑰</param>
            <param name="cKeyForKey2">加密金鑰2的金鑰</param>
            <returns>加密位元組陣列</returns>
        </member>
        <member name="M:Lib2013.MyFun.LiniDes(System.Byte[],System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Lini資料解密後傳回字串陣列,失敗時傳回null
            </summary>
            <param name="ReadDate">加密位元組陣列</param>
            <param name="Key1Index">金鑰1位置</param>
            <param name="Key2Index">金鑰2位置</param>
            <param name="FillLength">填充資料長度</param>
            <param name="cKeyForKey1">加密金鑰1的金鑰</param>
            <param name="cKeyForKey2">加密金鑰2的金鑰</param>
            <returns>解密資料字串陣列</returns>
        </member>
        <member name="M:Lib2013.MyFun.MsgBox(System.Object,System.String)">
            <summary>
            提示訊息視窗
            </summary>
            <param name="cPr1">訊息內容</param>
            <param name="cPr2">視窗標題</param>
        </member>
        <member name="M:Lib2013.MyFun.StopBox(System.Object,System.String)">
            <summary>
            錯誤訊息視窗
            </summary>
            <param name="cPr1">訊息內容</param>
            <param name="cPr2">視窗標題</param>
        </member>
        <member name="M:Lib2013.MyFun.AlertBox(System.Object,System.String)">
            <summary>
            警告訊息視窗
            </summary>
            <param name="cPr1">訊息內容</param>
            <param name="cPr2">視窗標題</param>
        </member>
        <member name="M:Lib2013.MyFun.YesNoBox(System.Object,System.String,System.Boolean)">
            <summary>
            詢問訊息視窗,回傳是或否
            </summary>
            <param name="cPr1">訊息內容</param>
            <param name="cPr2">視窗標題</param>
            <param name="lPr">預設值 T:是 F:否</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:Lib2013.MyFun.RetryBox(System.Object,System.String,System.Boolean)">
            <summary>
            重試訊息視窗,回傳是或否
            </summary>
            <param name="cPr1">訊息內容</param>
            <param name="cPr2">視窗標題</param>
            <param name="lPr">預設值 T:重試 F:取消</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:Lib2013.MyFun.FormatDate(System.String,System.String)">
            <summary>
            格式化日期字串
            </summary>
            <param name="cYYYMMDD">7碼民國日期 ex:1030201</param>
            <param name="Formatstring">
            轉換字串格式
            <para>#YYYMMDD# -> 1030201</para>
            <para>#YYYMM# -> 10302</para>
            <para>#YYY# -> 103</para>
            <para>#YY# -> 03</para>
            <para>#MM# -> 02</para>
            <para>#DD# -> 01</para>
            <para>#M# -> A(月份轉字母)</para></param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.GetFillTime(System.DateTime,System.String)">
            <summary>
            取得日期時間字串(格式為YYY/MM/DD HH:mm:ss)
            </summary>
            <param name="dtDateTime">轉換日期時間</param>
             /// <param name="Formatstring">
            轉換字串格式
            <para>#YYYMMDD# -> 1030201</para>
            <para>#YYYMM# -> 10302</para>
            <para>#YYY# -> 103</para>
            <para>#YY# -> 03</para>
            <para>#MM# -> 02</para>
            <para>#DD# -> 01</para>
            <para>#M# -> A(月份轉字母)</para>
            <para>#HH# -> 23</para>
            <para>#mm# -> 59</para>
            <para>#ss# -> 59</para></param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.ToDate(System.String,System.Int32)">
            <summary>
            取得西元日期字串,非日期則傳回空字串
            </summary>
            <param name="cDate">日期字串(民國西元皆可)</param>
            <param name="nSign">是否加入斜線 0:不加 1:加</param>
            <returns>西元日期字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.ToDate(System.DateTime,System.Int32)">
            <summary>
            取得西元日期字串,非日期則傳回空字串
            </summary>
            <param name="dDate">轉換日期</param>
            <param name="nSign">是否加入斜線 0:不加 1:加</param>
            <returns>西元日期字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.ToCDate(System.String,System.Int32)">
            <summary>
            取得民國日期字串,非日期則傳回空字串
            </summary>
            <param name="cDate">日期字串(民國西元皆可)</param>
            <param name="nSign">是否加入斜線 0:不加 1:加</param>
            <returns>民國日期字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.ToCDate(System.DateTime,System.Int32)">
            <summary>
            取得民國日期字串,非日期則傳回空字串
            </summary>
            <param name="dDate">轉換日期</param>
            <param name="nSign">是否加入斜線 0:不加 1:加</param>
            <returns>民國日期字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.ToTDate(System.String,System.Int32)">
            <summary>
            取得民國日期字串(格式:民國YYY年MM月DD日),非日期則傳回空字串
            </summary>
            <param name="cDate">日期字串(民國西元皆可)</param>
            <param name="nSpace">關鍵字間空白間格數</param>
            <returns>民國日期字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.ToTDate(System.DateTime,System.Int32)">
            <summary>
            取得民國日期字串(格式:民國YYY年MM月DD日),非日期則傳回空字串
            </summary>
            <param name="dDate">轉換日期</param>
            <param name="nSpace">關鍵字間空白間格數</param>
            <returns>民國日期字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.ToDateTime(System.String,System.DateTime@)">
            <summary>
            字串轉換為日期時間,傳回是否成功轉換
            </summary>
            <param name="cDate">日期字串(民國西元皆可)</param>
            <param name="dtDate">回傳日期</param>
            <returns>是否成功轉換</returns>
        </member>
        <member name="M:Lib2013.MyFun.IsDateClash(System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            檢查日期時間是否重疊 true:重疊 false:不重疊
            </summary>
            <param name="BDate1">起始日期1</param>
            <param name="EDate1">截止日期1</param>
            <param name="BDate2">起始日期2</param>
            <param name="EDate2">截止日期2</param>
            <param name="LinkupPass">是否允許連續時間(起始/截止時間重疊)</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.IsInDate(System.Object,System.Object,System.Object)">
            <summary>
            判斷日期是否在特定區間內(含同日)
            </summary>
            <param name="oBDate">起始日期字串(民國西元皆可)或物件</param>
            <param name="oEDate">截止日期字串(民國西元皆可)或物件</param>
            <param name="oCDate">比對日期字串(民國西元皆可)或物件</param>
            <returns>是否在日期區間中</returns>
        </member>
        <member name="M:Lib2013.MyFun.IsDate(System.String)">
            <summary>
            判斷字串是否為正確的日期格式
            </summary>
            <param name="cDate">日期字串(民國西元皆可)</param>
            <returns>是否為正確日期</returns>
        </member>
        <member name="M:Lib2013.MyFun.IsMonth(System.String)">
            <summary>
            判斷字串是否為正確的月份格式
            </summary>
            <param name="cYYYMM">月份字串(限民國)</param>
            <returns>是否為正確月份</returns>
        </member>
        <member name="M:Lib2013.MyFun.IsTime(System.String)">
            <summary>
            判斷字串是否為正確的時間格式
            </summary>
            <param name="cHHMMSS">時間字串</param>
            <returns>是否為正確的時間格式</returns>
        </member>
        <member name="M:Lib2013.MyFun.ToTime(System.String,System.Int32)">
            <summary>
            取得時間字串,非正確時間則傳回空字串
            </summary>
            <param name="cHHMMSS">時間字串(可含可不含秒)</param>
            <param name="nSign">是否加入":"</param>
            <returns>回傳字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.NTDCAL(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            日期字串運算(運算後將回傳同格式日期字串),非日期則傳回空字串
            </summary>
            <param name="cYMDx">日期字串(民國西元皆可)</param>
            <param name="nY">年份增加值</param>
            <param name="nM">月分增加值</param>
            <param name="nD">日期增加值</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.NTDCAL(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            日期時間運算
            </summary>
            <param name="cYMDx">計算日期</param>
            <param name="nY">年份增加值</param>
            <param name="nM">月分增加值</param>
            <param name="nD">日期增加值</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.ToLunarDate(System.DateTime,System.String)">
            <summary>
            取得農曆日期字串 回傳1:YYYMMDD 回傳2:格式字串
            </summary>
            <param name="time">轉換日期</param>
            <param name="cFormat">
            <para>回傳2日期格式</para>
            <para>yyy -> 數字年</para>
            <para>YY -> 文字年</para>
            <para>MM -> 月份</para>
            <para>DD -> 日</para></param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.ToLunarDate(System.String,System.String)">
            <summary>
            取得農曆日期字串 回傳1:YYYMMDD 回傳2:格式字串
            </summary>
            <param name="cDate">日期字串(民國西元皆可)</param>
            <param name="cFormat">
            <para>回傳2日期格式</para>
            <para>yyy -> 數字年</para>
            <para>YY -> 文字年</para>
            <para>MM -> 月份</para>
            <para>DD -> 日</para></param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.FileLog(System.String)">
            <summary>
            輸出自訂Log訊息至C:\DeBug.txt,重開程式時重新產生
            </summary>
            <param name="Msg">輸出訊息</param>
        </member>
        <member name="M:Lib2013.MyFun.DebugLog(System.String,System.String,System.String,System.Int32)">
            <summary>
            輸出自訂Log訊息DeBugForm
            </summary>
            <param name="Msg">輸出訊息</param>
        </member>
        <member name="M:Lib2013.MyFun.GetAllChanged(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            <summary>
            取得容器中所有控制項的值變更字串
            <param name="GetTopValue">非容器控制項有ChangeString時是否跳過子項目之值</param>
            <param name="OnlyCurPage">遇到Page時限定範圍為目前頁面</param>
            </summary>
            <param name="oContainer">容器</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.GetAllValue(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            <summary>
            取得容器中所有控制項的值
            </summary>
            <param name="oContainer">容器</param>
            <param name="GetTopValue">非容器控制項有Value時是否跳過子項目之值</param>
            <param name="OnlyCurPage">遇到Page時限定範圍為目前頁面</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.DUSEEnc(System.String@,System.String@,System.Int32)">
            <summary>
            授權數加密
            </summary>
            <param name="ENTMTN">加密後資料1</param>
            <param name="ENTTTN">加密後資料2</param>
            <param name="Value">授權數</param>
        </member>
        <member name="M:Lib2013.MyFun.DUSEDec(System.Int32@,System.String,System.String,System.String)">
            <summary>
            授權數解密,回傳是否解密成功
            </summary>
            <param name="Value">解密後數值</param>
            <param name="ENTMTN">加密資料1</param>
            <param name="ENTTTN">加密資料1</param>
            <param name="Caption">資料不正確時彈出錯誤視窗標題,空白時不跳出錯誤訊息</param>
            <returns>是否解密成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.DUSE_C1(System.Int32)">
            <summary>
            原VFP DUSE
            </summary>
            <param name="nTUser">轉換資料</param>
            <returns>轉出資料</returns>
        </member>
        <member name="M:Lib2013.MyFun.DUSE_D1(System.String)">
            <summary>
            原VFP DUSE
            </summary>
            <param name="cTUser">轉換資料</param>
            <returns>轉出資料</returns>
        </member>
        <member name="M:Lib2013.MyFun.DUSE_C2(System.Int32)">
            <summary>
            原VFP DUSE
            </summary>
            <param name="nTUser">轉換資料</param>
            <returns>轉出資料</returns>
        </member>
        <member name="M:Lib2013.MyFun.DUSE_D2(System.String)">
            <summary>
            原VFP DUSE
            </summary>
            <param name="cTUser">轉換資料</param>
            <returns>轉出資料</returns>
        </member>
        <member name="M:Lib2013.MyFun.WriteZTCHead(System.IO.Stream,System.Byte,System.Int16,System.String)">
            <summary>
            寫入ZTC表頭資訊
            </summary>
            <param name="stm">寫入串流</param>
            <param name="Mode">模式(1:檔案 2:資料庫)</param>
            <param name="Count">檔案/資料庫數量</param>
            <param name="Key">7z加密金鑰</param>
        </member>
        <member name="M:Lib2013.MyFun.ReadZTCHead(System.IO.Stream)">
            <summary>
            取得ZTC表頭資訊
            </summary>
            <param name="instm">ZTC串流</param>
            <returns>ZTC表頭資訊</returns>
        </member>
        <member name="M:Lib2013.MyFun.PackZTC1(System.IO.Stream,System.IO.Stream,System.String)">
            <summary>
            封裝串流為ZTC格式(檔案型),傳回是否成功
            </summary>
            <param name="instm">原始串流</param>
            <param name="outstm">輸出ZTC串流</param>
            <param name="Key">7z加密金鑰</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.RePackZTC1(System.IO.Stream,System.IO.Stream,System.String@)">
            <summary>
            拆封ZTC格式(檔案型),傳回是否成功
            </summary>
            <param name="instm">原始ZTC串流</param>
            <param name="outstm">輸出串流</param>
            <param name="Key">取出7z加密金鑰</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.RePackZTC1(System.IO.Stream,System.IO.Stream)">
            <summary>
            解析ZTC格式(檔案型),傳回是否成功
            </summary>
            <param name="instm">原始ZTC串流</param>
            <param name="outstm">輸出串流</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.PackZTC2(System.IO.Stream,System.String,System.String[],System.IO.Stream[])">
            <summary>
            封裝ZTC格式(資料庫型),傳回是否成功
            </summary>
            <param name="outstm">輸出ZTC串流</param>
            <param name="Key">7z加密金鑰</param>
            <param name="DBName">資料庫名稱陣列</param>
            <param name="instm">資料庫串流陣列</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.RePackZTC2(System.String,System.IO.Stream,System.IO.Stream,System.String@)">
            <summary>
            轉出ZTC格式(資料庫型)中特定資料庫,傳回是否成功
            </summary>
            <param name="cDBName">要轉出的資料庫名稱</param>
            <param name="instm">原始ZTC串流</param>
            <param name="outstm">輸出串流</param>
            <param name="Key">取出7z加密金鑰</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.RePackZTC2(System.String,System.IO.Stream,System.IO.Stream)">
            <summary>
            轉出ZTC格式(資料庫型)中特定資料庫,傳回是否成功
            </summary>
            <param name="cDBName">要轉出的資料庫名稱</param>
            <param name="instm">原始ZTC串流</param>
            <param name="outstm">輸出串流</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.MyFun.ByteReLength(System.Byte[],System.Int32,System.Int32)">
            <summary>
            位元組重組(ex:11001100 10101010 -> 110011 001010 101010)
            </summary>
            <param name="arByte">原始資料</param>
            <param name="OldLength">原始位元組長度</param>
            <param name="NewLength">新位元組長度</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.GetRelativePath(System.String,System.String)">
            <summary>
            絕對路徑轉換為相對路徑
            </summary>
            <param name="basePath">參照路徑</param>
            <param name="targetPath">絕對路徑</param>
            <returns>相對路徑</returns>
        </member>
        <member name="M:Lib2013.MyFun.InList(System.Object,System.Object[])">
            <summary>
            判斷值是否在列表中
            </summary>
            <param name="oPr">比對數值</param>
            <param name="arList">數值列表</param>
            <returns>值是否在列表中</returns>
        </member>
        <member name="M:Lib2013.MyFun.SUBSTR(System.String,System.Int32,System.Int32)">
            <summary>
            傳回字串內指定區域文字(以字元計算)
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nPr1">截取位置(從1開始)</param>
            <param name="nPr2">截取字元數(-1為取到字串結束)</param>
            <returns>字串內指定區域文字</returns>
        </member>
        <member name="M:Lib2013.MyFun.SUBSTRC(System.String,System.Int32,System.Int32)">
            <summary>
            傳回字串內指定區域文字(以字數計算)
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nPr1">截取位置(從1開始)</param>
            <param name="nPr2">截取字數(-1為取到字串結束)</param>
            <returns>截取字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.LEFT(System.String,System.Int32)">
            <summary>
            傳回由左邊開始截取之字串(以字元計算)
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nPr">截取字元數</param>
            <returns>截取字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.LEFTC(System.String,System.Int32)">
            <summary>
            傳回由左邊開始截取之字串(以字數計算)
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nPr">截取字數</param>
            <returns>截取字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.RIGHT(System.String,System.Int32)">
            <summary>
            傳回由右邊開始截取之字串(以字元計算)
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nPr">截取字元數</param>
            <returns>截取字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.RIGHTC(System.String,System.Int32)">
            <summary>
            傳回由右邊開始截取之字串(以字數計算)
            </summary>
            <param name="cPr">原始字串</param>
            <param name="nPr">截取字數</param>
            <returns>截取字串</returns>
        </member>
        <member name="M:Lib2013.MyFun.EMPTY(System.String)">
            <summary>
            判斷字串是否為空(同string.IsNullOrWhiteSpace)
            </summary>
            <param name="cPr">判斷字串</param>
            <returns>字串是否為空</returns>
        </member>
        <member name="M:Lib2013.MyFun.AvgColor(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            取得2顏色平均值
            </summary>
            <param name="Color1">顏色1</param>
            <param name="Color2">顏色2</param>
            <param name="Color1P">顏色1比重</param>
            <param name="Color2P">顏色2比重</param>
            <returns>平均顏色</returns>
        </member>
        <member name="M:Lib2013.MyFun.MixColor(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Double)">
            <summary>
            取得2顏色混合值
            </summary>
            <param name="Color1">顏色1</param>
            <param name="Color2">顏色2</param>
            <param name="Color1P">顏色1比重</param>
            <param name="Color2P">顏色2比重</param>
            <param name="Alpha">透明度</param>
            <returns>混合顏色</returns>
        </member>
        <member name="M:Lib2013.MyFun.FindCloseControl``1(System.Windows.Forms.Control,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Windows.Forms.Control)">
            <summary>
            找出最靠近指定控制項的特定類型控制項,找不到時傳回null
            </summary>
            <typeparam name="T">尋找的控制項類型</typeparam>
            <param name="Control">基準控制項,傳回離此控制項最近的特定類型控制項</param>
            <param name="direct">是否特別限定方向 4:左方 8:上方 6:右方 2:下方 0:不限方向</param>
            /// <param name="onlyCanSelect">是否限定狀態為可選取控制項</param>
            /// <param name="onlyTabStop">是否限定TabStop為true的控制項</param>
            <param name="dirWeight">特定偏向比重</param>
            <param name="Container">要尋找的容器,null為Control的上層</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.GetAllControlProperty(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.String[])">
            <summary>
            取得容器中所有控制項屬性 回傳DataTable(Type:類型,TabIdx:定位順序...後面為屬性)
            </summary>
            <param name="oContainer">容器</param>
            <param name="GetTopValue">非容器控制項有第一項屬性時是否跳過子項目之值</param>
            <param name="OnlyCurPage">遇到Page時限定範圍為目前頁面</param>
            <param name="PropertyName">屬性名稱(第一個為必須屬性,無此項屬性者即略過)</param>
        </member>
        <member name="M:Lib2013.MyFun.GetAllControl(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            找出容器中所有子控制項
            </summary>
            <param name="oContainer">容器</param>
            <param name="Children">是否包含非容器控制項的子項目</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyFun.SetAll``1(System.Windows.Forms.Control,System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            設定容器中所有子控制項的特定屬性
            </summary>
            <typeparam name="T">屬性型別,屬性名稱相同但型別不符時不會設定</typeparam>
            <param name="oContainer">容器</param>
            <param name="PropertyName">屬性名稱</param>
            <param name="Value">設定值</param>
            <param name="Children">是否包含非容器控制項的子項目</param>
            <param name="DoAll">是否設定所有控制項(即使DoNotSet為true)</param>
        </member>
        <member name="M:Lib2013.MyFun.IsImageEmpty(System.Drawing.Bitmap)">
            <summary>
            判斷圖片是否全為透明
            </summary>
            <param name="img">要判斷的圖片</param>
            <returns>圖片是否為空圖片</returns>
        </member>
        <member name="T:Lib2013.MyFun.StrComparer`1">
            <summary>
            SQL排序規則
            </summary>
            <typeparam name="T">比較型別</typeparam>
        </member>
        <member name="M:Lib2013.MyFun.StrComparer`1.Compare(`0,`0)">
            <summary>
            排序方法
            </summary>
            <param name="x">值1</param>
            <param name="y">值2</param>
            <returns>回傳值</returns>
        </member>
        <member name="T:Lib2013.MyAPI">
            <summary>
            API指令集
            </summary>
        </member>
        <member name="F:Lib2013.MyAPI.WM_SetRedraw">
            <summary>
            重繪指令代碼
            </summary>
        </member>
        <member name="F:Lib2013.MyAPI.CS_DropSHADOW">
            <summary>
            繪製陰影代碼
            </summary>
        </member>
        <member name="F:Lib2013.MyAPI.GCL_STYLE">
            <summary>
            繪製陰影代碼
            </summary>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_SendMessage(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            發送物件控制指令
            </summary>
            <param name="hwnd">物件代碼</param>
            <param name="wMsg">指令代碼</param>
            <param name="wParam">設定值</param>
            <param name="lParam">不清楚</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_SetShadow(System.IntPtr,System.Boolean)">
            <summary>
            繪製陰影
            </summary>
            <param name="hwnd">物件代碼</param>
            <param name="lShow">是否開啟陰影</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_ShowCaret(System.IntPtr)">
            <summary>
            顯示物件游標
            </summary>
            <param name="hWnd">物件代碼</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_HideCaret(System.IntPtr)">
            <summary>
            隱藏物件游標
            </summary>
            <param name="hWnd">物件代碼</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_GetWindowDC(System.IntPtr)">
            <summary>
            取得物件DC代碼
            </summary>
            <param name="hWnd">物件代碼</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_GetWindow(System.IntPtr,System.Int32)">
            <summary>
            取得子視窗控制碼
            </summary>
            <param name="hWnd">視窗控制碼</param>
            <param name="uCmd">子視窗代碼</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            釋放物件DC代碼
            </summary>
            <param name="hWnd">物件代碼</param>
            <param name="hDC">DC代碼</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_SetRedraw(System.IntPtr,System.Int32)">
            <summary>
            發送訊息_暫停/啟用繪製(設定多個控制項且明顯延遲時可先暫停繪製並在設定完成後重啟並刷新)
            </summary>
            <param name="hwnd">視窗控制碼</param>
            <param name="wMsg">0:暫停 1:啟用(需手動refresh())</param>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_SendKeyPress(System.Windows.Forms.Keys)">
            <summary>
            模擬鍵盤點擊按鈕
            </summary>
            <param name="keyCode"></param>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_SendKeyDown(System.Windows.Forms.Keys)">
             <summary>
            模擬鍵盤按下按鈕
             </summary>
             <param name="keyCode"></param>
        </member>
        <member name="M:Lib2013.MyAPI.Fun_SendKeyUp(System.Windows.Forms.Keys)">
            <summary>
            模擬鍵盤放開按鈕
            </summary>
            <param name="keyCode"></param>
        </member>
        <member name="M:Lib2013.Zip_GZip.CompressStr(System.String,System.String@)">
            <summary>
            使用GZip壓縮字串,傳回是否成功
            </summary>
            <param name="input">原始字串</param>
            <param name="output">壓縮後字串(Base64)</param>
            <returns>是否壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.CompressStr(System.String,System.Byte[]@)">
            <summary>
            使用GZip壓縮字串,傳回是否成功
            </summary>
            <param name="input">原始字串</param>
            <param name="output">壓縮後位元組陣列</param>
            <returns>是否壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.CompressStr(System.String,System.IO.Stream)">
            <summary>
            使用GZip壓縮字串,傳回是否成功
            </summary>
            <param name="input">原始字串</param>
            <param name="output">壓縮後串流</param>
            <returns>是否壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.CompressStream(System.IO.MemoryStream,System.String@)">
            <summary>
            使用GZip壓縮串流,傳回是否成功
            </summary>
            <param name="input">原始串流</param>
            <param name="output">壓縮後字串(Base64)</param>
            <returns>是否壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.CompressBytes(System.Byte[],System.String@)">
            <summary>
            使用GZip壓縮位元組陣列,傳回是否成功
            </summary>
            <param name="input">原始位元組陣列</param>
            <param name="output">壓縮後字串(Base64)</param>
            <returns>是否壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.CompressStream(System.IO.MemoryStream,System.Byte[]@)">
            <summary>
            使用GZip壓縮串流,傳回是否成功
            </summary>
            <param name="input">原始串流</param>
            <param name="output">壓縮後位元組陣列</param>
            <returns>是否壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.CompressBytes(System.Byte[],System.Byte[]@)">
            <summary>
            使用GZip壓縮位元組陣列,傳回是否成功
            </summary>
            <param name="input">原始位元組陣列</param>
            <param name="output">壓縮後位元組陣列</param>
            <returns>是否壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.CompressStream(System.IO.MemoryStream,System.IO.Stream)">
            <summary>
            使用GZip壓縮串流,傳回是否成功
            </summary>
            <param name="input">原始串流</param>
            <param name="output">壓縮後串流</param>
            <returns>是否壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.CompressBytes(System.Byte[],System.IO.Stream)">
            <summary>
            使用GZip壓縮位元組陣列,傳回是否成功
            </summary>
            <param name="input">原始位元組陣列</param>
            <param name="output">壓縮後串流</param>
            <returns>是否壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.ExtractToStr(System.String,System.String@)">
            <summary>
             使用GZip解壓縮字串,傳回是否成功
            </summary>
            <param name="input">壓縮字串</param>
            <param name="output">解壓縮後字串</param>
            <returns>是否解壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.ExtractToStr(System.IO.MemoryStream,System.String@)">
            <summary>
             使用GZip解壓縮串流,傳回是否成功
            </summary>
            <param name="input">壓縮串流</param>
            <param name="output">解壓縮後字串</param>
            <returns>是否解壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.ExtractToStr(System.Byte[],System.String@)">
            <summary>
             使用GZip解壓縮位元組資料,傳回是否成功
            </summary>
            <param name="input">壓縮位元組資料</param>
            <param name="output">解壓縮後字串</param>
            <returns>是否解壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.ExtractToBytes(System.String,System.Byte[]@)">
            <summary>
             使用GZip解壓縮字串,傳回是否成功
            </summary>
            <param name="input">壓縮字串</param>
            <param name="output">解壓縮後位元組資料</param>
            <returns>是否解壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.ExtractToBytes(System.IO.MemoryStream,System.Byte[]@)">
            <summary>
             使用GZip解壓縮串流,傳回是否成功
            </summary>
            <param name="input">壓縮串流</param>
            <param name="output">解壓縮後位元組資料</param>
            <returns>是否解壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.ExtractToBytes(System.Byte[],System.Byte[]@)">
            <summary>
             使用GZip解壓縮位元組資料,傳回是否成功
            </summary>
            <param name="input">壓縮位元組資料</param>
            <param name="output">解壓縮後位元組資料</param>
            <returns>是否解壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.ExtractToStream(System.String,System.IO.Stream)">
            <summary>
             使用GZip解壓縮字串,傳回是否成功
            </summary>
            <param name="input">壓縮字串</param>
            <param name="output">解壓縮後串流</param>
            <returns>是否解壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.ExtractToStream(System.Byte[],System.IO.Stream)">
            <summary>
             使用GZip解壓縮串流,傳回是否成功
            </summary>
            <param name="input">壓縮串流</param>
            <param name="output">解壓縮後串流</param>
            <returns>是否解壓縮成功</returns>
        </member>
        <member name="M:Lib2013.Zip_GZip.ExtractToStream(System.IO.MemoryStream,System.IO.Stream)">
            <summary>
             使用GZip解壓縮位元組資料,傳回是否成功
            </summary>
            <param name="input">壓縮位元組資料</param>
            <param name="output">解壓縮後串流</param>
            <returns>是否解壓縮成功</returns>
        </member>
        <member name="T:Lib2013.IMEControl">
            <summary>
            提供輸入法切換控制
            </summary>
        </member>
        <member name="F:Lib2013.IMEControl.LastIMEforXP">
            <summary>
            最後使用的輸入法(XP專用)
            </summary>
        </member>
        <member name="M:Lib2013.IMEControl.GetIMEList">
            <summary>
            取得目前電腦輸入法清單
            </summary>
            <returns>輸入法清單</returns>
        </member>
        <member name="M:Lib2013.IMEControl.GetIME">
            <summary>
            取得目前輸入法名稱
            </summary>
            <returns>輸入法名稱</returns>
        </member>
        <member name="M:Lib2013.IMEControl.GetLang">
            <summary>
            取得目前輸入法語系(win7以上)
            </summary>
            <returns>語系代號</returns>
        </member>
        <member name="M:Lib2013.IMEControl.GetIMEStatus(System.IntPtr)">
            <summary>
            取得目前輸入法中英狀態
            </summary>
            <param name="hWnd">視窗控置碼(Form.Handle)</param>
            <returns>輸入法中英狀態(T:中文模式 F:英文模式)</returns>
        </member>
        <member name="M:Lib2013.IMEControl.SetIMEStatus(System.Boolean,System.IntPtr)">
            <summary>
            設定目前"中文輸入法"的"中英狀態",傳回是否成功切換
            </summary>
            <param name="bSet">設定值(T:中文模式 F:英文模式)</param>
            <param name="hWnd">視窗控置碼(Form.Handle)</param>
            <returns>是否切換成功</returns>
        </member>
        <member name="M:Lib2013.IMEControl.SetIME(System.String,System.IntPtr)">
            <summary>
            設定輸入法,傳回是否成功切換
            </summary>
            <param name="sIMEName">輸入法名稱</param>
            <param name="hWnd">視窗控置碼(Form.Handle)</param>
            <returns>是否切換成功</returns>
        </member>
        <member name="M:Lib2013.IMEControl.IsEnglish">
            <summary>
            取得目前是否為英文輸入法(包含中文輸入法的英文模式)
            </summary>
            <returns>是否為英文輸入法</returns>
        </member>
        <member name="M:Lib2013.IMEControl.SetIMEMode(System.Boolean,System.IntPtr)">
            <summary>
            設定輸入法狀態(切換中/英文輸入法),傳回是否成功切換
            </summary>
            <param name="bSet">輸入法類型(T:切換中文 F:切換英文)</param>
            <param name="hWnd">視窗控置碼(Form.Handle)</param>
            <returns>是否切換成功</returns>
        </member>
        <member name="T:Lib2013.SystemInfo">
            <summary>
            提供取得系統資訊功能
            </summary>
        </member>
        <member name="M:Lib2013.SystemInfo.GetMac(System.String,System.Int32)">
            <summary>
            取得特定IP對應的MACAddress,查無時傳回空值
            </summary>
            <param name="IP">查詢IP</param>
            <param name="Desh">傳回值是否加上"-"</param>
            <returns>MACAddress</returns>
        </member>
        <member name="M:Lib2013.SystemInfo.GetIP">
            <summary>
            取得目前作用中IP
            </summary>
            <returns>作用中IP</returns>
        </member>
        <member name="M:Lib2013.SystemInfo.GetIPV6">
            <summary>
            取得目前作用中IPv6
            </summary>
            <returns>作用中IPv6</returns>
        </member>
        <member name="M:Lib2013.SystemInfo.GetHostName">
            <summary>
            取得本機電腦名稱
            </summary>
            <returns>本機電腦名稱</returns>
        </member>
        <member name="M:Lib2013.SystemInfo.GetHDDNumber(System.String)">
            <summary>
            取得硬碟卷冊編號
            </summary>
            <param name="cDrive">硬碟代號</param>
            <returns>硬碟卷冊編號</returns>
        </member>
        <member name="M:Lib2013.SystemInfo.GetOSInstallDate">
            <summary>
            取得作業系統安裝日期
            </summary>
            <returns>作業系統安裝日期</returns>
        </member>
        <member name="M:Lib2013.SystemInfo.GetUUID">
            <summary>
            取得機器序號(唯一序號)
            </summary>
            <returns>機器序號</returns>
        </member>
        <member name="T:Lib2013.LibConfig">
            <summary>
            組件設定值
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DeBug_ShowAllCMD">
            <summary>
            是否顯示所有指令 false:只顯示錯誤的指令
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.AutoTextBoxSize">
            <summary>
            Textbox執行中是否自動調整大小
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.UseMyMsgBox">
            <summary>
            是否使用自訂訊息框 MsgBox,AlertBox,StopBox...
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.GridDoubleClickCopy">
            <summary>
            Grid滑鼠連點時是否複製儲存格內容
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.CtrlUpEnabled">
            <summary>
            是否啟用字典(無作用)
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.CtrlDownEnabled">
            <summary>
            是否啟用造字表
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultDisableBorderColor">
            <summary>
            控制項預設Disable框線顏色
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultAutoCompleteToNext">
            <summary>
            控制項預設自動完成後是否跳至下個控制項
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultDisableForeColor">
            <summary>
            控制項預設Disable前景色
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultDisableBackColor">
            <summary>
            控制項預設Disable背景色
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultReadOnlyBorderColor">
            <summary>
            控制項預設ReadOnly框線顏色
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultReadOnlyForeColor">
            <summary>
            控制項預設ReadOnly前景色
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultReadOnlyBackColor">
            <summary>
            控制項預設ReadOnly背景色
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultFocusBorderColor">
            <summary>
            控制項預設Focus框線顏色
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultFocusForeColor">
            <summary>
            控制項預設Focus前景色
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultFocusBackColor">
            <summary>
            控制項預設Focus背景色
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultButtonFocusColor">
            <summary>
            預設按鈕選取框顏色
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.DefaultButtonFocusWidth">
            <summary>
            預設按鈕選取框寬度
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.LoadingMsgDelay">
            <summary>
            等待視窗出現的延遲(毫秒)
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.AutoFormLocation">
            <summary>
            是否自動調整視窗位置
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.LoadingMsgCloseDelay">
            <summary>
            等待視窗關閉計時器週期(毫秒)
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.LoadingMsgShowSpeed">
            <summary>
            等待視窗顯示速度
            </summary>
        </member>
        <member name="F:Lib2013.LibConfig.LoadingMsgShowDelay">
            <summary>
            等待視窗顯示延遲(100毫秒)
            </summary>
        </member>
        <member name="P:Lib2013.LibConfig.DeBugMode">
            <summary>
            DeBug模式(影響表單測試快截鍵 / * - 與SQL指令視窗)
            </summary>
        </member>
        <member name="P:Lib2013.LibConfig.EUDCLink">
            <summary>
            造字輸入法連結表
            </summary>
        </member>
        <member name="F:Lib2013.Class.Global.LibInfo.Ver">
            <summary>
            組件版本號
            </summary>
        </member>
        <member name="T:Lib2013.LibForm">
            <summary>
            組件內視窗實體
            </summary>
        </member>
        <member name="F:Lib2013.LibForm.MainForm">
            <summary>
            主視窗
            </summary>
        </member>
        <member name="F:Lib2013.LibForm.PickCharForm">
            <summary>
            造字表視窗
            </summary>
        </member>
        <member name="F:Lib2013.LibForm.AddrForm">
            <summary>
            地址視窗
            </summary>
        </member>
        <member name="F:Lib2013.LibForm.DateForm">
            <summary>
            日期視窗
            </summary>
        </member>
        <member name="F:Lib2013.LibForm.DebugForm">
            <summary>
            Debug視窗
            </summary>
        </member>
        <member name="T:Lib2013.YesNoDef">
            <summary>
            提供 預設,是,否選項
            </summary>
        </member>
        <member name="F:Lib2013.YesNoDef.Default">
            <summary>
            預設
            </summary>
        </member>
        <member name="F:Lib2013.YesNoDef.Yes">
            <summary>
            是
            </summary>
        </member>
        <member name="F:Lib2013.YesNoDef.No">
            <summary>
            否
            </summary>
        </member>
        <member name="T:Lib2013.FTPobject">
            <summary>
            處理http操作
            </summary>
        </member>
        <member name="F:Lib2013.FTPobject.FtpRequest">
            <summary>
            FtpWebRequest實體
            </summary>
        </member>
        <member name="F:Lib2013.FTPobject.Credential">
            <summary>
            NetworkCredential實體
            </summary>
        </member>
        <member name="M:Lib2013.FTPobject.#ctor(System.String,System.String)">
            <summary>
            新建FTPobject實體
            </summary>
            <param name="ID"></param>
            <param name="PW"></param>
        </member>
        <member name="M:Lib2013.FTPobject.GetList(System.String,System.String[]@,System.String,System.String)">
            <summary>
            取得檔案列表
            </summary>
            <param name="cURL">目標位置</param>
            <param name="List">檔案列表</param>
            <param name="caption">出現錯誤時視窗標題,空值為不跳出錯誤訊息</param>
            <param name="Msg">出現錯誤時訊息內容</param>
            <returns>是否成功</returns>
        </member>
        <member name="F:Lib2013.FTPobject.TotalLength">
            <summary>
            資料總長度
            </summary>
        </member>
        <member name="F:Lib2013.FTPobject.NowLength">
            <summary>
            已下載長度
            </summary>
        </member>
        <member name="M:Lib2013.FTPobject.Download(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            下載檔案
            </summary>
            <param name="cURL">目標位置</param>
            <param name="filePath">下載檔案路徑</param>
            <param name="caption">出現錯誤時視窗標題,空值為不跳出錯誤訊息</param>
            <param name="Msg">出現錯誤時訊息內容</param>
            <param name="ByteLength">緩衝區大小 0為自動(1/100)</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.FTPobject.Upload(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            上傳檔案
            </summary>
            <param name="cURL">目標位置</param>
            <param name="filePath">上傳檔案路徑</param>
            <param name="caption">出現錯誤時視窗標題,空值為不跳出錯誤訊息</param>
            <param name="Msg">出現錯誤時訊息內容</param>
            <param name="ByteLength">緩衝區大小 0為自動(1/100)</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.FTPobject.Upload(System.String,System.IO.Stream,System.String,System.String,System.Int32)">
            <summary>
            上傳串流
            </summary>
            <param name="cURL">目標位置</param>
            <param name="fileStream">上傳串流</param>
            <param name="caption">出現錯誤時視窗標題,空值為不跳出錯誤訊息</param>
            <param name="Msg">出現錯誤時訊息內容</param>
            <param name="ByteLength">緩衝區大小 0為自動(1/100)</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.FTPobject.Delete(System.String,System.String,System.String)">
            <summary>
            刪除檔案
            </summary>
            <param name="cURI">目標位置</param>
            <param name="caption">出現錯誤時視窗標題,空值為不跳出錯誤訊息</param>
            <param name="Msg">出現錯誤時訊息內容</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.FTPobject.ReadString(System.String,System.String@,System.String,System.String)">
            <summary>
            讀取文字檔
            </summary>
            <param name="cURL">目標位置</param>
            <param name="Value">讀取文字</param>
            <param name="caption">出現錯誤時視窗標題,空值為不跳出錯誤訊息</param>
            <param name="Msg">出現錯誤時訊息內容</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.FTPobject.WriteString(System.String,System.String,System.String,System.String)">
            <summary>
            寫入文字檔
            </summary>
            <param name="cURL">目標位置</param>
            <param name="Value">寫入文字</param>
            <param name="caption">出現錯誤時視窗標題,空值為不跳出錯誤訊息</param>
            <param name="Msg">出現錯誤時訊息內容</param>
            <returns>是否成功</returns>
        </member>
        <member name="P:Lib2013.FTPobject.BindoProgressBar">
            <summary>
            關聯的進度條元件
            </summary>
        </member>
        <member name="P:Lib2013.FTPobject.BindProgressBar">
            <summary>
            關聯的進度條元件
            </summary>
        </member>
        <member name="P:Lib2013.FTPobject.oProgressBarIndex">
            <summary>
            進度條為oProgressBar時主要進度編號
            </summary>
        </member>
        <member name="P:Lib2013.FTPobject.ID">
            <summary>
            FTP帳號
            </summary>
        </member>
        <member name="P:Lib2013.FTPobject.PW">
            <summary>
            FTP密碼
            </summary>
        </member>
        <member name="E:Lib2013.FTPobject.StartWork">
            <summary>
            開始動作時觸發
            </summary>
        </member>
        <member name="E:Lib2013.FTPobject.ReportProgress">
            <summary>
            工作進行回報
            </summary>
        </member>
        <member name="E:Lib2013.FTPobject.WorkFinish">
            <summary>
            動作完成時觸發
            </summary>
        </member>
        <member name="T:Lib2013.PRGForm">
            <summary>
            程式列表相關
            </summary>
        </member>
        <member name="M:Lib2013.PRGForm.OpenForm(System.String,System.Int32)">
            <summary>
            開啟PRG並回傳Form實體(如已存在則設為主要視窗)
            </summary>
            <param name="PRGName">PRG名稱</param>
            <param name="ModeIndex">開啟PRGMode(1-7=F2-F8)</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.PRGForm.FindIndex(System.String,System.Int32@,System.Int32@)">
            <summary>
            取得PRG在From列表中的索引
            </summary>
            <param name="cPRGName">PRG名稱</param>
            <param name="nClassIdx">類別索引</param>
            <param name="nFormIdx">程式索引</param>
            <returns>是否找到</returns>
        </member>
        <member name="M:Lib2013.PRGForm.FindIndex(Lib2013.oToolStripMenuItem,System.Int32@,System.Int32@)">
            <summary>
            取得PRG在From列表中的索引
            </summary>
            <param name="oMenuItem">按鈕物件</param>
            <param name="nClassIdx">類別索引</param>
            <param name="nFormIdx">程式索引</param>
            <returns>是否找到</returns>
        </member>
        <member name="M:Lib2013.PRGForm.FindPRGObject(System.String)">
            <summary>
            取得指定PRG資料
            </summary>
            <param name="cPRGName">PRG名稱</param>
            <returns>回傳物件</returns>
        </member>
        <member name="M:Lib2013.PRGForm.FindPRGObject(Lib2013.oToolStripMenuItem)">
            <summary>
            取得指定PRG資料
            </summary>
            <param name="oMenuItem">按鈕物件</param>
            <returns>回傳物件</returns>
        </member>
        <member name="M:Lib2013.PRGForm.AddClass(System.Int32,System.String,System.String,System.Drawing.Color,System.Drawing.Image)">
            <summary>
            新增類別群組
            </summary>
            <param name="nRecIdx">Class在權限表中的位置</param>
            <param name="cClassName">類別名稱</param>
            <param name="cClassCaption">類別按鈕標題(顯示於主畫面上方)</param>
            <param name="cBackColor">類別按鈕顏色</param>
            <param name="Image">類別圖片</param>
        </member>
        <member name="M:Lib2013.PRGForm.AddcClassLine">
            <summary>
            新增分隔線
            </summary>
        </member>
        <member name="M:Lib2013.PRGForm.AddFrom(System.Int32,System.String,System.String,Lib2013.ILinkForm,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Image,System.Boolean)">
            <summary>
            新增程式
            </summary>
            <param name="nRecIdx">PRG在權限表中的位置</param>
            <param name="cPRGName">PRG代號</param>
            <param name="cPRGCaption">PRG名稱(顯示於下拉列表)</param>
            <param name="oLinkForm">LinkForm物件</param>
            <param name="cF2">F2功能名稱(無則留空)</param>
            <param name="cF3">F3功能名稱(無則留空)</param>
            <param name="cF4">F4功能名稱(無則留空)</param>
            <param name="cF5">F5功能名稱(無則留空)</param>
            <param name="cF6">F6功能名稱(無則留空)</param>
            <param name="cF7">F7功能名稱(無則留空)</param>
            <param name="cF8">F8功能名稱(無則留空)</param>
            <param name="Image">功能圖片</param>
            <returns>產生按鈕</returns>
        </member>
        <member name="M:Lib2013.PRGForm.AddLine">
            <summary>
            新增分隔線
            </summary>
        </member>
        <member name="M:Lib2013.ImageBuilder.GetImage(System.Drawing.Size)">
            <summary>
            產生圖片並傳回
            </summary>
            <param name="size">圖片尺寸</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.ImageBuilder.GetImage(System.Int32,System.Int32)">
            <summary>
            產生圖片並傳回
            </summary>
            <param name="width">圖片寬度</param>
            <param name="height">圖片高度</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.ImageBuilder.GetAutoSplicePadding">
            <summary>
            自動取得拼接邊界
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lib2013.ImageBuilder.SourceImage">
            <summary>
            基礎圖片
            </summary>
        </member>
        <member name="P:Lib2013.ImageBuilder.SourceImageOriginalSize">
            <summary>
            取得基礎圖片原始大小
            </summary>
        </member>
        <member name="P:Lib2013.ImageBuilder.SourceImageCustomSize">
            <summary>
            基礎圖片原始大小
            </summary>
        </member>
        <member name="P:Lib2013.ImageBuilder.SourceImagePadding">
            <summary>
            基礎圖片原始大小
            </summary>
        </member>
        <member name="P:Lib2013.ImageBuilder.ImageAlignment">
            <summary>
            取得基礎圖片原始大小
            </summary>
        </member>
        <member name="P:Lib2013.ImageBuilder.SpliceCustomPadding">
            <summary>
            自訂裁切邊界，須將SpliceAuto設為Flase
            </summary>
        </member>
        <member name="P:Lib2013.ImageBuilder.SpliceAutoPadding">
            <summary>
            取得自動裁切邊界
            </summary>
        </member>
        <member name="P:Lib2013.ImageBuilder.SpliceAuto">
            <summary>
            是否自動調整裁切邊界
            </summary>
        </member>
        <member name="P:Lib2013.ImageBuilder.SpliceShowPadding">
            <summary>
            是否自動調整裁切邊界
            </summary>
        </member>
        <member name="P:Lib2013.ImageBuilder.BuilderMode">
            <summary>
            拼接方式
            </summary>
        </member>
        <member name="T:Lib2013.ImageBuilder.enumBuilderMode">
            <summary>
            拼接方式
            </summary>
        </member>
        <member name="F:Lib2013.ImageBuilder.enumBuilderMode.None">
            <summary>
            原始圖片
            </summary>
        </member>
        <member name="F:Lib2013.ImageBuilder.enumBuilderMode.Align">
            <summary>
            對齊
            </summary>
        </member>
        <member name="F:Lib2013.ImageBuilder.enumBuilderMode.Stretch">
            <summary>
            延伸
            </summary>
        </member>
        <member name="F:Lib2013.ImageBuilder.enumBuilderMode.Tile">
            <summary>
            並排
            </summary>
        </member>
        <member name="F:Lib2013.ImageBuilder.enumBuilderMode.Zoom">
            <summary>
            放大
            </summary>
        </member>
        <member name="F:Lib2013.ImageBuilder.enumBuilderMode.SpliceStretch">
            <summary>
            拼接延伸
            </summary>
        </member>
        <member name="F:Lib2013.ImageBuilder.enumBuilderMode.SpliceTile">
            <summary>
            拼接並排
            </summary>
        </member>
        <member name="T:Lib2013.ImeInputer">
            <summary>
            鍵盤代碼與輸入法代碼轉換器
            </summary>
        </member>
        <member name="M:Lib2013.ImeInputer.UseConverterA">
            <summary>
            使用轉換器A,預設為注音
            </summary>
        </member>
        <member name="M:Lib2013.ImeInputer.UseConverterB">
            <summary>
            使用轉換器A,預設為倉頡
            </summary>
        </member>
        <member name="M:Lib2013.ImeInputer.UseConverterC">
            <summary>
            使用轉換器A,預設為大易
            </summary>
        </member>
        <member name="M:Lib2013.ImeInputer.SetConverter(System.Collections.Generic.Dictionary{System.Char,System.Char},System.Collections.Generic.Dictionary{System.Char,System.Int32})">
            <summary>
            設定轉換代碼表
            </summary>
            <param name="converter">鍵盤代碼->輸入法代碼表</param>
            <param name="convertPot">輸入法代碼位置表</param>
        </member>
        <member name="M:Lib2013.ImeInputer.GetValue">
            <summary>
            取得已輸入鍵盤代碼
            </summary>
            <returns>已輸入鍵盤代碼</returns>
        </member>
        <member name="M:Lib2013.ImeInputer.GetDisplayValue">
            <summary>
            取得已輸入輸入法代碼
            </summary>
            <returns>已輸入輸入法代碼</returns>
        </member>
        <member name="M:Lib2013.ImeInputer.SetValue(System.String)">
            <summary>
            設定鍵盤代碼
            </summary>
            <param name="code">鍵盤代碼</param>
        </member>
        <member name="M:Lib2013.ImeInputer.ConvertToDisplayValue(System.String)">
            <summary>
            將特定鍵盤代碼轉換為輸入法代碼
            </summary>
            <param name="code">鍵盤代碼</param>
            <returns>輸入法代碼</returns>
        </member>
        <member name="M:Lib2013.ImeInputer.Input(System.Char)">
            <summary>
            輸入指定字元
            </summary>
            <param name="c">輸入字元</param>
            <returns>是否輸入成功</returns>
        </member>
        <member name="M:Lib2013.ImeInputer.Clear">
            <summary>
            清除記錄的代碼
            </summary>
        </member>
        <member name="T:Lib2013.oDictionary`2">
            <summary>
            雙向字典
            </summary>
            <typeparam name="T1">值</typeparam>
            <typeparam name="T2">索引</typeparam>
        </member>
        <member name="F:Lib2013.oDictionary`2.IndexToValue">
            <summary>
            索引對值
            </summary>
        </member>
        <member name="F:Lib2013.oDictionary`2.ValueToIndex">
            <summary>
            值對索引
            </summary>
        </member>
        <member name="M:Lib2013.oDictionary`2.#ctor">
            <summary>
            建立雙向字典實體
            </summary>
        </member>
        <member name="M:Lib2013.oDictionary`2.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
            <summary>
            從字典元件建立雙向字典
            </summary>
            <param name="Value">字典</param>
        </member>
        <member name="M:Lib2013.oDictionary`2.Add(`0,`1)">
            <summary>
            新增索引
            </summary>
            <param name="Index">索引</param>
            <param name="Value">值</param>
        </member>
        <member name="T:Lib2013.ZipAddr">
            <summary>
            提供郵遞區號查詢
            </summary>
        </member>
        <member name="F:Lib2013.ZipAddr.ZipColor">
            <summary>
            值對索引
            </summary>
        </member>
        <member name="F:Lib2013.ZipAddr.ZipCode">
            <summary>
            郵遞區號對應表
            </summary>
        </member>
        <member name="F:Lib2013.OLEDBobject.TimeOut">
            <summary>
            資料庫逾時設定 0:預設
            </summary>
        </member>
        <member name="F:Lib2013.OLEDBobject.oConn">
            <summary>
            資料庫連結物件
            </summary>
        </member>
        <member name="F:Lib2013.OLEDBobject.oCmd">
            <summary>
            資料庫指令元件
            </summary>
        </member>
        <member name="M:Lib2013.OLEDBobject.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            新建SQL物件實體
            </summary>
            <param name="Provider"></param>
            <param name="DataSource">檔案路徑</param>
            <param name="ExtendedProperties"></param>
            <param name="ID">帳號</param>
            <param name="PW">密碼</param>
        </member>
        <member name="M:Lib2013.OLEDBobject.#ctor(System.String)">
            <summary>
              新建SQL物件實體
            </summary>
            <param name="cConnString">連接字串</param>
        </member>
        <member name="M:Lib2013.OLEDBobject.#ctor">
            <summary>
             新建SQL物件實體
            </summary>
        </member>
        <member name="M:Lib2013.OLEDBobject.InsertPara(System.String,System.Object)">
            <summary>
            增加參數
            </summary>
            <param name="Name">參數名稱</param>
            <param name="Value">參數值</param>
        </member>
        <member name="M:Lib2013.OLEDBobject.ClearPara">
            <summary>
            清空參數
            </summary>
        </member>
        <member name="M:Lib2013.OLEDBobject.InsertCMD(System.String,System.String)">
            <summary>
            增加指令
            </summary>
            <param name="cSQLEXEC">SQL指令</param>
            <param name="cInfo">SQL指令說明</param>
        </member>
        <member name="M:Lib2013.OLEDBobject.ClearCMD">
            <summary>
            SQL清空指令
            </summary>
        </member>
        <member name="M:Lib2013.OLEDBobject.GetReader(System.String)">
            <summary>
            取得SQLReader
            </summary>
            <param name="cCaption">錯誤時錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.OLEDBobject.RUNSQL(System.Data.DataSet@,System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            執行SQL指令
            </summary>
            <param name="dsSource">回傳資料庫</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.OLEDBobject.RUNSQL(System.Data.DataTable[]@,System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            執行SQL指令
            </summary>
            <param name="dtSource">回傳資料表陣列</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.OLEDBobject.RUNSQL(System.Windows.Forms.BindingSource[]@,System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            執行SQL指令
            </summary>
            <param name="bsSource">回傳資料連結陣列</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.OLEDBobject.RUNSQL(System.Data.DataTable@,System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            執行SQL指令
            </summary>
            <param name="dtSource">傳回資料表(多張表只會傳回第1張)</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.OLEDBobject.RUNSQL(System.Windows.Forms.BindingSource@,System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
             執行SQL指令
            </summary>
            <param name="bsSource">傳回資料連結(多張表只會傳回第1張)</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.OLEDBobject.RUNSQL(System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            執行SQL指令(不回傳資料)
            </summary>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.OLEDBobject.ConnOpen(System.String)">
            <summary>
            開啟資料庫並回傳是否成功(如果已開啟則不執行並傳回True)
            </summary>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <returns>是否開啟成功</returns>
        </member>
        <member name="M:Lib2013.OLEDBobject.ConnClose">
            <summary>
            關閉資料庫(如已關閉則不執行)
            </summary>
        </member>
        <member name="M:Lib2013.OLEDBobject.Dispose">
            <summary>
            釋放資源
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.SQLEXECList">
            <summary>
            資料庫指令列表
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.MemoList">
            <summary>
            資料庫指令說明列表
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.ShowMsg">
            <summary>
            是否顯示錯誤訊息
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.ShowEx">
            <summary>
            是否顯示額外錯誤訊息
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.ErrorMsg">
            <summary>
            最後出現的錯誤訊息
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.ConnectionString">
            <summary>
            連接字串
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.CMD">
            <summary>
            指令
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.TxtFileName">
            <summary>
            輸出指令為文字檔至指定位置
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.TxtCount">
            <summary>
            輸出指令檔案索引值
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.HisLog">
            <summary>
            是否計錄LOG
            </summary>
        </member>
        <member name="P:Lib2013.OLEDBobject.Status">
            <summary>
            資料庫開啟狀態
            </summary>
        </member>
        <member name="F:Lib2013.ODBCobject.TimeOut">
            <summary>
            資料庫逾時設定 0:預設
            </summary>
        </member>
        <member name="F:Lib2013.ODBCobject.oConn">
            <summary>
            資料庫連結物件
            </summary>
        </member>
        <member name="F:Lib2013.ODBCobject.oCmd">
            <summary>
            資料庫指令元件
            </summary>
        </member>
        <member name="M:Lib2013.ODBCobject.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            新建SQL物件實體
            </summary>
            <param name="Driver">ODBC driver</param>
            <param name="SourceType">資料庫類型</param>
            <param name="SourceDB"> 資料位置</param>
            <param name="Exclusive"></param>
            <param name="Collate"></param>
            <param name="NULL"></param>
            <param name="NULDELETEDL"></param>
            <param name="BACKGROUNDFETCH"></param>
        </member>
        <member name="M:Lib2013.ODBCobject.#ctor(System.String)">
            <summary>
              新建SQL物件實體
            </summary>
            <param name="cConnString">連接字串</param>
        </member>
        <member name="M:Lib2013.ODBCobject.#ctor">
            <summary>
             新建SQL物件實體
            </summary>
        </member>
        <member name="M:Lib2013.ODBCobject.InsertPara(System.String,System.Object)">
            <summary>
            增加參數
            </summary>
            <param name="Name">參數名稱</param>
            <param name="Value">參數值</param>
        </member>
        <member name="M:Lib2013.ODBCobject.ClearPara">
            <summary>
            清空參數
            </summary>
        </member>
        <member name="M:Lib2013.ODBCobject.InsertCMD(System.String,System.String)">
            <summary>
            增加指令
            </summary>
            <param name="cSQLEXEC">SQL指令</param>
            <param name="cInfo">SQL指令說明</param>
        </member>
        <member name="M:Lib2013.ODBCobject.ClearCMD">
            <summary>
            SQL清空指令
            </summary>
        </member>
        <member name="M:Lib2013.ODBCobject.GetReader(System.String)">
            <summary>
            取得SQLReader
            </summary>
            <param name="cCaption">錯誤時錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.ODBCobject.RUNSQL(System.Data.DataSet@,System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            執行SQL指令
            </summary>
            <param name="dsSource">回傳資料庫</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.ODBCobject.RUNSQL(System.Data.DataTable[]@,System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            執行SQL指令
            </summary>
            <param name="dtSource">回傳資料表陣列</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.ODBCobject.RUNSQL(System.Windows.Forms.BindingSource[]@,System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            執行SQL指令
            </summary>
            <param name="bsSource">回傳資料連結陣列</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.ODBCobject.RUNSQL(System.Data.DataTable@,System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            執行SQL指令
            </summary>
            <param name="dtSource">傳回資料表(多張表只會傳回第1張)</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.ODBCobject.RUNSQL(System.Windows.Forms.BindingSource@,System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
             執行SQL指令
            </summary>
            <param name="bsSource">傳回資料連結(多張表只會傳回第1張)</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.ODBCobject.RUNSQL(System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            執行SQL指令(不回傳資料)
            </summary>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全預設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.ODBCobject.ConnOpen(System.String)">
            <summary>
            開啟資料庫並回傳是否成功(如果已開啟則不執行並傳回True)
            </summary>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <returns>是否開啟成功</returns>
        </member>
        <member name="M:Lib2013.ODBCobject.ConnClose">
            <summary>
            關閉資料庫(如已關閉則不執行)
            </summary>
        </member>
        <member name="M:Lib2013.ODBCobject.Dispose">
            <summary>
            釋放資源
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.SQLEXECList">
            <summary>
            資料庫指令列表
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.MemoList">
            <summary>
            資料庫指令說明列表
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.ShowMsg">
            <summary>
            是否顯示錯誤訊息
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.ShowEx">
            <summary>
            是否顯示額外錯誤訊息
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.ErrorMsg">
            <summary>
            最後出現的錯誤訊息
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.ConnectionString">
            <summary>
            連接字串
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.CMD">
            <summary>
            指令
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.TxtFileName">
            <summary>
            輸出指令為文字檔至指定位置
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.TxtCount">
            <summary>
            輸出指令檔案索引值
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.HisLog">
            <summary>
            是否計錄LOG
            </summary>
        </member>
        <member name="P:Lib2013.ODBCobject.Status">
            <summary>
            資料庫開啟狀態
            </summary>
        </member>
        <member name="T:Lib2013.Ini">
            <summary>
            提供存取INI檔功能
            </summary>
        </member>
        <member name="F:Lib2013.Ini.path">
            <summary>
            INi檔案參造路徑
            </summary>
        </member>
        <member name="M:Lib2013.Ini.WriteValue(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            寫入ini檔
            </summary>
            <param name="Section">群組名稱</param>
            <param name="Key">節點名稱</param>
            <param name="Value">寫入值</param>
            <param name="inipath">ini檔路徑</param>
            <param name="fullpath">是否為絕對路徑</param>
        </member>
        <member name="M:Lib2013.Ini.ReadValue(System.String,System.String,System.String,System.Boolean)">
            <summary>
            讀取ini檔,檔案或節點不存在時傳回空值
            </summary>
            <param name="Section">群組名稱</param>
            <param name="Key">節點名稱</param>
            <param name="inipath">ini檔路徑</param>
            <param name="fullpath">是否為絕對路徑</param>
            <returns>指定節點值</returns>
        </member>
        <member name="M:Lib2013.Ini.ReadSections(System.String,System.Boolean)">
            <summary>
            傳回群組列表
            </summary>
            <param name="inipath">ini檔路徑</param>
            <param name="fullpath">是否為絕對路徑</param>
            <returns>群組列表</returns>
        </member>
        <member name="M:Lib2013.Ini.ReadKeys(System.String,System.String,System.Boolean)">
            <summary>
            傳回特定群組中節點列表
            </summary>
            <param name="sectionName">群組名稱</param>
            <param name="inipath">ini檔路徑</param>
            <param name="fullpath">是否為絕對路徑</param>
            <returns>節點列表</returns>
        </member>
        <member name="T:Lib2013.HTTPobject">
            <summary>
            處理http操作
            </summary>
        </member>
        <member name="F:Lib2013.HTTPobject.HttpRequest">
            <summary>
            HttpWebRequest實體
            </summary>
        </member>
        <member name="M:Lib2013.HTTPobject.#ctor">
            <summary>
            新建HTTPobject實體
            </summary>
        </member>
        <member name="F:Lib2013.HTTPobject.TotalLength">
            <summary>
            資料總長度
            </summary>
        </member>
        <member name="F:Lib2013.HTTPobject.NowLength">
            <summary>
            已下載長度
            </summary>
        </member>
        <member name="M:Lib2013.HTTPobject.Download(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            下載檔案
            </summary>
            <param name="cURL">目標位置</param>
            <param name="filePath">下載檔案路徑</param>
            <param name="caption">出現錯誤時視窗標題,空值為不跳出錯誤訊息</param>
            <param name="Msg">出現錯誤時訊息內容</param>
            <param name="ByteLength">緩衝區大小 0為自動(1/100)</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.HTTPobject.Download(System.String,System.IO.Stream,System.String,System.String,System.Int32)">
            <summary>
            下載檔案至串流
            </summary>
            <param name="cURL">目標位置</param>
            <param name="fileStream">下載串流</param>
            <param name="caption">出現錯誤時視窗標題,空值為不跳出錯誤訊息</param>
            <param name="Msg">出現錯誤時訊息內容</param>
            <param name="ByteLength">緩衝區大小 0為自動(1/100)</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.HTTPobject.ReadString(System.String,System.String@,System.String,System.String)">
            <summary>
            讀取文字檔
            </summary>
            <param name="cURL">目標位置</param>
            <param name="Value">文字內容</param>
            <param name="caption">出現錯誤時視窗標題,空值為不跳出錯誤訊息</param>
            <param name="Msg">出現錯誤時訊息內容</param>
            <returns>是否成功</returns>
        </member>
        <member name="P:Lib2013.HTTPobject.BindoProgressBar">
            <summary>
            關聯的進度條元件
            </summary>
        </member>
        <member name="P:Lib2013.HTTPobject.BindProgressBar">
            <summary>
            關聯的進度條元件
            </summary>
        </member>
        <member name="P:Lib2013.HTTPobject.oProgressBarIndex">
            <summary>
            進度條為oProgressBar時主要進度編號
            </summary>
        </member>
        <member name="E:Lib2013.HTTPobject.StartWork">
            <summary>
            開始動作時觸發
            </summary>
        </member>
        <member name="E:Lib2013.HTTPobject.ReportProgress">
            <summary>
            工作進行回報
            </summary>
        </member>
        <member name="E:Lib2013.HTTPobject.WorkFinish">
            <summary>
            動作完成時觸發
            </summary>
        </member>
        <member name="F:Lib2013.Zip_7Zip.ErrorMsg">
            <summary>
            最後出現的錯誤訊息
            </summary>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressStr(System.String,System.String@,System.String)">
            <summary>
            使用7z壓縮字串,傳回是否成功
            </summary>
            <param name="Input">原始字串</param>
            <param name="Output">壓縮後字串(Base64)</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressStr(System.String,System.Byte[]@,System.String)">
            <summary>
            使用7z壓縮字串,傳回是否成功
            </summary>
            <param name="Input">原始字串</param>
            <param name="Output">壓縮後位元組陣列</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressStr(System.String,System.IO.Stream,System.String)">
            <summary>
            使用7z壓縮字串,傳回是否成功
            </summary>
            <param name="Input">原始字串</param>
            <param name="Output">壓縮後串流</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressBytes(System.Byte[],System.String@,System.String)">
            <summary>
            使用7z壓縮位元組陣列,傳回是否成功
            </summary>
            <param name="Input">原始位元組陣列</param>
            <param name="Output">壓縮後字串</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressBytes(System.Byte[],System.Byte[]@,System.String)">
            <summary>
            使用7z壓縮位元組陣列,傳回是否成功
            </summary>
            <param name="Input">原始位元組陣列</param>
            <param name="Output">壓縮後位元組陣列</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressBytes(System.Byte[],System.IO.Stream,System.String)">
            <summary>
            使用7z壓縮位元組陣列,傳回是否成功
            </summary>
            <param name="Input">原始位元組陣列</param>
            <param name="Output">壓縮後串流</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressStream(System.IO.Stream,System.IO.Stream,System.String)">
            <summary>
            使用7z壓縮串流,傳回是否成功
            </summary>
            <param name="Input">原始串流</param>
            <param name="Output">壓縮後串流</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressStream(System.IO.Stream,System.String,System.String)">
            <summary>
            使用7z壓縮串流為檔案,傳回是否成功
            </summary>
            <param name="Input">原始串流</param>
            <param name="OutputFilePath">壓縮檔路徑</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressFile(System.String,System.IO.Stream,System.String)">
            <summary>
            使用7z壓縮檔案為串流,傳回是否成功
            </summary>
            <param name="InputFilePath">檔案路徑</param>
            <param name="Output">壓縮後串流</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressFile(System.String,System.String,System.String)">
            <summary>
            使用7z壓縮檔案為壓縮檔,傳回是否成功
            </summary>
            <param name="InputFilePath">檔案路徑</param>
            <param name="OutputFilePath">壓縮檔路徑</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressFiles(System.String[],System.String)">
            <summary>
            使用7z壓縮多檔案至壓縮檔,傳回是否成功
            </summary>
            <param name="InputFilePaths">原始檔案路徑陣列</param>
            <param name="OutputFilePath">壓縮檔路徑</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressFiles(System.String[],System.IO.Stream)">
            <summary>
            使用7z壓縮多檔案為串流,傳回是否成功
            </summary>
            <param name="InputFilePaths">原始檔案路徑陣列</param>
            <param name="OutputFilePath">壓縮後串流</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressFiles(System.String[],System.String@)">
            <summary>
            使用7z壓縮多檔案為壓縮文字(Base64),傳回是否成功
            </summary>
            <param name="InputFilePaths">原始檔案路徑陣列</param>
            <param name="OutPut">壓縮後文字</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressDirectory(System.String,System.IO.Stream,System.String)">
            <summary>
            使用7z壓縮資料夾為串流,傳回是否成功
            </summary>
            <param name="InputDirectory">資料夾路徑</param>
            <param name="Output">壓縮後串流</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.CompressDirectory(System.String,System.String,System.String)">
            <summary>
            使用7z壓縮資料夾為壓縮檔,傳回是否成功
            </summary>
            <param name="InputDirectory">資料夾路徑</param>
            <param name="OutputFilePath">壓縮檔路徑</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToStr(System.String,System.String@,System.String)">
            <summary>
            解壓縮文字為文字
            </summary>
            <param name="Input">壓縮文字(Base64)</param>
            <param name="Output">解壓後文字</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToStr(System.Byte[],System.String@,System.String)">
            <summary>
            解壓縮位元組陣列為文字
            </summary>
            <param name="Input">位元組陣列</param>
            <param name="Output">解壓後文字</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToBytes(System.String,System.Byte[]@,System.String)">
            <summary>
            解壓縮文字為位元組陣列
            </summary>
            <param name="Input">壓縮文字(Base64)</param>
            <param name="Output">解壓後位元組陣列</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToBytes(System.Byte[],System.Byte[]@,System.String)">
            <summary>
            解壓縮位元組陣列為位元組陣列
            </summary>
            <param name="Input">壓縮位元組陣列</param>
            <param name="Output">解壓後位元組陣列</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToStream(System.String,System.IO.Stream,System.String)">
            <summary>
            解壓縮文字為串流
            </summary>
            <param name="Input">壓縮文字(Base64)</param>
            <param name="Output">解壓後串流</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToStream(System.Byte[],System.IO.Stream,System.String)">
            <summary>
            解壓縮位元組陣列為串流
            </summary>
            <param name="Input">壓縮位元組陣列</param>
            <param name="Output">解壓後串流</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToStream(System.String,System.IO.Stream,System.Int32,System.String)">
            <summary>
            解壓縮檔案為串流
            </summary>
            <param name="InputFilePaths">壓縮檔路徑</param>
            <param name="Output">解壓後串流</param>
            <param name="Index">檔案索引</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToStream(System.IO.Stream,System.IO.Stream,System.Int32,System.String)">
            <summary>
            解壓縮串流為串流
            </summary>
            <param name="Input">壓縮串流</param>
            <param name="Output">解壓後串流</param>
            <param name="Index">檔案索引</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToFile(System.Byte[],System.String,System.Int32,System.String)">
            <summary>
            解壓縮位元組陣列為檔案
            </summary>
            <param name="Input">壓縮位元組陣列</param>
            <param name="OutFilePaths">解壓檔案名稱</param>
            <param name="Index">檔案索引</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToFile(System.String,System.String,System.Int32,System.String)">
            <summary>
            解壓縮檔案為檔案
            </summary>
            <param name="InputFilePaths">壓縮檔路徑</param>
            <param name="OutFilePath">解壓檔案名稱</param>
            <param name="Index">檔案索引</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToFile(System.IO.Stream,System.String,System.Int32,System.String)">
            <summary>
            解壓縮串流為檔案
            </summary>
            <param name="Input">壓縮串流</param>
            <param name="OutFilePath">解壓檔案名稱</param>
            <param name="Index">檔案索引</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToDirectory(System.String,System.String,System.String)">
            <summary>
            解壓縮檔案到資料夾"
            </summary>
            <param name="InputFilePaths">壓縮檔路徑</param>
            <param name="OuputDirectory">解壓縮路徑</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Lib2013.Zip_7Zip.ExtractToDirectory(System.IO.Stream,System.String,System.String)">
            <summary>
            解壓縮串流到資料夾"
            </summary>
            <param name="Input">壓縮串流</param>
            <param name="OuputDirectory">解壓縮路徑</param>
            <param name="Key">金鑰,無則留空</param>
            <returns>是否成功</returns>
        </member>
        <member name="T:Lib2013.ZTCHead">
            <summary>
            ZTC表頭資訊
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.Mode">
            <summary>
            模式 1:單檔 2:資料庫
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.Ver1">
            <summary>
            版本號1
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.Ver2">
            <summary>
            版本號2
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.Ver3">
            <summary>
            版本號3
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.Ver4">
            <summary>
            版本號4
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.Start">
            <summary>
            起始位置
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.Count">
            <summary>
            資料庫數量
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.Key">
            <summary>
            7z解壓縮密碼
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.DBName">
            <summary>
            資料庫名稱獵表
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.DBStart">
            <summary>
            資料庫啟始位置列表
            </summary>
        </member>
        <member name="F:Lib2013.ZTCHead.DBLength">
            <summary>
            資料庫長度列表
            </summary>
        </member>
        <member name="T:SevenZip.ArchiveEmulationStreamProxy">
            <summary>
            The Stream extension class to emulate the archive part of a stream.
            </summary>
        </member>
        <member name="M:SevenZip.ArchiveEmulationStreamProxy.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initializes a new instance of the ArchiveEmulationStream class.
            </summary>
            <param name="stream">The stream to wrap.</param>
            <param name="offset">The stream offset.</param>
        </member>
        <member name="P:SevenZip.ArchiveEmulationStreamProxy.Offset">
            <summary>
            Gets the file offset.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveEmulationStreamProxy.Source">
            <summary>
            The source wrapped stream.
            </summary>
        </member>
        <member name="T:SevenZip.ArchiveExtractCallback">
            <summary>
            Archive extraction callback to handle the process of unpacking files
            </summary>
        </member>
        <member name="F:SevenZip.CallbackBase._exceptions">
            <summary>
            User exceptions thrown during the requested operations, for example, in events.
            </summary>
        </member>
        <member name="M:SevenZip.CallbackBase.#ctor">
            <summary>
            Initializes a new instance of the CallbackBase class.
            </summary>
        </member>
        <member name="M:SevenZip.CallbackBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CallbackBase class.
            </summary>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.CallbackBase.ThrowException(SevenZip.CallbackBase,System.Exception[])">
            <summary>
            Throws the specified exception when is able to.
            </summary>
            <param name="e">The exception to throw.</param>
            <param name="handler">The handler responsible for the exception.</param>
        </member>
        <member name="M:SevenZip.CallbackBase.ThrowException">
            <summary>
            Throws the first exception in the list if any exists.
            </summary>
            <returns>True means no exceptions.</returns>
        </member>
        <member name="P:SevenZip.CallbackBase.Password">
            <summary>
            Gets or sets the archive password
            </summary>
        </member>
        <member name="P:SevenZip.CallbackBase.Canceled">
            <summary>
            Gets or sets the value indicating whether the current procedure was cancelled.
            </summary>
        </member>
        <member name="P:SevenZip.CallbackBase.ReportErrors">
            <summary>
            Gets or sets throw exceptions on archive errors flag
            </summary>
        </member>
        <member name="P:SevenZip.CallbackBase.Exceptions">
            <summary>
            Gets the user exceptions thrown during the requested operations, for example, in events.
            </summary>
        </member>
        <member name="T:SevenZip.IArchiveExtractCallback">
            <summary>
            7-zip IArchiveExtractCallback imported interface.
            </summary>
        </member>
        <member name="M:SevenZip.IArchiveExtractCallback.SetTotal(System.UInt64)">
            <summary>
            Gives the size of the unpacked archive files
            </summary>
            <param name="total">Size of the unpacked archive files (in bytes)</param>
        </member>
        <member name="M:SevenZip.IArchiveExtractCallback.SetCompleted(System.UInt64@)">
            <summary>
            SetCompleted 7-zip function
            </summary>
            <param name="completeValue"></param>
        </member>
        <member name="M:SevenZip.IArchiveExtractCallback.GetStream(System.UInt32,SevenZip.ISequentialOutStream@,SevenZip.AskMode)">
            <summary>
            Gets the stream for file extraction
            </summary>
            <param name="index">File index in the archive file table</param>
            <param name="outStream">Pointer to the stream</param>
            <param name="askExtractMode">Extraction mode</param>
            <returns>S_OK - OK, S_FALSE - skip this file</returns>
        </member>
        <member name="M:SevenZip.IArchiveExtractCallback.PrepareOperation(SevenZip.AskMode)">
            <summary>
            PrepareOperation 7-zip function
            </summary>
            <param name="askExtractMode">Ask mode</param>
        </member>
        <member name="M:SevenZip.IArchiveExtractCallback.SetOperationResult(SevenZip.OperationResult)">
            <summary>
            Sets the operaton result
            </summary>
            <param name="operationResult">The operation result</param>
        </member>
        <member name="T:SevenZip.ICryptoGetTextPassword">
            <summary>
            7-zip ICryptoGetTextPassword imported interface to get the archive password.
            </summary>
        </member>
        <member name="M:SevenZip.ICryptoGetTextPassword.CryptoGetTextPassword(System.String@)">
            <summary>
            Gets password for the archive
            </summary>
            <param name="password">Password for the archive</param>
            <returns>Zero if everything is OK</returns>
        </member>
        <member name="F:SevenZip.ArchiveExtractCallback._bytesCount">
            <summary>
            For Compressing event.
            </summary>
        </member>
        <member name="F:SevenZip.ArchiveExtractCallback._doneRate">
            <summary>
            Rate of the done work from [0, 1].
            </summary>
        </member>
        <member name="M:SevenZip.ArchiveExtractCallback.#ctor(SevenZip.IInArchive,System.String,System.Int32,System.Boolean,System.Collections.Generic.List{System.UInt32},SevenZip.SevenZipExtractor)">
            <summary>
            Initializes a new instance of the ArchiveExtractCallback class
            </summary>
            <param name="archive">IInArchive interface for the archive</param>
            <param name="directory">Directory where files are to be unpacked to</param>
            <param name="filesCount">The archive files count</param>'
            <param name="extractor">The owner of the callback</param>
            <param name="actualIndexes">The list of actual indexes (solid archives support)</param>
            <param name="directoryStructure">The value indicating whether to preserve directory structure of extracted files.</param>
        </member>
        <member name="M:SevenZip.ArchiveExtractCallback.#ctor(SevenZip.IInArchive,System.String,System.Int32,System.Boolean,System.Collections.Generic.List{System.UInt32},System.String,SevenZip.SevenZipExtractor)">
            <summary>
            Initializes a new instance of the ArchiveExtractCallback class
            </summary>
            <param name="archive">IInArchive interface for the archive</param>
            <param name="directory">Directory where files are to be unpacked to</param>
            <param name="filesCount">The archive files count</param>
            <param name="password">Password for the archive</param>
            <param name="extractor">The owner of the callback</param>
            <param name="actualIndexes">The list of actual indexes (solid archives support)</param>
            <param name="directoryStructure">The value indicating whether to preserve directory structure of extracted files.</param>
        </member>
        <member name="M:SevenZip.ArchiveExtractCallback.#ctor(SevenZip.IInArchive,System.IO.Stream,System.Int32,System.UInt32,SevenZip.SevenZipExtractor)">
            <summary>
            Initializes a new instance of the ArchiveExtractCallback class
            </summary>
            <param name="archive">IInArchive interface for the archive</param>
            <param name="stream">The stream where files are to be unpacked to</param>
            <param name="filesCount">The archive files count</param>
            <param name="fileIndex">The file index for the stream</param>
            <param name="extractor">The owner of the callback</param>
        </member>
        <member name="M:SevenZip.ArchiveExtractCallback.#ctor(SevenZip.IInArchive,System.IO.Stream,System.Int32,System.UInt32,System.String,SevenZip.SevenZipExtractor)">
            <summary>
            Initializes a new instance of the ArchiveExtractCallback class
            </summary>
            <param name="archive">IInArchive interface for the archive</param>
            <param name="stream">The stream where files are to be unpacked to</param>
            <param name="filesCount">The archive files count</param>
            <param name="fileIndex">The file index for the stream</param>
            <param name="password">Password for the archive</param>
            <param name="extractor">The owner of the callback</param>
        </member>
        <member name="M:SevenZip.ArchiveExtractCallback.SetTotal(System.UInt64)">
            <summary>
            Gives the size of the unpacked archive files
            </summary>
            <param name="total">Size of the unpacked archive files (in bytes)</param>
        </member>
        <member name="M:SevenZip.ArchiveExtractCallback.GetStream(System.UInt32,SevenZip.ISequentialOutStream@,SevenZip.AskMode)">
            <summary>
            Sets output stream for writing unpacked data
            </summary>
            <param name="index">Current file index</param>
            <param name="outStream">Output stream pointer</param>
            <param name="askExtractMode">Extraction mode</param>
            <returns>0 if OK</returns>
        </member>
        <member name="M:SevenZip.ArchiveExtractCallback.SetOperationResult(SevenZip.OperationResult)">
            <summary>
            Called when the archive was extracted
            </summary>
            <param name="operationResult"></param>
        </member>
        <member name="M:SevenZip.ArchiveExtractCallback.CryptoGetTextPassword(System.String@)">
            <summary>
            Sets password for the archive
            </summary>
            <param name="password">Password for the archive</param>
            <returns>Zero if everything is OK</returns>
        </member>
        <member name="M:SevenZip.ArchiveExtractCallback.ValidateFileName(System.String)">
            <summary>
            Validates the file name and ensures that the directory to the file name is valid and creates intermediate directories if necessary
            </summary>
            <param name="fileName">File name</param>
            <returns>The valid file name</returns>
        </member>
        <member name="E:SevenZip.ArchiveExtractCallback.FileExtractionStarted">
            <summary>
            Occurs when a new file is going to be unpacked
            </summary>
            <remarks>Occurs when 7-zip engine requests for an output stream for a new file to unpack in</remarks>
        </member>
        <member name="E:SevenZip.ArchiveExtractCallback.FileExtractionFinished">
            <summary>
            Occurs when a file has been successfully unpacked
            </summary>
        </member>
        <member name="E:SevenZip.ArchiveExtractCallback.Open">
            <summary>
            Occurs when the archive is opened and 7-zip sends the size of unpacked data
            </summary>
        </member>
        <member name="E:SevenZip.ArchiveExtractCallback.Extracting">
            <summary>
            Occurs when the extraction is performed
            </summary>
        </member>
        <member name="E:SevenZip.ArchiveExtractCallback.FileExists">
            <summary>
            Occurs during the extraction when a file already exists
            </summary>
        </member>
        <member name="T:SevenZip.ArchiveOpenCallback">
            <summary>
            Callback to handle the archive opening
            </summary>
        </member>
        <member name="T:SevenZip.IArchiveOpenCallback">
            <summary>
            7-zip IArchiveOpenCallback imported interface to handle the opening of an archive.
            </summary>
        </member>
        <member name="M:SevenZip.IArchiveOpenCallback.SetTotal(System.IntPtr,System.IntPtr)">
            <summary>
            Sets total data size
            </summary>
            <param name="files">Files pointer</param>
            <param name="bytes">Total size in bytes</param>
        </member>
        <member name="M:SevenZip.IArchiveOpenCallback.SetCompleted(System.IntPtr,System.IntPtr)">
            <summary>
            Sets completed size
            </summary>
            <param name="files">Files pointer</param>
            <param name="bytes">Completed size in bytes</param>
        </member>
        <member name="T:SevenZip.IArchiveOpenVolumeCallback">
            <summary>
            7-zip IArchiveOpenVolumeCallback imported interface to handle archive volumes.
            </summary>
        </member>
        <member name="M:SevenZip.IArchiveOpenVolumeCallback.GetProperty(SevenZip.ItemPropId,SevenZip.PropVariant@)">
            <summary>
            Gets the archive property data.
            </summary>
            <param name="propId">The property identificator.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:SevenZip.IArchiveOpenVolumeCallback.GetStream(System.String,SevenZip.IInStream@)">
            <summary>
            Gets the stream for reading the volume.
            </summary>
            <param name="name">The volume file name.</param>
            <param name="inStream">The IInStream pointer for reading.</param>
            <returns>Zero if Ok</returns>
        </member>
        <member name="M:SevenZip.ArchiveOpenCallback.Init(System.String)">
            <summary>
            Performs the common initialization.
            </summary>
            <param name="fileName">Volume file name.</param>
        </member>
        <member name="M:SevenZip.ArchiveOpenCallback.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ArchiveOpenCallback class.
            </summary>
            <param name="fileName">The archive file name.</param>
        </member>
        <member name="M:SevenZip.ArchiveOpenCallback.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ArchiveOpenCallback class.
            </summary>
            <param name="fileName">The archive file name.</param>
            <param name="password">Password for the archive.</param>
        </member>
        <member name="M:SevenZip.ArchiveOpenCallback.CryptoGetTextPassword(System.String@)">
            <summary>
            Sets password for the archive
            </summary>
            <param name="password">Password for the archive</param>
            <returns>Zero if everything is OK</returns>
        </member>
        <member name="T:SevenZip.ArchiveUpdateCallback">
            <summary>
            Archive update callback to handle the process of packing files
            </summary>
        </member>
        <member name="T:SevenZip.IArchiveUpdateCallback">
            <summary>
            7-zip IArchiveUpdateCallback imported interface.
            </summary>
        </member>
        <member name="M:SevenZip.IArchiveUpdateCallback.SetTotal(System.UInt64)">
            <summary>
            Gives the size of the unpacked archive files.
            </summary>
            <param name="total">Size of the unpacked archive files (in bytes)</param>
        </member>
        <member name="M:SevenZip.IArchiveUpdateCallback.SetCompleted(System.UInt64@)">
            <summary>
            SetCompleted 7-zip internal function.
            </summary>
            <param name="completeValue"></param>
        </member>
        <member name="M:SevenZip.IArchiveUpdateCallback.GetUpdateItemInfo(System.UInt32,System.Int32@,System.Int32@,System.UInt32@)">
            <summary>
            Gets archive update mode.
            </summary>
            <param name="index">File index</param>
            <param name="newData">1 if new, 0 if not</param>
            <param name="newProperties">1 if new, 0 if not</param>
            <param name="indexInArchive">-1 if doesn't matter</param>
            <returns></returns>
        </member>
        <member name="M:SevenZip.IArchiveUpdateCallback.GetProperty(System.UInt32,SevenZip.ItemPropId,SevenZip.PropVariant@)">
            <summary>
            Gets the archive item property data.
            </summary>
            <param name="index">Item index</param>
            <param name="propId">Property identificator</param>
            <param name="value">Property value</param>
            <returns>Zero if Ok</returns>
        </member>
        <member name="M:SevenZip.IArchiveUpdateCallback.GetStream(System.UInt32,SevenZip.ISequentialInStream@)">
            <summary>
            Gets the stream for reading.
            </summary>
            <param name="index">The item index.</param>
            <param name="inStream">The ISequentialInStream pointer for reading.</param>
            <returns>Zero if Ok</returns>
        </member>
        <member name="M:SevenZip.IArchiveUpdateCallback.SetOperationResult(SevenZip.OperationResult)">
            <summary>
            Sets the result for currently performed operation.
            </summary>
            <param name="operationResult">The result value.</param>
        </member>
        <member name="M:SevenZip.IArchiveUpdateCallback.EnumProperties(System.IntPtr)">
            <summary>
            EnumProperties 7-zip internal function.
            </summary>
            <param name="enumerator">The enumerator pointer.</param>
            <returns></returns>
        </member>
        <member name="T:SevenZip.ICryptoGetTextPassword2">
            <summary>
            7-zip ICryptoGetTextPassword2 imported interface for setting the archive password.
            </summary>
        </member>
        <member name="M:SevenZip.ICryptoGetTextPassword2.CryptoGetTextPassword2(System.Int32@,System.String@)">
            <summary>
            Sets password for the archive
            </summary>
            <param name="passwordIsDefined">Specifies whether archive has a password or not (0 if not)</param>
            <param name="password">Password for the archive</param>
            <returns>Zero if everything is OK</returns>
        </member>
        <member name="F:SevenZip.ArchiveUpdateCallback._actualFilesCount">
            <summary>
            _files.Count if do not count directories
            </summary>
        </member>
        <member name="F:SevenZip.ArchiveUpdateCallback._bytesCount">
            <summary>
            For Compressing event.
            </summary>
        </member>
        <member name="F:SevenZip.ArchiveUpdateCallback._directoryStructure">
            <summary>
            No directories.
            </summary>
        </member>
        <member name="F:SevenZip.ArchiveUpdateCallback._doneRate">
            <summary>
            Rate of the done work from [0, 1]
            </summary>
        </member>
        <member name="F:SevenZip.ArchiveUpdateCallback._entries">
            <summary>
            The names of the archive entries
            </summary>
        </member>
        <member name="F:SevenZip.ArchiveUpdateCallback._files">
            <summary>
            Array of files to pack
            </summary>
        </member>
        <member name="F:SevenZip.ArchiveUpdateCallback._rootLength">
            <summary>
            Common root of file names length.
            </summary>
        </member>
        <member name="F:SevenZip.ArchiveUpdateCallback._streams">
            <summary>
            Input streams to be compressed.
            </summary>
        </member>
        <member name="M:SevenZip.ArchiveUpdateCallback.#ctor(System.IO.FileInfo[],System.Int32,SevenZip.SevenZipCompressor,SevenZip.UpdateData,System.Boolean)">
            <summary>
            Initializes a new instance of the ArchiveUpdateCallback class
            </summary>
            <param name="files">Array of files to pack</param>
            <param name="rootLength">Common file names root length</param>
            <param name="compressor">The owner of the callback</param>
            <param name="updateData">The compression parameters.</param>
            <param name="directoryStructure">Preserve directory structure.</param>
        </member>
        <member name="M:SevenZip.ArchiveUpdateCallback.#ctor(System.IO.FileInfo[],System.Int32,System.String,SevenZip.SevenZipCompressor,SevenZip.UpdateData,System.Boolean)">
            <summary>
            Initializes a new instance of the ArchiveUpdateCallback class
            </summary>
            <param name="files">Array of files to pack</param>
            <param name="rootLength">Common file names root length</param>
            <param name="password">The archive password</param>
            <param name="compressor">The owner of the callback</param>
            <param name="updateData">The compression parameters.</param>
            <param name="directoryStructure">Preserve directory structure.</param>
        </member>
        <member name="M:SevenZip.ArchiveUpdateCallback.#ctor(System.IO.Stream,SevenZip.SevenZipCompressor,SevenZip.UpdateData,System.Boolean)">
            <summary>
            Initializes a new instance of the ArchiveUpdateCallback class
            </summary>
            <param name="stream">The input stream</param>
            <param name="compressor">The owner of the callback</param>
            <param name="updateData">The compression parameters.</param>
            <param name="directoryStructure">Preserve directory structure.</param>
        </member>
        <member name="M:SevenZip.ArchiveUpdateCallback.#ctor(System.IO.Stream,System.String,SevenZip.SevenZipCompressor,SevenZip.UpdateData,System.Boolean)">
            <summary>
            Initializes a new instance of the ArchiveUpdateCallback class
            </summary>
            <param name="stream">The input stream</param>
            <param name="password">The archive password</param>
            <param name="compressor">The owner of the callback</param>
            <param name="updateData">The compression parameters.</param>
            <param name="directoryStructure">Preserve directory structure.</param>
        </member>
        <member name="M:SevenZip.ArchiveUpdateCallback.#ctor(System.Collections.Generic.Dictionary{System.String,System.IO.Stream},SevenZip.SevenZipCompressor,SevenZip.UpdateData,System.Boolean)">
            <summary>
            Initializes a new instance of the ArchiveUpdateCallback class
            </summary>
            <param name="streamDict">Dictionary&lt;file stream, name of the archive entry&gt;</param>
            <param name="compressor">The owner of the callback</param>
            <param name="updateData">The compression parameters.</param>
            <param name="directoryStructure">Preserve directory structure.</param>
        </member>
        <member name="M:SevenZip.ArchiveUpdateCallback.#ctor(System.Collections.Generic.Dictionary{System.String,System.IO.Stream},System.String,SevenZip.SevenZipCompressor,SevenZip.UpdateData,System.Boolean)">
            <summary>
            Initializes a new instance of the ArchiveUpdateCallback class
            </summary>
            <param name="streamDict">Dictionary&lt;file stream, name of the archive entry&gt;</param>
            <param name="password">The archive password</param>
            <param name="compressor">The owner of the callback</param>
            <param name="updateData">The compression parameters.</param>
            <param name="directoryStructure">Preserve directory structure.</param>
        </member>
        <member name="M:SevenZip.ArchiveUpdateCallback.EventsForGetStream(System.UInt32)">
            <summary>
            Raises events for the GetStream method.
            </summary>
            <param name="index">The current item index.</param>
            <returns>True if not cancelled; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.ArchiveUpdateCallback.GetStream(System.UInt32,SevenZip.ISequentialInStream@)">
            <summary>
            Gets the stream for 7-zip library.
            </summary>
            <param name="index">File index</param>
            <param name="inStream">Input file stream</param>
            <returns>Zero if Ok</returns>
        </member>
        <member name="P:SevenZip.ArchiveUpdateCallback.DefaultItemName">
            <summary>
            Gets or sets the default item name used in MemoryStream compression.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveUpdateCallback.FastCompression">
            <summary>
            Gets or sets the value indicating whether to compress as fast as possible, without calling events.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveUpdateCallback.DictionarySize">
            <summary>
            Gets or sets the dictionary size.
            </summary>
        </member>
        <member name="E:SevenZip.ArchiveUpdateCallback.FileCompressionStarted">
            <summary>
            Occurs when the next file is going to be packed.
            </summary>
            <remarks>Occurs when 7-zip engine requests for an input stream for the next file to pack it</remarks>
        </member>
        <member name="E:SevenZip.ArchiveUpdateCallback.Compressing">
            <summary>
            Occurs when data are being compressed.
            </summary>
        </member>
        <member name="E:SevenZip.ArchiveUpdateCallback.FileCompressionFinished">
            <summary>
            Occurs when the current file was compressed.
            </summary>
        </member>
        <member name="T:SevenZip.PropArray">
            <summary>
            The structure to fix x64 and x32 variant size mismatch.
            </summary>
        </member>
        <member name="T:SevenZip.PropVariant">
            <summary>
            COM VARIANT structure with special interface routines.
            </summary>
        </member>
        <member name="F:SevenZip.PropVariant._value">
            <summary>
            IntPtr variant value.
            </summary>
        </member>
        <member name="F:SevenZip.PropVariant._int32Value">
            <summary>
            Signed int variant value.
            </summary>
        </member>
        <member name="F:SevenZip.PropVariant._uInt32Value">
            <summary>
            Unsigned int variant value.
            </summary>
        </member>
        <member name="F:SevenZip.PropVariant._int64Value">
            <summary>
            Long variant value.
            </summary>
        </member>
        <member name="F:SevenZip.PropVariant._uInt64Value">
            <summary>
            Unsigned long variant value.
            </summary>
        </member>
        <member name="F:SevenZip.PropVariant._fileTime">
            <summary>
            FILETIME variant value.
            </summary>
        </member>
        <member name="F:SevenZip.PropVariant._propArray">
            <summary>
            The PropArray instance to fix the variant size on x64 bit systems.
            </summary>
        </member>
        <member name="M:SevenZip.PropVariant.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current PropVariant.
            </summary>
            <param name="obj">The System.Object to compare with the current PropVariant.</param>
            <returns>true if the specified System.Object is equal to the current PropVariant; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.PropVariant.Equals(SevenZip.PropVariant)">
            <summary>
            Determines whether the specified PropVariant is equal to the current PropVariant.
            </summary>
            <param name="afi">The PropVariant to compare with the current PropVariant.</param>
            <returns>true if the specified PropVariant is equal to the current PropVariant; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.PropVariant.GetHashCode">
            <summary>
             Serves as a hash function for a particular type.
            </summary>
            <returns> A hash code for the current PropVariant.</returns>
        </member>
        <member name="M:SevenZip.PropVariant.ToString">
            <summary>
            Returns a System.String that represents the current PropVariant.
            </summary>
            <returns>A System.String that represents the current PropVariant.</returns>
        </member>
        <member name="M:SevenZip.PropVariant.op_Equality(SevenZip.PropVariant,SevenZip.PropVariant)">
            <summary>
            Determines whether the specified PropVariant instances are considered equal.
            </summary>
            <param name="afi1">The first PropVariant to compare.</param>
            <param name="afi2">The second PropVariant to compare.</param>
            <returns>true if the specified PropVariant instances are considered equal; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.PropVariant.op_Inequality(SevenZip.PropVariant,SevenZip.PropVariant)">
            <summary>
            Determines whether the specified PropVariant instances are not considered equal.
            </summary>
            <param name="afi1">The first PropVariant to compare.</param>
            <param name="afi2">The second PropVariant to compare.</param>
            <returns>true if the specified PropVariant instances are not considered equal; otherwise, false.</returns>
        </member>
        <member name="P:SevenZip.PropVariant.VarType">
            <summary>
            Gets or sets variant type.
            </summary>
        </member>
        <member name="P:SevenZip.PropVariant.Value">
            <summary>
            Gets or sets the pointer value of the COM variant
            </summary>
        </member>
        <member name="P:SevenZip.PropVariant.UInt32Value">
            <summary>
            Gets or sets the UInt32 value of the COM variant.
            </summary>
        </member>
        <member name="P:SevenZip.PropVariant.Int32Value">
            <summary>
            Gets or sets the UInt32 value of the COM variant.
            </summary>
        </member>
        <member name="P:SevenZip.PropVariant.Int64Value">
            <summary>
            Gets or sets the Int64 value of the COM variant
            </summary>
        </member>
        <member name="P:SevenZip.PropVariant.UInt64Value">
            <summary>
            Gets or sets the UInt64 value of the COM variant
            </summary>
        </member>
        <member name="P:SevenZip.PropVariant.Object">
            <summary>
            Gets the object for this PropVariant.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SevenZip.AskMode">
            <summary>
            Stores file extraction modes.
            </summary>
        </member>
        <member name="F:SevenZip.AskMode.Extract">
            <summary>
            Extraction mode
            </summary>
        </member>
        <member name="F:SevenZip.AskMode.Test">
            <summary>
            Test mode
            </summary>
        </member>
        <member name="F:SevenZip.AskMode.Skip">
            <summary>
            Skip mode
            </summary>
        </member>
        <member name="T:SevenZip.OperationResult">
            <summary>
            Stores operation result values
            </summary>
        </member>
        <member name="F:SevenZip.OperationResult.Ok">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:SevenZip.OperationResult.UnsupportedMethod">
            <summary>
            Method is unsupported
            </summary>
        </member>
        <member name="F:SevenZip.OperationResult.DataError">
            <summary>
            Data error has occured
            </summary>
        </member>
        <member name="F:SevenZip.OperationResult.CrcError">
            <summary>
            CrcError has occured
            </summary>
        </member>
        <member name="T:SevenZip.ItemPropId">
            <summary>
            Codes of item properities
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.NoProperty">
            <summary>
            No property
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.HandlerItemIndex">
            <summary>
            Handler item index
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Path">
            <summary>
            Item path
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Name">
            <summary>
            Item name
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Extension">
            <summary>
            Item extension
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.IsDirectory">
            <summary>
            true if the item is a folder; otherwise, false
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Size">
            <summary>
            Item size
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.PackedSize">
            <summary>
            Item packed sise; usually absent
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Attributes">
            <summary>
            Item attributes; usually absent
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.CreationTime">
            <summary>
            Item creation time; usually absent
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.LastAccessTime">
            <summary>
            Item last access time; usually absent
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.LastWriteTime">
            <summary>
            Item last write time
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Solid">
            <summary>
            true if the item is solid; otherwise, false
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Commented">
            <summary>
            true if the item is commented; otherwise, false
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Encrypted">
            <summary>
            true if the item is encrypted; otherwise, false
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.SplitBefore">
            <summary>
            (?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.SplitAfter">
            <summary>
            (?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.DictionarySize">
            <summary>
            Dictionary size(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Crc">
            <summary>
            Item CRC checksum
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Type">
            <summary>
            Item type(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.IsAnti">
            <summary>
            (?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Method">
            <summary>
            Compression method
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.HostOS">
            <summary>
            (?); usually absent
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.FileSystem">
            <summary>
            Item file system; usually absent
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.User">
            <summary>
            Item user(?); usually absent
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Group">
            <summary>
            Item group(?); usually absent
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Block">
            <summary>
            Bloack size(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Comment">
            <summary>
            Item comment; usually absent
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Position">
            <summary>
            Item position
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Prefix">
            <summary>
            Item prefix(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.NumSubDirs">
            <summary>
            Number of subdirectories
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.NumSubFiles">
            <summary>
            Numbers of subfiles
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.UnpackVersion">
            <summary>
            The archive legacy unpacker version
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Volume">
            <summary>
            Volume(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.IsVolume">
            <summary>
            Is a volume
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Offset">
            <summary>
            Offset value(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Links">
            <summary>
            Links(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.NumBlocks">
            <summary>
            Number of blocks
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.NumVolumes">
            <summary>
            Number of volumes(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.TimeType">
            <summary>
            Time type(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Bit64">
            <summary>
            64-bit(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.BigEndian">
            <summary>
            BigEndian
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Cpu">
            <summary>
            Cpu(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.PhysicalSize">
            <summary>
            Physical archive size
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.HeadersSize">
            <summary>
            Headers size
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Checksum">
            <summary>
            Archive checksum
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.TotalSize">
            <summary>
            (?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.FreeSpace">
            <summary>
            (?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.ClusterSize">
            <summary>
            Cluster size(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.VolumeName">
            <summary>
            Volume name(?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.LocalName">
            <summary>
            Local item name(?); usually absent
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.Provider">
            <summary>
            (?)
            </summary>
        </member>
        <member name="F:SevenZip.ItemPropId.UserDefined">
            <summary>
            User defined property; usually absent
            </summary>
        </member>
        <member name="T:SevenZip.PropIdToName">
            <summary>
            PropId string names dictionary wrapper.
            </summary>
        </member>
        <member name="F:SevenZip.PropIdToName.PropIdNames">
            <summary>
            PropId string names
            </summary>
        </member>
        <member name="T:SevenZip.ISequentialInStream">
            <summary>
            7-zip ISequentialInStream imported interface
            </summary>
        </member>
        <member name="M:SevenZip.ISequentialInStream.Read(System.Byte[],System.UInt32)">
            <summary>
            Writes data to 7-zip packer
            </summary>
            <param name="data">Array of bytes available for writing</param>
            <param name="size">Array size</param>
            <returns>S_OK if success</returns>
            <remarks>If (size > 0) and there are bytes in stream, 
            this function must read at least 1 byte.
            This function is allowed to read less than "size" bytes.
            You must call Read function in loop, if you need exact amount of data.
            </remarks>
        </member>
        <member name="T:SevenZip.ISequentialOutStream">
            <summary>
            7-zip ISequentialOutStream imported interface
            </summary>
        </member>
        <member name="M:SevenZip.ISequentialOutStream.Write(System.Byte[],System.UInt32,System.IntPtr)">
            <summary>
            Writes data to unpacked file stream
            </summary>
            <param name="data">Array of bytes available for reading</param>
            <param name="size">Array size</param>
            <param name="processedSize">Processed data size</param>
            <returns>S_OK if success</returns>
            <remarks>If size != 0, return value is S_OK and (*processedSize == 0),
             then there are no more bytes in stream.
            If (size > 0) and there are bytes in stream, 
            this function must read at least 1 byte.
            This function is allowed to rwrite less than "size" bytes.
            You must call Write function in loop, if you need exact amount of data.
            </remarks>
        </member>
        <member name="T:SevenZip.IInStream">
            <summary>
            7-zip IInStream imported interface
            </summary>
        </member>
        <member name="M:SevenZip.IInStream.Read(System.Byte[],System.UInt32)">
            <summary>
            Read routine
            </summary>
            <param name="data">Array of bytes to set</param>
            <param name="size">Array size</param>
            <returns>Zero if Ok</returns>
        </member>
        <member name="M:SevenZip.IInStream.Seek(System.Int64,System.IO.SeekOrigin,System.IntPtr)">
            <summary>
            Seek routine
            </summary>
            <param name="offset">Offset value</param>
            <param name="seekOrigin">Seek origin value</param>
            <param name="newPosition">New position pointer</param>
        </member>
        <member name="T:SevenZip.IOutStream">
            <summary>
            7-zip IOutStream imported interface
            </summary>
        </member>
        <member name="M:SevenZip.IOutStream.Write(System.Byte[],System.UInt32,System.IntPtr)">
            <summary>
            Write routine
            </summary>
            <param name="data">Array of bytes to get</param>
            <param name="size">Array size</param>
            <param name="processedSize">Processed size</param>
            <returns>Zero if Ok</returns>
        </member>
        <member name="M:SevenZip.IOutStream.Seek(System.Int64,System.IO.SeekOrigin,System.IntPtr)">
            <summary>
            Seek routine
            </summary>
            <param name="offset">Offset value</param>
            <param name="seekOrigin">Seek origin value</param>
            <param name="newPosition">New position pointer</param>       
        </member>
        <member name="M:SevenZip.IOutStream.SetSize(System.Int64)">
            <summary>
            Set size routine
            </summary>
            <param name="newSize">New size value</param>
            <returns>Zero if Ok</returns>
        </member>
        <member name="T:SevenZip.IInArchive">
            <summary>
            7-zip essential in archive interface
            </summary>
        </member>
        <member name="M:SevenZip.IInArchive.Open(SevenZip.IInStream,System.UInt64@,SevenZip.IArchiveOpenCallback)">
            <summary>
            Opens archive for reading.
            </summary>
            <param name="stream">Archive file stream</param>
            <param name="maxCheckStartPosition">Maximum start position for checking</param>
            <param name="openArchiveCallback">Callback for opening archive</param>
            <returns></returns>
        </member>
        <member name="M:SevenZip.IInArchive.Close">
            <summary>
            Closes the archive.
            </summary>
        </member>
        <member name="M:SevenZip.IInArchive.GetNumberOfItems">
            <summary>
            Gets the number of files in the archive file table  .          
            </summary>
            <returns>The number of files in the archive</returns>
        </member>
        <member name="M:SevenZip.IInArchive.GetProperty(System.UInt32,SevenZip.ItemPropId,SevenZip.PropVariant@)">
            <summary>
            Retrieves specific property data.
            </summary>
            <param name="index">File index in the archive file table</param>
            <param name="propId">Property code</param>
            <param name="value">Property variant value</param>
        </member>
        <member name="M:SevenZip.IInArchive.Extract(System.UInt32[],System.UInt32,System.Int32,SevenZip.IArchiveExtractCallback)">
            <summary>
            Extracts files from the opened archive.
            </summary>
            <param name="indexes">indexes of files to be extracted (must be sorted)</param>
            <param name="numItems">0xFFFFFFFF means all files</param>
            <param name="testMode">testMode != 0 means "test files operation"</param>
            <param name="extractCallback">IArchiveExtractCallback for operations handling</param>
            <returns>0 if success</returns>
        </member>
        <member name="M:SevenZip.IInArchive.GetArchiveProperty(SevenZip.ItemPropId,SevenZip.PropVariant@)">
            <summary>
            Gets archive property data
            </summary>
            <param name="propId">Archive property identificator</param>
            <param name="value">Archive property value</param>
        </member>
        <member name="M:SevenZip.IInArchive.GetNumberOfProperties">
            <summary>
            Gets the number of properties
            </summary>
            <returns>The number of properties</returns>
        </member>
        <member name="M:SevenZip.IInArchive.GetPropertyInfo(System.UInt32,System.String@,SevenZip.ItemPropId@,System.UInt16@)">
            <summary>
            Gets property information
            </summary>
            <param name="index">Item index</param>
            <param name="name">Name</param>
            <param name="propId">Property identificator</param>
            <param name="varType">Variant type</param>
        </member>
        <member name="M:SevenZip.IInArchive.GetNumberOfArchiveProperties">
            <summary>
            Gets the number of archive properties
            </summary>
            <returns>The number of archive properties</returns>
        </member>
        <member name="M:SevenZip.IInArchive.GetArchivePropertyInfo(System.UInt32,System.String@,SevenZip.ItemPropId@,System.UInt16@)">
            <summary>
            Gets the archive property information
            </summary>
            <param name="index">Item index</param>
            <param name="name">Name</param>
            <param name="propId">Property identificator</param>
            <param name="varType">Variant type</param>
        </member>
        <member name="T:SevenZip.IOutArchive">
            <summary>
            7-zip essential out archive interface
            </summary>
        </member>
        <member name="M:SevenZip.IOutArchive.UpdateItems(SevenZip.ISequentialOutStream,System.UInt32,SevenZip.IArchiveUpdateCallback)">
            <summary>
            Updates archive items
            </summary>
            <param name="outStream">The ISequentialOutStream pointer for writing the archive data</param>
            <param name="numItems">Number of archive items</param>
            <param name="updateCallback">The IArchiveUpdateCallback pointer</param>
            <returns>Zero if Ok</returns>
        </member>
        <member name="M:SevenZip.IOutArchive.GetFileTimeType(System.IntPtr)">
            <summary>
            Gets file time type(?)
            </summary>
            <param name="type">Type pointer</param>
        </member>
        <member name="T:SevenZip.ISetProperties">
            <summary>
            7-zip ISetProperties interface for setting various archive properties
            </summary>
        </member>
        <member name="M:SevenZip.ISetProperties.SetProperties(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Sets the archive properties
            </summary>
            <param name="names">The names of the properties</param>
            <param name="values">The values of the properties</param>
            <param name="numProperties">The properties count</param>
            <returns></returns>        
        </member>
        <member name="T:SevenZip.EventSynchronizationStrategy">
            <summary>
            The way of the event synchronization.
            </summary>
        </member>
        <member name="F:SevenZip.EventSynchronizationStrategy.Default">
            <summary>
            Events are called synchronously if user can do some action; that is, cancel the execution process for example.
            </summary>
        </member>
        <member name="F:SevenZip.EventSynchronizationStrategy.AlwaysAsynchronous">
            <summary>
            Always call events asynchronously.
            </summary>
        </member>
        <member name="F:SevenZip.EventSynchronizationStrategy.AlwaysSynchronous">
            <summary>
            Always call events synchronously.
            </summary>
        </member>
        <member name="T:SevenZip.SevenZipBase">
            <summary>
            SevenZip Extractor/Compressor base class. Implements Password string, ReportErrors flag.
            </summary>
        </member>
        <member name="F:SevenZip.SevenZipBase.NeedsToBeRecreated">
            <summary>
            True if the instance of the class needs to be recreated in new thread context; otherwise, false.
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipBase.AsyncCallbackMethod(System.IAsyncResult)">
            <summary>
            AsyncCallback implementation used in asynchronous invocations.
            </summary>
            <param name="ar">IAsyncResult instance.</param>
        </member>
        <member name="F:SevenZip.SevenZipBase._exceptions">
            <summary>
            User exceptions thrown during the requested operations, for example, in events.
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipBase.#ctor">
            <summary>
            Initializes a new instance of the SevenZipBase class.
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SevenZipBase class
            </summary>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipBase.Finalize">
            <summary>
            Removes the UniqueID from the list.
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipBase.ThrowException(SevenZip.CallbackBase,System.Exception[])">
            <summary>
            Throws the specified exception when is able to.
            </summary>
            <param name="e">The exception to throw.</param>
            <param name="handler">The handler responsible for the exception.</param>
        </member>
        <member name="M:SevenZip.SevenZipBase.CheckedExecute(System.Int32,System.String,SevenZip.CallbackBase)">
            <summary>
            Throws exception if HRESULT != 0.
            </summary>
            <param name="hresult">Result code to check.</param>
            <param name="message">Exception message.</param>
            <param name="handler">The class responsible for the callback.</param>
        </member>
        <member name="M:SevenZip.SevenZipBase.SetLibraryPath(System.String)">
            <summary>
            Changes the path to the 7-zip native library.
            </summary>
            <param name="libraryPath">The path to the 7-zip native library.</param>
        </member>
        <member name="M:SevenZip.SevenZipBase.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current SevenZipBase.
            </summary>
            <param name="obj">The System.Object to compare with the current SevenZipBase.</param>
            <returns>true if the specified System.Object is equal to the current SevenZipBase; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.SevenZipBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns> A hash code for the current SevenZipBase.</returns>
        </member>
        <member name="M:SevenZip.SevenZipBase.ToString">
            <summary>
            Returns a System.String that represents the current SevenZipBase.
            </summary>
            <returns>A System.String that represents the current SevenZipBase.</returns>
        </member>
        <member name="P:SevenZip.SevenZipBase.EventSynchronization">
            <summary>
            Gets or sets the event synchronization strategy.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipBase.UniqueID">
            <summary>
            Gets the unique identificator of this SevenZipBase instance.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipBase.Password">
            <summary>
            Gets or sets the archive password
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipBase.ReportErrors">
            <summary>
            Gets or sets throw exceptions on archive errors flag
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipBase.Exceptions">
            <summary>
            Gets the user exceptions thrown during the requested operations, for example, in events.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipBase.CurrentLibraryFeatures">
            <summary>
            Gets the current library features.
            </summary>
        </member>
        <member name="T:SevenZip.ArchiveFileInfo">
            <summary>
            Struct for storing information about files in the 7-zip archive.
            </summary>
        </member>
        <member name="M:SevenZip.ArchiveFileInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current ArchiveFileInfo.
            </summary>
            <param name="obj">The System.Object to compare with the current ArchiveFileInfo.</param>
            <returns>true if the specified System.Object is equal to the current ArchiveFileInfo; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.ArchiveFileInfo.Equals(SevenZip.ArchiveFileInfo)">
            <summary>
            Determines whether the specified ArchiveFileInfo is equal to the current ArchiveFileInfo.
            </summary>
            <param name="afi">The ArchiveFileInfo to compare with the current ArchiveFileInfo.</param>
            <returns>true if the specified ArchiveFileInfo is equal to the current ArchiveFileInfo; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.ArchiveFileInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns> A hash code for the current ArchiveFileInfo.</returns>
        </member>
        <member name="M:SevenZip.ArchiveFileInfo.ToString">
            <summary>
            Returns a System.String that represents the current ArchiveFileInfo.
            </summary>
            <returns>A System.String that represents the current ArchiveFileInfo.</returns>
        </member>
        <member name="M:SevenZip.ArchiveFileInfo.op_Equality(SevenZip.ArchiveFileInfo,SevenZip.ArchiveFileInfo)">
            <summary>
            Determines whether the specified ArchiveFileInfo instances are considered equal.
            </summary>
            <param name="afi1">The first ArchiveFileInfo to compare.</param>
            <param name="afi2">The second ArchiveFileInfo to compare.</param>
            <returns>true if the specified ArchiveFileInfo instances are considered equal; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.ArchiveFileInfo.op_Inequality(SevenZip.ArchiveFileInfo,SevenZip.ArchiveFileInfo)">
            <summary>
            Determines whether the specified ArchiveFileInfo instances are not considered equal.
            </summary>
            <param name="afi1">The first ArchiveFileInfo to compare.</param>
            <param name="afi2">The second ArchiveFileInfo to compare.</param>
            <returns>true if the specified ArchiveFileInfo instances are not considered equal; otherwise, false.</returns>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.Index">
            <summary>
            Gets or sets index of the file in the archive file table.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.FileName">
            <summary>
            Gets or sets file name
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.LastWriteTime">
            <summary>
            Gets or sets the file last write time.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.CreationTime">
            <summary>
            Gets or sets the file creation time.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.LastAccessTime">
            <summary>
            Gets or sets the file creation time.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.Size">
            <summary>
            Gets or sets size of the file (unpacked).
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.Crc">
            <summary>
            Gets or sets CRC checksum of the file.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.Attributes">
            <summary>
            Gets or sets file attributes.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.IsDirectory">
            <summary>
            Gets or sets being a directory.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.Encrypted">
            <summary>
            Gets or sets being encrypted.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveFileInfo.Comment">
            <summary>
            Gets or sets comment for the file.
            </summary>
        </member>
        <member name="T:SevenZip.ArchiveProperty">
            <summary>
            Archive property struct.
            </summary>
        </member>
        <member name="M:SevenZip.ArchiveProperty.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current ArchiveProperty.
            </summary>
            <param name="obj">The System.Object to compare with the current ArchiveProperty.</param>
            <returns>true if the specified System.Object is equal to the current ArchiveProperty; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.ArchiveProperty.Equals(SevenZip.ArchiveProperty)">
            <summary>
            Determines whether the specified ArchiveProperty is equal to the current ArchiveProperty.
            </summary>
            <param name="afi">The ArchiveProperty to compare with the current ArchiveProperty.</param>
            <returns>true if the specified ArchiveProperty is equal to the current ArchiveProperty; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.ArchiveProperty.GetHashCode">
            <summary>
             Serves as a hash function for a particular type.
            </summary>
            <returns> A hash code for the current ArchiveProperty.</returns>
        </member>
        <member name="M:SevenZip.ArchiveProperty.ToString">
            <summary>
            Returns a System.String that represents the current ArchiveProperty.
            </summary>
            <returns>A System.String that represents the current ArchiveProperty.</returns>
        </member>
        <member name="M:SevenZip.ArchiveProperty.op_Equality(SevenZip.ArchiveProperty,SevenZip.ArchiveProperty)">
            <summary>
            Determines whether the specified ArchiveProperty instances are considered equal.
            </summary>
            <param name="afi1">The first ArchiveProperty to compare.</param>
            <param name="afi2">The second ArchiveProperty to compare.</param>
            <returns>true if the specified ArchiveProperty instances are considered equal; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.ArchiveProperty.op_Inequality(SevenZip.ArchiveProperty,SevenZip.ArchiveProperty)">
            <summary>
            Determines whether the specified ArchiveProperty instances are not considered equal.
            </summary>
            <param name="afi1">The first ArchiveProperty to compare.</param>
            <param name="afi2">The second ArchiveProperty to compare.</param>
            <returns>true if the specified ArchiveProperty instances are not considered equal; otherwise, false.</returns>
        </member>
        <member name="P:SevenZip.ArchiveProperty.Name">
            <summary>
            Gets the name of the archive property.
            </summary>
        </member>
        <member name="P:SevenZip.ArchiveProperty.Value">
            <summary>
            Gets the value of the archive property.
            </summary>
        </member>
        <member name="T:SevenZip.CompressionMode">
            <summary>
            Archive compression mode.
            </summary>
        </member>
        <member name="F:SevenZip.CompressionMode.Create">
            <summary>
            Create a new archive; overwrite the existing one.
            </summary>
        </member>
        <member name="F:SevenZip.CompressionMode.Append">
            <summary>
            Add data to the archive.
            </summary>
        </member>
        <member name="F:SevenZip.InternalCompressionMode.Create">
            <summary>
            Create a new archive; overwrite the existing one.
            </summary>
        </member>
        <member name="F:SevenZip.InternalCompressionMode.Append">
            <summary>
            Add data to the archive.
            </summary>
        </member>
        <member name="F:SevenZip.InternalCompressionMode.Modify">
            <summary>
            Modify archive data.
            </summary>
        </member>
        <member name="T:SevenZip.ZipEncryptionMethod">
            <summary>
            Zip encryption method enum.
            </summary>
        </member>
        <member name="F:SevenZip.ZipEncryptionMethod.ZipCrypto">
            <summary>
            ZipCrypto encryption method.
            </summary>
        </member>
        <member name="F:SevenZip.ZipEncryptionMethod.Aes128">
            <summary>
            AES 128 bit encryption method.
            </summary>
        </member>
        <member name="F:SevenZip.ZipEncryptionMethod.Aes192">
            <summary>
            AES 192 bit encryption method.
            </summary>
        </member>
        <member name="F:SevenZip.ZipEncryptionMethod.Aes256">
            <summary>
            AES 256 bit encryption method.
            </summary>
        </member>
        <member name="T:SevenZip.UpdateData">
            <summary>
            Archive update data for UpdateCallback.
            </summary>
        </member>
        <member name="T:SevenZip.PercentDoneEventArgs">
            <summary>
            EventArgs for storing PercentDone property.
            </summary>
        </member>
        <member name="M:SevenZip.PercentDoneEventArgs.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the PercentDoneEventArgs class.
            </summary>
            <param name="percentDone">The percent of finished work.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:SevenZip.PercentDoneEventArgs.ProducePercentDone(System.Single)">
            <summary>
            Converts a [0, 1] rate to its percent equivalent.
            </summary>
            <param name="doneRate">The rate of the done work.</param>
            <returns>Percent integer equivalent.</returns>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="P:SevenZip.PercentDoneEventArgs.PercentDone">
            <summary>
            Gets the percent of finished work.
            </summary>
        </member>
        <member name="P:SevenZip.PercentDoneEventArgs.Cancel">
            <summary>
            Gets or sets whether to stop the current archive operation.
            </summary>
        </member>
        <member name="T:SevenZip.ProgressEventArgs">
            <summary>
            The EventArgs class for accurate progress handling.
            </summary>
        </member>
        <member name="M:SevenZip.ProgressEventArgs.#ctor(System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the ProgressEventArgs class.
            </summary>
            <param name="percentDone">The percent of finished work.</param>
            <param name="percentDelta">The percent of work done after the previous event.</param>
        </member>
        <member name="P:SevenZip.ProgressEventArgs.PercentDelta">
            <summary>
            Gets the change in done work percentage.
            </summary>
        </member>
        <member name="T:SevenZip.FileInfoEventArgs">
            <summary>
            EventArgs used to report the file information which is going to be packed.
            </summary>
        </member>
        <member name="M:SevenZip.FileInfoEventArgs.#ctor(SevenZip.ArchiveFileInfo,System.Byte)">
            <summary>
            Initializes a new instance of the FileInfoEventArgs class.
            </summary>
            <param name="fileInfo">The current ArchiveFileInfo.</param>
            <param name="percentDone">The percent of finished work.</param>
        </member>
        <member name="P:SevenZip.FileInfoEventArgs.FileInfo">
            <summary>
            Gets the corresponding FileInfo to the event.
            </summary>
        </member>
        <member name="T:SevenZip.OpenEventArgs">
            <summary>
            EventArgs used to report the size of unpacked archive data
            </summary>
        </member>
        <member name="M:SevenZip.OpenEventArgs.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the OpenEventArgs class
            </summary>
            <param name="totalSize">Size of unpacked archive data</param>
        </member>
        <member name="P:SevenZip.OpenEventArgs.TotalSize">
            <summary>
            Gets the size of unpacked archive data
            </summary>
        </member>
        <member name="T:SevenZip.IntEventArgs">
            <summary>
            Stores an int number
            </summary>
        </member>
        <member name="M:SevenZip.IntEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the IntEventArgs class
            </summary>
            <param name="value">Useful data carried by the IntEventArgs class</param>
        </member>
        <member name="P:SevenZip.IntEventArgs.Value">
            <summary>
            Gets the value of the IntEventArgs class
            </summary>
        </member>
        <member name="T:SevenZip.FileNameEventArgs">
            <summary>
            EventArgs class which stores the file name.
            </summary>
        </member>
        <member name="M:SevenZip.FileNameEventArgs.#ctor(System.String,System.Byte)">
            <summary>
            Initializes a new instance of the FileNameEventArgs class.
            </summary>
            <param name="fileName">The file name.</param>
            <param name="percentDone">The percent of finished work</param>
        </member>
        <member name="P:SevenZip.FileNameEventArgs.FileName">
            <summary>
            Gets the file name.
            </summary>
        </member>
        <member name="T:SevenZip.FileOverwriteEventArgs">
            <summary>
            EventArgs for FileExists event, stores the file name and asks whether to overwrite it in case it already exists.
            </summary>
        </member>
        <member name="M:SevenZip.FileOverwriteEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FileOverwriteEventArgs class
            </summary>
            <param name="fileName">The file name.</param>
        </member>
        <member name="P:SevenZip.FileOverwriteEventArgs.Cancel">
            <summary>
            Gets or sets the value indicating whether to cancel the extraction.
            </summary>
        </member>
        <member name="P:SevenZip.FileOverwriteEventArgs.FileName">
            <summary>
            Gets or sets the file name to extract to. Null means skip.
            </summary>
        </member>
        <member name="T:SevenZip.ExtractFileCallbackReason">
            <summary>
            The reason for calling <see cref="T:SevenZip.ExtractFileCallback"/>.
            </summary>
        </member>
        <member name="F:SevenZip.ExtractFileCallbackReason.Start">
            <summary>
            <see cref="T:SevenZip.ExtractFileCallback"/> is called the first time for a file.
            </summary>
        </member>
        <member name="F:SevenZip.ExtractFileCallbackReason.Done">
            <summary>
            All data has been written to the target without any exceptions.
            </summary>
        </member>
        <member name="F:SevenZip.ExtractFileCallbackReason.Failure">
            <summary>
            An exception occured during extraction of the file.
            </summary>
        </member>
        <member name="T:SevenZip.ExtractFileCallbackArgs">
            <summary>
            The arguments passed to <see cref="T:SevenZip.ExtractFileCallback"/>.
            </summary>
            <remarks>
            For each file, <see cref="T:SevenZip.ExtractFileCallback"/> is first called with <see cref="P:SevenZip.ExtractFileCallbackArgs.Reason"/>
            set to <see cref="F:SevenZip.ExtractFileCallbackReason.Start"/>. If the callback chooses to extract the
            file data by setting <see cref="P:SevenZip.ExtractFileCallbackArgs.ExtractToFile"/> or <see cref="P:SevenZip.ExtractFileCallbackArgs.ExtractToStream"/>, the callback
            will be called a second time with <see cref="P:SevenZip.ExtractFileCallbackArgs.Reason"/> set to
            <see cref="F:SevenZip.ExtractFileCallbackReason.Done"/> or <see cref="F:SevenZip.ExtractFileCallbackReason.Failure"/>
            to allow for any cleanup task like closing the stream.
            </remarks>
        </member>
        <member name="M:SevenZip.ExtractFileCallbackArgs.#ctor(SevenZip.ArchiveFileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:SevenZip.ExtractFileCallbackArgs"/> class.
            </summary>
            <param name="archiveFileInfo">The information about file in the archive.</param>
        </member>
        <member name="P:SevenZip.ExtractFileCallbackArgs.ArchiveFileInfo">
            <summary>
            Information about file in the archive.
            </summary>
            <value>Information about file in the archive.</value>
        </member>
        <member name="P:SevenZip.ExtractFileCallbackArgs.Reason">
            <summary>
            The reason for calling <see cref="T:SevenZip.ExtractFileCallback"/>.
            </summary>
            <remarks>
            If neither <see cref="P:SevenZip.ExtractFileCallbackArgs.ExtractToFile"/> nor <see cref="P:SevenZip.ExtractFileCallbackArgs.ExtractToStream"/> is set,
             <see cref="T:SevenZip.ExtractFileCallback"/> will not be called after <see cref="F:SevenZip.ExtractFileCallbackReason.Start"/>.
            </remarks>
            <value>The reason.</value>
        </member>
        <member name="P:SevenZip.ExtractFileCallbackArgs.Exception">
            <summary>
            The exception that occurred during extraction.
            </summary>
            <value>The _Exception.</value>
            <remarks>
            If the callback is called with <see cref="P:SevenZip.ExtractFileCallbackArgs.Reason"/> set to <see cref="F:SevenZip.ExtractFileCallbackReason.Failure"/>,
            this member contains the _Exception that occurred.
            The default behavior is to rethrow the _Exception after return of the callback.
            However the callback can set <see cref="P:SevenZip.ExtractFileCallbackArgs.Exception"/> to <c>null</c> to swallow the _Exception
            and continue extraction with the next file.
            </remarks>
        </member>
        <member name="P:SevenZip.ExtractFileCallbackArgs.CancelExtraction">
            <summary>
            Gets or sets a value indicating whether to cancel the extraction.
            </summary>
            <value><c>true</c> to cancel the extraction; <c>false</c> to continue. The default is <c>false</c>.</value>
        </member>
        <member name="P:SevenZip.ExtractFileCallbackArgs.ExtractToFile">
            <summary>
            Gets or sets whether and where to extract the file.
            </summary>
            <value>The path where to extract the file to.</value>
            <remarks>
            If <see cref="P:SevenZip.ExtractFileCallbackArgs.ExtractToStream"/> is set, this mmember will be ignored.
            </remarks>
        </member>
        <member name="P:SevenZip.ExtractFileCallbackArgs.ExtractToStream">
            <summary>
            Gets or sets whether and where to extract the file.
            </summary>
            <value>The the extracted data is written to.</value>
            <remarks>
            If both this member and <see cref="P:SevenZip.ExtractFileCallbackArgs.ExtractToFile"/> are <c>null</c> (the defualt), the file
            will not be extracted and the callback will be be executed a second time with the <see cref="P:SevenZip.ExtractFileCallbackArgs.Reason"/>
            set to <see cref="F:SevenZip.ExtractFileCallbackReason.Done"/> or <see cref="F:SevenZip.ExtractFileCallbackReason.Failure"/>.
            </remarks>
        </member>
        <member name="P:SevenZip.ExtractFileCallbackArgs.ObjectData">
            <summary>
            Gets or sets any data that will be preserved between the <see cref="F:SevenZip.ExtractFileCallbackReason.Start"/> callback call
            and the <see cref="F:SevenZip.ExtractFileCallbackReason.Done"/> or <see cref="F:SevenZip.ExtractFileCallbackReason.Failure"/> calls.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:SevenZip.ExtractFileCallback">
            <summary>
            Callback delegate for <see cref="M:SevenZip.SevenZipExtractor.ExtractFiles(SevenZip.ExtractFileCallback)"/>.
            </summary>
        </member>
        <member name="T:SevenZip.SevenZipException">
            <summary>
            Base SevenZip exception class.
            </summary>
        </member>
        <member name="F:SevenZip.SevenZipException.USER_EXCEPTION_MESSAGE">
            <summary>
            The message for thrown user exceptions.
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipException.#ctor">
            <summary>
            Initializes a new instance of the SevenZipException class
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SevenZipException class
            </summary>
            <param name="defaultMessage">Default exception message</param>
        </member>
        <member name="M:SevenZip.SevenZipException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the SevenZipException class
            </summary>
            <param name="defaultMessage">Default exception message</param>
            <param name="message">Additional detailed message</param>
        </member>
        <member name="M:SevenZip.SevenZipException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SevenZipException class
            </summary>
            <param name="defaultMessage">Default exception message</param>
            <param name="message">Additional detailed message</param>
            <param name="inner">Inner exception occured</param>
        </member>
        <member name="M:SevenZip.SevenZipException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SevenZipException class
            </summary>
            <param name="defaultMessage">Default exception message</param>
            <param name="inner">Inner exception occured</param>
        </member>
        <member name="M:SevenZip.SevenZipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SevenZipException class
            </summary>
            <param name="info">All data needed for serialization or deserialization</param>
            <param name="context">Serialized stream descriptor</param>
        </member>
        <member name="T:SevenZip.ExtractionFailedException">
            <summary>
            Exception class for ArchiveExtractCallback.
            </summary>
        </member>
        <member name="F:SevenZip.ExtractionFailedException.DEFAULT_MESSAGE">
            <summary>
            Exception dafault message which is displayed if no extra information is specified
            </summary>
        </member>
        <member name="M:SevenZip.ExtractionFailedException.#ctor">
            <summary>
            Initializes a new instance of the ExtractionFailedException class
            </summary>
        </member>
        <member name="M:SevenZip.ExtractionFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ExtractionFailedException class
            </summary>
            <param name="message">Additional detailed message</param>
        </member>
        <member name="M:SevenZip.ExtractionFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ExtractionFailedException class
            </summary>
            <param name="message">Additional detailed message</param>
            <param name="inner">Inner exception occured</param>
        </member>
        <member name="M:SevenZip.ExtractionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ExtractionFailedException class
            </summary>
            <param name="info">All data needed for serialization or deserialization</param>
            <param name="context">Serialized stream descriptor</param>
        </member>
        <member name="T:SevenZip.CompressionFailedException">
            <summary>
            Exception class for ArchiveUpdateCallback.
            </summary>
        </member>
        <member name="F:SevenZip.CompressionFailedException.DEFAULT_MESSAGE">
            <summary>
            Exception dafault message which is displayed if no extra information is specified
            </summary>
        </member>
        <member name="M:SevenZip.CompressionFailedException.#ctor">
            <summary>
            Initializes a new instance of the CompressionFailedException class
            </summary>
        </member>
        <member name="M:SevenZip.CompressionFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CompressionFailedException class
            </summary>
            <param name="message">Additional detailed message</param>
        </member>
        <member name="M:SevenZip.CompressionFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the CompressionFailedException class
            </summary>
            <param name="message">Additional detailed message</param>
            <param name="inner">Inner exception occured</param>
        </member>
        <member name="M:SevenZip.CompressionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the CompressionFailedException class
            </summary>
            <param name="info">All data needed for serialization or deserialization</param>
            <param name="context">Serialized stream descriptor</param>
        </member>
        <member name="T:SevenZip.LzmaException">
            <summary>
            Exception class for LZMA operations.
            </summary>
        </member>
        <member name="F:SevenZip.LzmaException.DEFAULT_MESSAGE">
            <summary>
            Exception dafault message which is displayed if no extra information is specified
            </summary>
        </member>
        <member name="M:SevenZip.LzmaException.#ctor">
            <summary>
            Initializes a new instance of the LzmaException class
            </summary>
        </member>
        <member name="M:SevenZip.LzmaException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LzmaException class
            </summary>
            <param name="message">Additional detailed message</param>
        </member>
        <member name="M:SevenZip.LzmaException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LzmaException class
            </summary>
            <param name="message">Additional detailed message</param>
            <param name="inner">Inner exception occured</param>
        </member>
        <member name="M:SevenZip.LzmaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the LzmaException class
            </summary>
            <param name="info">All data needed for serialization or deserialization</param>
            <param name="context">Serialized stream descriptor</param>
        </member>
        <member name="T:SevenZip.SevenZipArchiveException">
            <summary>
            Exception class for 7-zip archive open or read operations.
            </summary>
        </member>
        <member name="F:SevenZip.SevenZipArchiveException.DEFAULT_MESSAGE">
            <summary>
            Exception dafault message which is displayed if no extra information is specified
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipArchiveException.#ctor">
            <summary>
            Initializes a new instance of the SevenZipArchiveException class
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipArchiveException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SevenZipArchiveException class
            </summary>
            <param name="message">Additional detailed message</param>
        </member>
        <member name="M:SevenZip.SevenZipArchiveException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SevenZipArchiveException class
            </summary>
            <param name="message">Additional detailed message</param>
            <param name="inner">Inner exception occured</param>
        </member>
        <member name="M:SevenZip.SevenZipArchiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SevenZipArchiveException class
            </summary>
            <param name="info">All data needed for serialization or deserialization</param>
            <param name="context">Serialized stream descriptor</param>
        </member>
        <member name="T:SevenZip.SevenZipInvalidFileNamesException">
            <summary>
            Exception class for empty common root if file name array in SevenZipCompressor.
            </summary>
        </member>
        <member name="F:SevenZip.SevenZipInvalidFileNamesException.DEFAULT_MESSAGE">
            <summary>
            Exception dafault message which is displayed if no extra information is specified
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipInvalidFileNamesException.#ctor">
            <summary>
            Initializes a new instance of the SevenZipInvalidFileNamesException class
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipInvalidFileNamesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SevenZipInvalidFileNamesException class
            </summary>
            <param name="message">Additional detailed message</param>
        </member>
        <member name="M:SevenZip.SevenZipInvalidFileNamesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SevenZipInvalidFileNamesException class
            </summary>
            <param name="message">Additional detailed message</param>
            <param name="inner">Inner exception occured</param>
        </member>
        <member name="M:SevenZip.SevenZipInvalidFileNamesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SevenZipInvalidFileNamesException class
            </summary>
            <param name="info">All data needed for serialization or deserialization</param>
            <param name="context">Serialized stream descriptor</param>
        </member>
        <member name="T:SevenZip.SevenZipCompressionFailedException">
            <summary>
            Exception class for fail to create an archive in SevenZipCompressor.
            </summary>
        </member>
        <member name="F:SevenZip.SevenZipCompressionFailedException.DEFAULT_MESSAGE">
            <summary>
            Exception dafault message which is displayed if no extra information is specified
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipCompressionFailedException.#ctor">
            <summary>
            Initializes a new instance of the SevenZipCompressionFailedException class
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipCompressionFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SevenZipCompressionFailedException class
            </summary>
            <param name="message">Additional detailed message</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressionFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SevenZipCompressionFailedException class
            </summary>
            <param name="message">Additional detailed message</param>
            <param name="inner">Inner exception occured</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SevenZipCompressionFailedException class
            </summary>
            <param name="info">All data needed for serialization or deserialization</param>
            <param name="context">Serialized stream descriptor</param>
        </member>
        <member name="T:SevenZip.SevenZipExtractionFailedException">
            <summary>
            Exception class for fail to extract an archive in SevenZipExtractor.
            </summary>
        </member>
        <member name="F:SevenZip.SevenZipExtractionFailedException.DEFAULT_MESSAGE">
            <summary>
            Exception dafault message which is displayed if no extra information is specified
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipExtractionFailedException.#ctor">
            <summary>
            Initializes a new instance of the SevenZipExtractionFailedException class
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipExtractionFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SevenZipExtractionFailedException class
            </summary>
            <param name="message">Additional detailed message</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractionFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SevenZipExtractionFailedException class
            </summary>
            <param name="message">Additional detailed message</param>
            <param name="inner">Inner exception occured</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SevenZipExtractionFailedException class
            </summary>
            <param name="info">All data needed for serialization or deserialization</param>
            <param name="context">Serialized stream descriptor</param>
        </member>
        <member name="T:SevenZip.SevenZipLibraryException">
            <summary>
            Exception class for 7-zip library operations.
            </summary>
        </member>
        <member name="F:SevenZip.SevenZipLibraryException.DEFAULT_MESSAGE">
            <summary>
            Exception dafault message which is displayed if no extra information is specified
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipLibraryException.#ctor">
            <summary>
            Initializes a new instance of the SevenZipLibraryException class
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipLibraryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SevenZipLibraryException class
            </summary>
            <param name="message">Additional detailed message</param>
        </member>
        <member name="M:SevenZip.SevenZipLibraryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SevenZipLibraryException class
            </summary>
            <param name="message">Additional detailed message</param>
            <param name="inner">Inner exception occured</param>
        </member>
        <member name="M:SevenZip.SevenZipLibraryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SevenZipLibraryException class
            </summary>
            <param name="info">All data needed for serialization or deserialization</param>
            <param name="context">Serialized stream descriptor</param>
        </member>
        <member name="T:SevenZip.FileChecker">
            <summary>
            The signature checker class. Original code by Siddharth Uppal, adapted by Markhor.
            </summary>
            <remarks>Based on the code at http://blog.somecreativity.com/2008/04/08/how-to-check-if-a-file-is-compressed-in-c/#</remarks>
        </member>
        <member name="M:SevenZip.FileChecker.CheckSignature(System.IO.Stream,System.Int32@,System.Boolean@)">
            <summary>
            Gets the InArchiveFormat for a specific extension.
            </summary>
            <param name="stream">The stream to identify.</param>
            <param name="offset">The archive beginning offset.</param>
            <param name="isExecutable">True if the original format of the stream is PE; otherwise, false.</param>
            <returns>Corresponding InArchiveFormat.</returns>
        </member>
        <member name="M:SevenZip.FileChecker.CheckSignature(System.String,System.Int32@,System.Boolean@)">
            <summary>
            Gets the InArchiveFormat for a specific file name.
            </summary>
            <param name="fileName">The archive file name.</param>
            <param name="offset">The archive beginning offset.</param>
            <param name="isExecutable">True if the original format of the file is PE; otherwise, false.</param>
            <returns>Corresponding InArchiveFormat.</returns>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="T:SevenZip.InArchiveFormat">
            <summary>
            Readable archive format enumeration.
            </summary>
        </member>
        <member name="F:SevenZip.InArchiveFormat.SevenZip">
            <summary>
            Open 7-zip archive format.
            </summary>  
            <remarks><a href="http://en.wikipedia.org/wiki/7-zip">Wikipedia information</a></remarks> 
        </member>
        <member name="F:SevenZip.InArchiveFormat.Arj">
            <summary>
            Proprietary Arj archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/ARJ">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.BZip2">
            <summary>
            Open Bzip2 archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Bzip2">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Cab">
            <summary>
            Microsoft cabinet archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Cabinet_(file_format)">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Chm">
            <summary>
            Microsoft Compiled HTML Help file format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Microsoft_Compiled_HTML_Help">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Compound">
            <summary>
            Microsoft Compound file format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Compound_File_Binary_Format">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Cpio">
            <summary>
            Open Cpio archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Cpio">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Deb">
            <summary>
            Open Debian software package format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Deb_(file_format)">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.GZip">
            <summary>
            Open Gzip archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Gzip">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Iso">
            <summary>
            Open ISO disk image format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/ISO_image">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Lzh">
            <summary>
            Open Lzh archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Lzh">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Lzma">
            <summary>
            Open core 7-zip Lzma raw archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Lzma">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Nsis">
            <summary>
            Nullsoft installation package format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/NSIS">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Rar">
            <summary>
            RarLab Rar archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Rar">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Rpm">
            <summary>
            Open Rpm software package format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/RPM_Package_Manager">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Split">
            <summary>
            Open split file format.
            </summary>
            <remarks><a href="?">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Tar">
            <summary>
            Open Tar archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Tar_(file_format)">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Wim">
            <summary>
            Microsoft Windows Imaging disk image format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Windows_Imaging_Format">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Lzw">
            <summary>
            Open LZW archive format; implemented in "compress" program; also known as "Z" archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Compress">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Zip">
            <summary>
            Open Zip archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/ZIP_(file_format)">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Udf">
            <summary>
            Open Udf disk image format.
            </summary>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Xar">
            <summary>
            Xar open source archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Xar_(archiver)">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Mub">
            <summary>
            Mub
            </summary>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Hfs">
            <summary>
            Macintosh Disk Image on CD.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/HFS_Plus">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Dmg">
            <summary>
            Apple Mac OS X Disk Copy Disk Image format.
            </summary>
        </member>
        <member name="F:SevenZip.InArchiveFormat.XZ">
            <summary>
            Open Xz archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Xz">Wikipedia information</a></remarks>        
        </member>
        <member name="F:SevenZip.InArchiveFormat.Mslz">
            <summary>
            MSLZ archive format.
            </summary>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Flv">
            <summary>
            Flash video format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Flv">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Swf">
            <summary>
            Shockwave Flash format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Swf">Wikipedia information</a></remarks>         
        </member>
        <member name="F:SevenZip.InArchiveFormat.PE">
            <summary>
            Windows PE executable format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Portable_Executable">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Elf">
            <summary>
            Linux executable Elf format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Executable_and_Linkable_Format">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Msi">
            <summary>
            Windows Installer Database.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Windows_Installer">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.InArchiveFormat.Vhd">
            <summary>
            Microsoft virtual hard disk file format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/VHD_%28file_format%29">Wikipedia information</a></remarks>
        </member>
        <member name="T:SevenZip.OutArchiveFormat">
            <summary>
            Writable archive format enumeration.
            </summary>    
        </member>
        <member name="F:SevenZip.OutArchiveFormat.SevenZip">
            <summary>
            Open 7-zip archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/7-zip">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.OutArchiveFormat.Zip">
            <summary>
            Open Zip archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/ZIP_(file_format)">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.OutArchiveFormat.GZip">
            <summary>
            Open Gzip archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Gzip">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.OutArchiveFormat.BZip2">
            <summary>       
            Open Bzip2 archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Bzip2">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.OutArchiveFormat.Tar">
            <summary>
            Open Tar archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Tar_(file_format)">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.OutArchiveFormat.XZ">
            <summary>
            Open Xz archive format.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Xz">Wikipedia information</a></remarks>        
        </member>
        <member name="T:SevenZip.CompressionLevel">
            <summary>
            Compression level enumeration
            </summary>
        </member>
        <member name="F:SevenZip.CompressionLevel.None">
            <summary>
            No compression
            </summary>
        </member>
        <member name="F:SevenZip.CompressionLevel.Fast">
            <summary>
            Very low compression level
            </summary>
        </member>
        <member name="F:SevenZip.CompressionLevel.Low">
            <summary>
            Low compression level
            </summary>
        </member>
        <member name="F:SevenZip.CompressionLevel.Normal">
            <summary>
            Normal compression level (default)
            </summary>
        </member>
        <member name="F:SevenZip.CompressionLevel.High">
            <summary>
            High compression level
            </summary>
        </member>
        <member name="F:SevenZip.CompressionLevel.Ultra">
            <summary>
            The best compression level (slow)
            </summary>
        </member>
        <member name="T:SevenZip.CompressionMethod">
            <summary>
            Compression method enumeration.
            </summary>
            <remarks>Some methods are applicable only to Zip format, some - only to 7-zip.</remarks>
        </member>
        <member name="F:SevenZip.CompressionMethod.Copy">
            <summary>
            Zip or 7-zip|no compression method.
            </summary>
        </member>
        <member name="F:SevenZip.CompressionMethod.Deflate">
            <summary>
            Zip|Deflate method.
            </summary>
        </member>
        <member name="F:SevenZip.CompressionMethod.Deflate64">
            <summary>
            Zip|Deflate64 method.
            </summary>
        </member>
        <member name="F:SevenZip.CompressionMethod.BZip2">
            <summary>
            Zip or 7-zip|Bzip2 method.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Cabinet_(file_format)">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.CompressionMethod.Lzma">
            <summary>
            Zip or 7-zip|LZMA method based on Lempel-Ziv algorithm, it is default for 7-zip.
            </summary>
        </member>
        <member name="F:SevenZip.CompressionMethod.Lzma2">
            <summary>
            7-zip|LZMA version 2, LZMA with improved multithreading and usually slight archive size decrease.
            </summary>
        </member>
        <member name="F:SevenZip.CompressionMethod.Ppmd">
            <summary>
            Zip or 7-zip|PPMd method based on Dmitry Shkarin's PPMdH source code, very efficient for compressing texts.
            </summary>
            <remarks><a href="http://en.wikipedia.org/wiki/Prediction_by_Partial_Matching">Wikipedia information</a></remarks>
        </member>
        <member name="F:SevenZip.CompressionMethod.Default">
            <summary>
            No method change.
            </summary>
        </member>
        <member name="T:SevenZip.Formats">
            <summary>
            Archive format routines
            </summary>
        </member>
        <member name="F:SevenZip.Formats.InFormatGuids">
            <summary>
            List of readable archive format interface guids for 7-zip COM interop.
            </summary>
        </member>
        <member name="F:SevenZip.Formats.OutFormatGuids">
            <summary>
            List of writable archive format interface guids for 7-zip COM interop.
            </summary>
        </member>
        <member name="F:SevenZip.Formats.InExtensionFormats">
            <summary>
            List of archive formats corresponding to specific extensions
            </summary>
        </member>
        <member name="F:SevenZip.Formats.InSignatureFormats">
            <summary>
            List of archive formats corresponding to specific signatures
            </summary>
            <remarks>Based on the information at <a href="http://www.garykessler.net/library/file_sigs.html">this site.</a></remarks>
        </member>
        <member name="M:SevenZip.Formats.FormatByFileName(System.String,System.Boolean)">
            <summary>
            Gets InArchiveFormat for specified archive file name
            </summary>
            <param name="fileName">Archive file name</param>
            <param name="reportErrors">Indicates whether to throw exceptions</param>
            <returns>InArchiveFormat recognized by the file name extension</returns>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="T:SevenZip.LibraryFeature">
            <summary>
            The set of features supported by the library.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.None">
            <summary>
            Default feature.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.Extract7z">
            <summary>
            The library can extract 7zip archives compressed with LZMA method.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.Extract7zLZMA2">
            <summary>
            The library can extract 7zip archives compressed with LZMA2 method.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.Extract7zAll">
            <summary>
            The library can extract 7z archives compressed with all known methods.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.ExtractZip">
            <summary>
            The library can extract zip archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.ExtractRar">
            <summary>
            The library can extract rar archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.ExtractGzip">
            <summary>
            The library can extract gzip archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.ExtractBzip2">
            <summary>
            The library can extract bzip2 archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.ExtractTar">
            <summary>
            The library can extract tar archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.ExtractXz">
            <summary>
            The library can extract xz archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.ExtractAll">
            <summary>
            The library can extract all types of archives supported.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.Compress7z">
            <summary>
            The library can compress data to 7zip archives with LZMA method.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.Compress7zLZMA2">
            <summary>
            The library can compress data to 7zip archives with LZMA2 method.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.Compress7zAll">
            <summary>
            The library can compress data to 7zip archives with all methods known.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.CompressTar">
            <summary>
            The library can compress data to tar archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.CompressGzip">
            <summary>
            The library can compress data to gzip archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.CompressBzip2">
            <summary>
            The library can compress data to bzip2 archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.CompressXz">
            <summary>
            The library can compress data to xz archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.CompressZip">
            <summary>
            The library can compress data to zip archives.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.CompressAll">
            <summary>
            The library can compress data to all types of archives supported.
            </summary>
        </member>
        <member name="F:SevenZip.LibraryFeature.Modify">
            <summary>
            The library can modify archives.
            </summary>
        </member>
        <member name="T:SevenZip.SevenZipLibraryManager">
            <summary>
            7-zip library low-level wrapper.
            </summary>
        </member>
        <member name="F:SevenZip.SevenZipLibraryManager._libraryFileName">
            <summary>
            Path to the 7-zip dll.
            </summary>
            <remarks>7zxa.dll supports only decoding from .7z archives.
            Features of 7za.dll: 
                - Supporting 7z format;
                - Built encoders: LZMA, PPMD, BCJ, BCJ2, COPY, AES-256 Encryption.
                - Built decoders: LZMA, PPMD, BCJ, BCJ2, COPY, AES-256 Encryption, BZip2, Deflate.
            7z.dll (from the 7-zip distribution) supports every InArchiveFormat for encoding and decoding.
            </remarks>
        </member>
        <member name="F:SevenZip.SevenZipLibraryManager._modulePtr">
            <summary>
            7-zip library handle.
            </summary>
        </member>
        <member name="F:SevenZip.SevenZipLibraryManager._features">
            <summary>
            7-zip library features.
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipLibraryManager.LoadLibrary(System.Object,System.Enum)">
            <summary>
            Loads the 7-zip library if necessary and adds user to the reference list
            </summary>
            <param name="user">Caller of the function</param>
            <param name="format">Archive format</param>
        </member>
        <member name="M:SevenZip.SevenZipLibraryManager.FreeLibrary(System.Object,System.Enum)">
            <summary>
            Removes user from reference list and frees the 7-zip library if it becomes empty
            </summary>
            <param name="user">Caller of the function</param>
            <param name="format">Archive format</param>
        </member>
        <member name="M:SevenZip.SevenZipLibraryManager.InArchive(SevenZip.InArchiveFormat,System.Object)">
            <summary>
            Gets IInArchive interface to extract 7-zip archives.
            </summary>
            <param name="format">Archive format.</param>
            <param name="user">Archive format user.</param>
        </member>
        <member name="M:SevenZip.SevenZipLibraryManager.OutArchive(SevenZip.OutArchiveFormat,System.Object)">
            <summary>
            Gets IOutArchive interface to pack 7-zip archives.
            </summary>
            <param name="format">Archive format.</param>  
            <param name="user">Archive format user.</param>
        </member>
        <member name="P:SevenZip.SevenZipLibraryManager.ModifyCapable">
            <summary>
            Gets the value indicating whether the library supports modifying archives.
            </summary>
        </member>
        <member name="T:SevenZip.LzmaDecodeStream">
            <summary>
            The stream which decompresses data with LZMA on the fly.
            </summary>
        </member>
        <member name="M:SevenZip.LzmaDecodeStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the LzmaDecodeStream class.
            </summary>
            <param name="encodedStream">A compressed stream.</param>
        </member>
        <member name="M:SevenZip.LzmaDecodeStream.Flush">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:SevenZip.LzmaDecodeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and decompresses data if necessary.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>        
        </member>
        <member name="M:SevenZip.LzmaDecodeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type System.IO.SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>       
        </member>
        <member name="M:SevenZip.LzmaDecodeStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:SevenZip.LzmaDecodeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
        </member>
        <member name="P:SevenZip.LzmaDecodeStream.ChunkSize">
            <summary>
            Gets the chunk size.
            </summary>
        </member>
        <member name="P:SevenZip.LzmaDecodeStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:SevenZip.LzmaDecodeStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:SevenZip.LzmaDecodeStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:SevenZip.LzmaDecodeStream.Length">
            <summary>
            Gets the length in bytes of the output stream.
            </summary>
        </member>
        <member name="P:SevenZip.LzmaDecodeStream.Position">
            <summary>
            Gets or sets the position within the output stream.
            </summary>
        </member>
        <member name="T:SevenZip.LzmaEncodeStream">
            <summary>
            The stream which compresses data with LZMA on the fly.
            </summary>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.#ctor">
            <summary>
            Initializes a new instance of the LzmaEncodeStream class.
            </summary>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the LzmaEncodeStream class.
            </summary>
            <param name="bufferCapacity">The buffer size. The bigger size, the better compression.</param>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the LzmaEncodeStream class.
            </summary>
            <param name="outputStream">An output stream which supports writing.</param>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initializes a new instance of the LzmaEncodeStream class.
            </summary>
            <param name="outputStream">An output stream which supports writing.</param>
            <param name="bufferCapacity">A buffer size. The bigger size, the better compression.</param>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.DisposedCheck">
            <summary>
            Checked whether the class was disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.ToDecodeStream">
            <summary>
            Converts the LzmaEncodeStream to the LzmaDecodeStream to read data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be compressed and written.
            </summary>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.Dispose(System.Boolean)">
            <summary>
            Releases all unmanaged resources used by LzmaEncodeStream.
            </summary>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type System.IO.SeekOrigin indicating the reference point used to obtain the new position.</param>
            <returns>The new position within the current stream.</returns>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:SevenZip.LzmaEncodeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and compresses it if necessary.
            </summary>
            <param name="buffer">An array of bytes.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
        </member>
        <member name="P:SevenZip.LzmaEncodeStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:SevenZip.LzmaEncodeStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:SevenZip.LzmaEncodeStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:SevenZip.LzmaEncodeStream.Length">
            <summary>
            Gets the length in bytes of the output stream.
            </summary>
        </member>
        <member name="P:SevenZip.LzmaEncodeStream.Position">
            <summary>
            Gets or sets the position within the output stream.
            </summary>
        </member>
        <member name="T:SevenZip.LzmaProgressCallback">
            <summary>
            Callback to implement the ICodeProgress interface
            </summary>
        </member>
        <member name="T:SevenZip.Sdk.ICodeProgress">
            <summary>
            Callback progress interface.
            </summary>
        </member>
        <member name="M:SevenZip.Sdk.ICodeProgress.SetProgress(System.Int64,System.Int64)">
            <summary>
            Callback progress.
            </summary>
            <param name="inSize">
            Processed input size. -1 if unknown.
            </param>
            <param name="outSize">
            Processed output size. -1 if unknown.
            </param>
        </member>
        <member name="M:SevenZip.LzmaProgressCallback.#ctor(System.Int64,System.EventHandler{SevenZip.ProgressEventArgs})">
            <summary>
            Initializes a new instance of the LzmaProgressCallback class
            </summary>
            <param name="inSize">The input size</param>
            <param name="working">Progress event handler</param>
        </member>
        <member name="M:SevenZip.LzmaProgressCallback.SetProgress(System.Int64,System.Int64)">
            <summary>
            Sets the progress
            </summary>
            <param name="inSize">The processed input size</param>
            <param name="outSize">The processed output size</param>
        </member>
        <member name="T:SevenZip.Sdk.Buffer.InBuffer">
            <summary>
            Implements the input buffer work
            </summary>
        </member>
        <member name="M:SevenZip.Sdk.Buffer.InBuffer.#ctor(System.UInt32)">
            <summary>
            Initializes the input buffer
            </summary>
            <param name="bufferSize"></param>
        </member>
        <member name="M:SevenZip.Sdk.Buffer.InBuffer.Init(System.IO.Stream)">
            <summary>
            Initializes the class
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:SevenZip.Sdk.Buffer.InBuffer.ReadBlock">
            <summary>
            Reads the whole block
            </summary>
            <returns></returns>
        </member>
        <member name="M:SevenZip.Sdk.Buffer.InBuffer.ReleaseStream">
            <summary>
            Releases the stream
            </summary>
        </member>
        <member name="M:SevenZip.Sdk.Buffer.InBuffer.ReadByte(System.Byte@)">
            <summary>
            Reads the byte to check it
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:SevenZip.Sdk.Buffer.InBuffer.ReadByte">
            <summary>
            Reads the next byte
            </summary>
            <returns></returns>
        </member>
        <member name="M:SevenZip.Sdk.Buffer.InBuffer.GetProcessedSize">
            <summary>
            Gets processed size
            </summary>
            <returns></returns>
        </member>
        <member name="M:SevenZip.Sdk.Buffer.OutBuffer.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the OutBuffer class
            </summary>
            <param name="bufferSize"></param>
        </member>
        <member name="T:SevenZip.Sdk.Compression.Lzma.Decoder">
            <summary>
            The LZMA decoder class
            </summary>
        </member>
        <member name="T:SevenZip.Sdk.ICoder">
            <summary>
            Stream coder interface
            </summary>
        </member>
        <member name="M:SevenZip.Sdk.ICoder.Code(System.IO.Stream,System.IO.Stream,System.Int64,System.Int64,SevenZip.Sdk.ICodeProgress)">
            <summary>
            Codes streams.
            </summary>
            <param name="inStream">
            input Stream.
            </param>
            <param name="outStream">
            output Stream.
            </param>
            <param name="inSize">
            input Size. -1 if unknown.
            </param>
            <param name="outSize">
            output Size. -1 if unknown.
            </param>
            <param name="progress">
            callback progress reference.
            </param>
            <exception cref="T:SevenZip.Sdk.DataErrorException">
            if input stream is not valid
            </exception>
        </member>
        <member name="T:SevenZip.Sdk.ISetDecoderProperties">
            <summary>
            The ISetDecoderPropertiesinterface
            </summary>
        </member>
        <member name="M:SevenZip.Sdk.ISetDecoderProperties.SetDecoderProperties(System.Byte[])">
            <summary>
            Sets decoder properties
            </summary>
            <param name="properties">Array of byte properties</param>
        </member>
        <member name="M:SevenZip.Sdk.Compression.Lzma.Decoder.#ctor">
            <summary>
            Initializes the Lzma Decoder class.
            </summary>
        </member>
        <member name="M:SevenZip.Sdk.Compression.Lzma.Decoder.Code(System.IO.Stream,System.IO.Stream,System.Int64,System.Int64,SevenZip.Sdk.ICodeProgress)">
            <summary>
            Codes a stream with LZMA algorithm to an output stream
            </summary>
            <param name="inStream">The input stream</param>
            <param name="inSize">The input size</param>
            <param name="outSize">The output size</param>
            <param name="outStream">The output stream</param>
            <param name="progress">Progress interface</param>
        </member>
        <member name="M:SevenZip.Sdk.Compression.Lzma.Decoder.SetDecoderProperties(System.Byte[])">
            <summary>
            Sets decoder properties
            </summary>
            <param name="properties">Array of byte properties</param>
        </member>
        <member name="M:SevenZip.Sdk.Compression.Lzma.Decoder.Train(System.IO.Stream)">
            <summary>
            Trains a stream
            </summary>
            <param name="stream">The stream to train.</param>
            <returns>true if Ok; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.Sdk.Compression.Lzma.Decoder.LenDecoder.Decode(SevenZip.Sdk.Compression.RangeCoder.Decoder,System.UInt32)">
            <summary>
            Decodes the stream
            </summary>
            <param name="rangeDecoder">The specified RangeCoder</param>
            <param name="posState">The position state</param>
            <returns></returns>
        </member>
        <member name="T:SevenZip.Sdk.Compression.Lzma.Encoder">
            <summary>
            The LZMA encoder class
            </summary>
        </member>
        <member name="T:SevenZip.Sdk.ISetCoderProperties">
            <summary>
            The ISetCoderProperties interface
            </summary>
        </member>
        <member name="T:SevenZip.Sdk.IWriteCoderProperties">
            <summary>
            The IWriteCoderProperties interface
            </summary>
        </member>
        <member name="M:SevenZip.Sdk.Compression.Lzma.Encoder.#ctor">
            <summary>
            Initializes a new instance of the Encoder class
            </summary>
        </member>
        <member name="M:SevenZip.Sdk.Compression.Lzma.Encoder.Code(System.IO.Stream,System.IO.Stream,System.Int64,System.Int64,SevenZip.Sdk.ICodeProgress)">
            <summary>
            Codes the specified stream
            </summary>
            <param name="inStream">The input stream</param>
            <param name="inSize">The input size</param>
            <param name="outSize">The output size</param>
            <param name="outStream">The output stream</param>
            <param name="progress">The progress callback</param>
        </member>
        <member name="M:SevenZip.Sdk.Compression.Lzma.Encoder.SetCoderProperties(SevenZip.Sdk.CoderPropId[],System.Object[])">
            <summary>
            Sets the coder properties
            </summary>
            <param name="propIDs">The property identificators</param>
            <param name="properties">The array of properties</param>
        </member>
        <member name="M:SevenZip.Sdk.Compression.Lzma.Encoder.WriteCoderProperties(System.IO.Stream)">
            <summary>
            Writes the coder properties
            </summary>
            <param name="outStream">The output stream to write the properties to.</param>
        </member>
        <member name="T:SevenZip.Sdk.Compression.LZ.InWindow">
            <summary>
            Input window class
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.Compression.LZ.InWindow._blockSize">
            <summary>
            Size of Allocated memory block
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.Compression.LZ.InWindow._bufferBase">
            <summary>
            The pointer to buffer with data
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.Compression.LZ.InWindow._bufferOffset">
            <summary>
            Buffer offset value
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.Compression.LZ.InWindow._keepSizeAfter">
            <summary>
            How many BYTEs must be kept buffer after _pos
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.Compression.LZ.InWindow._keepSizeBefore">
            <summary>
            How many BYTEs must be kept in buffer before _pos
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.Compression.LZ.InWindow._pos">
            <summary>
            Offset (from _buffer) of curent byte
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.Compression.LZ.InWindow._streamPos">
            <summary>
            Offset (from _buffer) of first not read byte from Stream
            </summary>
        </member>
        <member name="M:SevenZip.Sdk.Compression.LZ.InWindow.GetMatchLen(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            index + limit have not to exceed _keepSizeAfter
            </summary>
            <param name="index"></param>
            <param name="distance"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="T:SevenZip.Sdk.DataErrorException">
            <summary>
            The exception that is thrown when an error in input stream occurs during decoding.
            </summary>
        </member>
        <member name="T:SevenZip.Sdk.InvalidParamException">
            <summary>
            The exception that is thrown when the value of an argument is outside the allowable range.
            </summary>
        </member>
        <member name="T:SevenZip.Sdk.CoderPropId">
            <summary>
            Provides the fields that represent properties idenitifiers for compressing.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.DefaultProp">
            <summary>
            Specifies default property.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.DictionarySize">
            <summary>
            Specifies size of dictionary.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.UsedMemorySize">
            <summary>
            Specifies size of memory for PPM*.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.Order">
            <summary>
            Specifies order for PPM methods.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.BlockSize">
            <summary>
            Specifies Block Size.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.PosStateBits">
            <summary>
            Specifies number of postion state bits for LZMA (0 &lt;= x &lt;= 4).
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.LitContextBits">
            <summary>
            Specifies number of literal context bits for LZMA (0 &lt;= x &lt;= 8).
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.LitPosBits">
            <summary>
            Specifies number of literal position bits for LZMA (0 &lt;= x &lt;= 4).
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.NumFastBytes">
            <summary>
            Specifies number of fast bytes for LZ*.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.MatchFinder">
            <summary>
            Specifies match finder. LZMA: "BT2", "BT4" or "BT4B".
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.MatchFinderCycles">
            <summary>
            Specifies the number of match finder cyckes.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.NumPasses">
            <summary>
            Specifies number of passes.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.Algorithm">
            <summary>
            Specifies number of algorithm.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.NumThreads">
            <summary>
            Specifies the number of threads.
            </summary>
        </member>
        <member name="F:SevenZip.Sdk.CoderPropId.EndMarker">
            <summary>
            Specifies mode with end marker.
            </summary>
        </member>
        <member name="T:SevenZip.SevenZipCompressor">
            <summary>
            Class for packing files into 7-zip archives
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.#ctor">
            <summary>
            Initializes a new instance of the SevenZipCompressor class. 
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SevenZipCompressor class. 
            </summary>
            <param name="temporaryPath">Your own temporary path (default is set in the parameterless constructor overload.)</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.ValidateStream(System.IO.Stream)">
            <summary>
            Checks if the specified stream supports compression.
            </summary>
            <param name="stream">The stream to check.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.MethodIsValid(SevenZip.CompressionMethod)">
            <summary>
            Guaranties the correct work of the SetCompressionProperties function
            </summary>
            <param name="method">The compression method to check</param>
            <returns>The value indicating whether the specified method is valid for the current ArchiveFormat</returns>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.SetCompressionProperties">
            <summary>
            Sets the compression properties
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CommonRoot(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Finds the common root of file names
            </summary>
            <param name="files">Array of file names</param>
            <returns>Common root</returns>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CheckCommonRoot(System.String[],System.Int32@)">
            <summary>
            Validates the common root
            </summary>
            <param name="commonRootLength">The length of the common root of the file names.</param>
            <param name="files">Array of file names</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.RecursiveDirectoryEmptyCheck(System.String)">
            <summary>
            Ensures that directory directory is not empty
            </summary>
            <param name="directory">Directory name</param>
            <returns>False if is not empty</returns>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.ProduceFileInfoArray(System.String[],System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Makes special FileInfo array for the archive file table.
            </summary>
            <param name="files">Array of files to pack.</param>
            <param name="commonRootLength">The length of the common root of file names</param>
            <param name="directoryCompress">The value indicating whether to produce the array for files in a particular directory or just for an array of files.</param>
            <param name="directoryStructure">Preserve directory structure.</param>
            <returns>Special FileInfo array for the archive file table.</returns>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.AddFilesFromDirectory(System.String,System.Collections.Generic.ICollection{System.String},System.String)">
            <summary>
            Recursive function for adding files in directory
            </summary>
            <param name="directory">Directory directory</param>
            <param name="files">List of files</param>
            <param name="searchPattern">Search string, such as "*.txt"</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CommonUpdateCallbackInit(SevenZip.ArchiveUpdateCallback)">
            <summary>
            Performs the common ArchiveUpdateCallback initialization.
            </summary>
            <param name="auc">The ArchiveUpdateCallback instance to initialize.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.GetArchiveUpdateCallback(System.IO.FileInfo[],System.Int32,System.String)">
            <summary>
            Produces  a new instance of ArchiveUpdateCallback class.
            </summary>
            <param name="files">Array of FileInfo - files to pack</param>
            <param name="rootLength">Length of the common root of file names</param>
            <param name="password">The archive password</param>
            <returns></returns>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.GetArchiveUpdateCallback(System.IO.Stream,System.String)">
            <summary>
            Produces  a new instance of ArchiveUpdateCallback class.
            </summary>
            <param name="inStream">The archive input stream.</param>
            <param name="password">The archive password.</param>
            <returns></returns>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.GetArchiveUpdateCallback(System.Collections.Generic.Dictionary{System.String,System.IO.Stream},System.String)">
            <summary>
            Produces  a new instance of ArchiveUpdateCallback class.
            </summary>
            <param name="streamDict">Dictionary&lt;name of the archive entry, stream&gt;.</param>
            <param name="password">The archive password</param>
            <returns></returns>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.FileCompressionStartedEventProxy(System.Object,SevenZip.FileNameEventArgs)">
            <summary>
            Event proxy for FileCompressionStarted.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.FileCompressionFinishedEventProxy(System.Object,System.EventArgs)">
            <summary>
            Event proxy for FileCompressionFinished.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressingEventProxy(System.Object,SevenZip.ProgressEventArgs)">
            <summary>
            Event proxy for Compressing.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.FilesFoundEventProxy(System.Object,SevenZip.IntEventArgs)">
            <summary>
            Event proxy for FilesFound.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFiles(System.String,System.String[])">
            <summary>
            Packs files into the archive.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="archiveName">The archive file name.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFiles(System.IO.Stream,System.String[])">
            <summary>
            Packs files into the archive.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="archiveStream">The archive output stream. 
            Use CompressFiles(string archiveName ... ) overloads for archiving to disk.</param>       
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFiles(System.String,System.Int32,System.String[])">
            <summary>
            Packs files into the archive.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="commonRootLength">The length of the common root of the file names.</param>
            <param name="archiveName">The archive file name.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFiles(System.IO.Stream,System.Int32,System.String[])">
            <summary>
            Packs files into the archive.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="commonRootLength">The length of the common root of the file names.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressFiles(string archiveName, ... ) overloads for archiving to disk.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFilesEncrypted(System.String,System.String,System.String[])">
            <summary>
            Packs files into the archive.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="archiveName">The archive file name.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFilesEncrypted(System.IO.Stream,System.String,System.String[])">
            <summary>
            Packs files into the archive.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressFiles( ... string archiveName ... ) overloads for archiving to disk.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFilesEncrypted(System.String,System.Int32,System.String,System.String[])">
            <summary>
            Packs files into the archive.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="commonRootLength">The length of the common root of the file names.</param>
            <param name="archiveName">The archive file name.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFilesEncrypted(System.IO.Stream,System.Int32,System.String,System.String[])">
            <summary>
            Packs files into the archive.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="commonRootLength">The length of the common root of the file names.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressFiles( ... string archiveName ... ) overloads for archiving to disk.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.String)">
            <summary>
            Recursively packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveName">The archive file name.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.IO.Stream)">
            <summary>
            Recursively packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.String,System.String)">
            <summary>
            Recursively packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveName">The archive file name.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.IO.Stream,System.String)">
            <summary>
            Recursively packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.String,System.Boolean)">
            <summary>
            Packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveName">The archive file name.</param>
            <param name="recursion">If true, files will be searched for recursively; otherwise, not.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk.</param>
            <param name="recursion">If true, files will be searched for recursively; otherwise, not.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Packs all files found by the specified pattern in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveName">The archive file name.</param>
            <param name="searchPattern">Search string, such as "*.txt".</param>
            <param name="recursion">If true, files will be searched for recursively; otherwise, not.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Packs all files found by the specified pattern in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk.</param>
            <param name="searchPattern">Search string, such as "*.txt".</param>
            <param name="recursion">If true, files will be searched for recursively; otherwise, not.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveName">The archive file name.</param>        
            <param name="recursion">If true, files will be searched for recursively; otherwise, not.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.IO.Stream,System.Boolean,System.String)">
            <summary>
            Packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk.</param>        
            <param name="recursion">If true, files will be searched for recursively; otherwise, not.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveName">The archive file name.</param>
            <param name="password">The archive password.</param>
            <param name="searchPattern">Search string, such as "*.txt".</param>
            <param name="recursion">If true, files will be searched for recursively; otherwise, not.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressDirectory(System.String,System.IO.Stream,System.String,System.String,System.Boolean)">
            <summary>
            Packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk.</param>        
            <param name="password">The archive password.</param>
            <param name="searchPattern">Search string, such as "*.txt".</param>
            <param name="recursion">If true, files will be searched for recursively; otherwise, not.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFileDictionary(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Packs the specified file dictionary.
            </summary>
            <param name="fileDictionary">Dictionary&lt;name of the archive entry, file name&gt;.
            If a file name is null, the corresponding archive entry becomes a directory.</param>
            <param name="archiveName">The archive file name.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFileDictionary(System.Collections.Generic.Dictionary{System.String,System.String},System.IO.Stream)">
            <summary>
            Packs the specified file dictionary.
            </summary>
            <param name="fileDictionary">Dictionary&lt;name of the archive entry, file name&gt;.
            If a file name is null, the corresponding archive entry becomes a directory.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressFileDictionary( ... string archiveName ... ) overloads for archiving to disk.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFileDictionary(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Packs the specified file dictionary.
            </summary>
            <param name="fileDictionary">Dictionary&lt;name of the archive entry, file name&gt;.
            If a file name is null, the corresponding archive entry becomes a directory.</param>
            <param name="archiveName">The archive file name.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressFileDictionary(System.Collections.Generic.Dictionary{System.String,System.String},System.IO.Stream,System.String)">
            <summary>
            Packs the specified file dictionary.
            </summary>
            <param name="fileDictionary">Dictionary&lt;name of the archive entry, file name&gt;.
            If a file name is null, the corresponding archive entry becomes a directory.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressStreamDictionary( ... string archiveName ... ) overloads for archiving to disk.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressStreamDictionary(System.Collections.Generic.Dictionary{System.String,System.IO.Stream},System.String)">
            <summary>
            Packs the specified stream dictionary.
            </summary>
            <param name="streamDictionary">Dictionary&lt;name of the archive entry, stream&gt;.
            If a stream is null, the corresponding string becomes a directory name.</param>
            <param name="archiveName">The archive file name.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressStreamDictionary(System.Collections.Generic.Dictionary{System.String,System.IO.Stream},System.IO.Stream)">
            <summary>
            Packs the specified stream dictionary.
            </summary>
            <param name="streamDictionary">Dictionary&lt;name of the archive entry, stream&gt;.
            If a stream is null, the corresponding string becomes a directory name.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressStreamDictionary( ... string archiveName ... ) overloads for archiving to disk.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressStreamDictionary(System.Collections.Generic.Dictionary{System.String,System.IO.Stream},System.String,System.String)">
            <summary>
            Packs the specified stream dictionary.
            </summary>
            <param name="streamDictionary">Dictionary&lt;name of the archive entry, stream&gt;.
            If a stream is null, the corresponding string becomes a directory name.</param>
            <param name="archiveName">The archive file name.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressStreamDictionary(System.Collections.Generic.Dictionary{System.String,System.IO.Stream},System.IO.Stream,System.String)">
            <summary>
            Packs the specified stream dictionary.
            </summary>
            <param name="streamDictionary">Dictionary&lt;name of the archive entry, stream&gt;.
            If a stream is null, the corresponding string becomes a directory name.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressStreamDictionary( ... string archiveName ... ) overloads for archiving to disk.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Compresses the specified stream.
            </summary>
            <param name="inStream">The source uncompressed stream.</param>
            <param name="outStream">The destination compressed stream.</param>
            <exception cref="T:System.ArgumentException">ArgumentException: at least one of the specified streams is invalid.</exception>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressStream(System.IO.Stream,System.IO.Stream,System.String)">
            <summary>
            Compresses the specified stream.
            </summary>
            <param name="inStream">The source uncompressed stream.</param>
            <param name="outStream">The destination compressed stream.</param>
            <param name="password">The archive password.</param>
            <exception cref="T:System.ArgumentException">ArgumentException: at least one of the specified streams is invalid.</exception>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.ModifyArchive(System.String,System.Collections.Generic.Dictionary{System.Int32,System.String})">
            <summary>
            Modifies the existing archive (renames files or deletes them).
            </summary>
            <param name="archiveName">The archive file name.</param>
            <param name="newFileNames">New file names. Null value to delete the corresponding index.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.ModifyArchive(System.String,System.Collections.Generic.Dictionary{System.Int32,System.String},System.String)">
            <summary>
            Modifies the existing archive (renames files or deletes them).
            </summary>
            <param name="archiveName">The archive file name.</param>
            <param name="newFileNames">New file names. Null value to delete the corresponding index.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressStream(System.IO.Stream,System.IO.Stream,System.Nullable{System.Int32},System.EventHandler{SevenZip.ProgressEventArgs})">
            <summary>
            Compresses the specified stream with LZMA algorithm (C# inside)
            </summary>
            <param name="inStream">The source uncompressed stream</param>
            <param name="outStream">The destination compressed stream</param>
            <param name="inLength">The length of uncompressed data (null for inStream.Length)</param>
            <param name="codeProgressEvent">The event for handling the code progress</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.CompressBytes(System.Byte[])">
            <summary>
            Compresses byte array with LZMA algorithm (C# inside)
            </summary>
            <param name="data">Byte array to compress</param>
            <returns>Compressed byte array</returns>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressFiles(System.String,System.String[])">
            <summary>
            Packs files into the archive asynchronously.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="archiveName">The archive file name.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressFiles(System.IO.Stream,System.String[])">
            <summary>
            Packs files into the archive asynchronously.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="archiveStream">The archive output stream. 
            Use CompressFiles(string archiveName ... ) overloads for archiving to disk.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressFiles(System.String,System.Int32,System.String[])">
            <summary>
            Packs files into the archive asynchronously.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="commonRootLength">The length of the common root of the file names.</param>
            <param name="archiveName">The archive file name.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressFiles(System.IO.Stream,System.Int32,System.String[])">
            <summary>
            Packs files into the archive asynchronously.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="commonRootLength">The length of the common root of the file names.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressFiles(string archiveName, ... ) overloads for archiving to disk.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressFilesEncrypted(System.String,System.String,System.String[])">
            <summary>
            Packs files into the archive asynchronously.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="archiveName">The archive file name</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressFilesEncrypted(System.IO.Stream,System.String,System.String[])">
            <summary>
            Packs files into the archive asynchronously.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressFiles( ... string archiveName ... ) overloads for archiving to disk.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressFilesEncrypted(System.String,System.Int32,System.String,System.String[])">
            <summary>
            Packs files into the archive asynchronously.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="archiveName">The archive file name</param>
            <param name="password">The archive password.</param>
            <param name="commonRootLength">The length of the common root of the file names.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressFilesEncrypted(System.IO.Stream,System.Int32,System.String,System.String[])">
            <summary>
            Packs files into the archive asynchronously.
            </summary>
            <param name="fileFullNames">Array of file names to pack.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressFiles( ... string archiveName ... ) overloads for archiving to disk.</param>
            <param name="password">The archive password.</param>
            <param name="commonRootLength">The length of the common root of the file names.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressDirectory(System.String,System.String)">
            <summary>
            Recursively packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveName">The archive file name.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressDirectory(System.String,System.IO.Stream)">
            <summary>
            Recursively packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressDirectory(System.String,System.String,System.String)">
            <summary>
            Recursively packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveName">The archive file name.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressDirectory(System.String,System.IO.Stream,System.String)">
            <summary>
            Recursively packs all files in the specified directory.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressDirectory(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Packs all files in the specified directory asynchronously.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveName">The archive file name.</param>        
            <param name="password">The archive password.</param>
            <param name="searchPattern">Search string, such as "*.txt".</param>
            <param name="recursion">If true, files will be searched for recursively; otherwise, not.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressDirectory(System.String,System.IO.Stream,System.String,System.String,System.Boolean)">
            <summary>
            Packs all files in the specified directory asynchronously.
            </summary>
            <param name="directory">The directory to compress.</param>
            <param name="archiveStream">The archive output stream.
            Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk.</param>        
            <param name="password">The archive password.</param>
            <param name="searchPattern">Search string, such as "*.txt".</param>
            <param name="recursion">If true, files will be searched for recursively; otherwise, not.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Compresses the specified stream.
            </summary>
            <param name="inStream">The source uncompressed stream.</param>
            <param name="outStream">The destination compressed stream.</param>
            <exception cref="T:System.ArgumentException">ArgumentException: at least one of the specified streams is invalid.</exception>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginCompressStream(System.IO.Stream,System.IO.Stream,System.String)">
            <summary>
            Compresses the specified stream.
            </summary>
            <param name="inStream">The source uncompressed stream.</param>
            <param name="outStream">The destination compressed stream.</param>
            <param name="password">The archive password.</param>
            <exception cref="T:System.ArgumentException">ArgumentException: at least one of the specified streams is invalid.</exception>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginModifyArchive(System.String,System.Collections.Generic.Dictionary{System.Int32,System.String})">
            <summary>
            Modifies the existing archive asynchronously (renames files or deletes them).
            </summary>
            <param name="archiveName">The archive file name.</param>
            <param name="newFileNames">New file names. Null value to delete the corresponding index.</param>
        </member>
        <member name="M:SevenZip.SevenZipCompressor.BeginModifyArchive(System.String,System.Collections.Generic.Dictionary{System.Int32,System.String},System.String)">
            <summary>
            Modifies the existing archive asynchronously (renames files or deletes them).
            </summary>
            <param name="archiveName">The archive file name.</param>
            <param name="newFileNames">New file names. Null value to delete the corresponding index.</param>
            <param name="password">The archive password.</param>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.CompressionLevel">
            <summary>
            Gets or sets the archiving compression level.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.CustomParameters">
            <summary>
            Gets the custom compression parameters - for advanced users only.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.IncludeEmptyDirectories">
            <summary>
            Gets or sets the value indicating whether to include empty directories to archives. Default is true.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.PreserveDirectoryRoot">
            <summary>
            Gets or sets the value indicating whether to preserve the directory root for CompressDirectory.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.DirectoryStructure">
            <summary>
            Gets or sets the value indicating whether to preserve the directory structure.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.CompressionMode">
            <summary>
            Gets or sets the compression mode.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.EncryptHeaders">
            <summary>
            Gets or sets the value indicating whether to encrypt 7-Zip archive headers.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.ScanOnlyWritable">
            <summary>
            Gets or sets the value indicating whether to compress files only open for writing.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.ZipEncryptionMethod">
            <summary>
            Gets or sets the encryption method for zip archives.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.DefaultItemName">
            <summary>
            Gets or sets the default archive item name used when an item to be compressed has no name, 
            for example, when you compress a MemoryStream instance.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.FastCompression">
            <summary>
            Gets or sets the value indicating whether to compress as fast as possible, without calling events.
            </summary>
        </member>
        <member name="E:SevenZip.SevenZipCompressor.FileCompressionStarted">
            <summary>
            Occurs when the next file is going to be packed.
            </summary>
            <remarks>Occurs when 7-zip engine requests for an input stream for the next file to pack it</remarks>
        </member>
        <member name="E:SevenZip.SevenZipCompressor.FileCompressionFinished">
            <summary>
            Occurs when the current file was compressed.
            </summary>
        </member>
        <member name="E:SevenZip.SevenZipCompressor.Compressing">
            <summary>
            Occurs when data are being compressed
            </summary>
            <remarks>Use this event for accurate progress handling and various ProgressBar.StepBy(e.PercentDelta) routines</remarks>
        </member>
        <member name="E:SevenZip.SevenZipCompressor.FilesFound">
            <summary>
            Occurs when all files information was determined and SevenZipCompressor is about to start to compress them.
            </summary>
            <remarks>The incoming int value indicates the number of scanned files.</remarks>
        </member>
        <member name="E:SevenZip.SevenZipCompressor.CompressionFinished">
            <summary>
            Occurs when the compression procedure is finished
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.ArchiveFormat">
            <summary>
            Gets or sets the archive format
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.CompressionMethod">
            <summary>
            Gets or sets the compression method
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.VolumeSize">
            <summary>
            Gets or sets the size in bytes of an archive volume (0 for no volumes).
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipCompressor.LzmaDictionarySize">
            <summary>
            Gets or sets the dictionary size for the managed LZMA algorithm.
            </summary>
        </member>
        <member name="T:SevenZip.SevenZipExtractor">
            <summary>
            Class for extracting and getting information about 7-zip archives
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.Init(System.String)">
            <summary>
            General initialization function.
            </summary>
            <param name="archiveFullName">The archive file name.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.Init(System.IO.Stream)">
            <summary>
            General initialization function.
            </summary>
            <param name="stream">The stream to read the archive from.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of SevenZipExtractor class.
            </summary>
            <param name="archiveStream">The stream to read the archive from.
            Use SevenZipExtractor(string) to extract from disk, though it is not necessary.</param>
            <remarks>The archive format is guessed by the signature.</remarks>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.#ctor(System.String)">
            <summary>
            Initializes a new instance of SevenZipExtractor class
            </summary>
            <param name="archiveFullName">The archive full file name</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of SevenZipExtractor class.
            </summary>
            <param name="archiveFullName">The archive full file name.</param>
            <param name="password">Password for an encrypted archive.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of SevenZipExtractor class.
            </summary>
            <param name="archiveStream">The stream to read the archive from.</param>
            <param name="password">Password for an encrypted archive.</param>
            <remarks>The archive format is guessed by the signature.</remarks>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.DisposedCheck">
            <summary>
            Checked whether the class was disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.GetArchiveStream(System.Boolean)">
            <summary>
            Gets the archive input stream.
            </summary>
            <returns>The archive input wrapper stream.</returns>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.OpenArchiveInner(SevenZip.IInStream,SevenZip.IArchiveOpenCallback)">
            <summary>
            Opens the archive and throws exceptions or returns OperationResult.DataError if any error occurs.
            </summary>       
            <param name="archiveStream">The IInStream compliant class instance, that is, the input stream.</param>
            <param name="openCallback">The ArchiveOpenCallback instance.</param>
            <returns>OperationResult.Ok if Open() succeeds.</returns>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.OpenArchive(SevenZip.IInStream,SevenZip.ArchiveOpenCallback)">
            <summary>
            Opens the archive and throws exceptions or returns OperationResult.DataError if any error occurs.
            </summary>
            <param name="archiveStream">The IInStream compliant class instance, that is, the input stream.</param>
            <param name="openCallback">The ArchiveOpenCallback instance.</param>
            <returns>True if Open() succeeds; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.GetArchiveInfo(System.Boolean)">
            <summary>
            Retrieves all information about the archive.
            </summary>
            <exception cref="T:SevenZip.SevenZipArchiveException"/>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.InitArchiveFileData(System.Boolean)">
            <summary>
            Ensure that _archiveFileData is loaded.
            </summary>
            <param name="disposeStream">Dispose the archive stream after this operation.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.SolidIndexes(System.UInt32[])">
            <summary>
            Produces an array of indexes from 0 to the maximum value in the specified array
            </summary>
            <param name="indexes">The source array</param>
            <returns>The array of indexes from 0 to the maximum value in the specified array</returns>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.CheckIndexes(System.Int32[])">
            <summary>
            Checkes whether all the indexes are valid.
            </summary>
            <param name="indexes">The indexes to check.</param>
            <returns>True is valid; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.GetArchiveExtractCallback(System.String,System.Int32,System.Collections.Generic.List{System.UInt32})">
            <summary>
            Gets the IArchiveExtractCallback callback
            </summary>
            <param name="directory">The directory where extract the files</param>
            <param name="filesCount">The number of files to be extracted</param>
            <param name="actualIndexes">The list of actual indexes (solid archives support)</param>
            <returns>The ArchiveExtractCallback callback</returns>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.GetArchiveExtractCallback(System.IO.Stream,System.UInt32,System.Int32)">
            <summary>
            Gets the IArchiveExtractCallback callback
            </summary>
            <param name="stream">The stream where extract the file</param>
            <param name="index">The file index</param>
            <param name="filesCount">The number of files to be extracted</param>
            <returns>The ArchiveExtractCallback callback</returns>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.ValidateStream(System.IO.Stream)">
            <summary>
            Checks if the specified stream supports extraction.
            </summary>
            <param name="stream">The stream to check.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.Dispose">
            <summary>
            Releases the unmanaged resources used by SevenZipExtractor.
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.FileExtractionStartedEventProxy(System.Object,SevenZip.FileInfoEventArgs)">
            <summary>
            Event proxy for FileExtractionStarted.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.FileExtractionFinishedEventProxy(System.Object,SevenZip.FileInfoEventArgs)">
            <summary>
            Event proxy for FileExtractionFinished.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.ExtractingEventProxy(System.Object,SevenZip.ProgressEventArgs)">
            <summary>
            Event proxy for Extractng.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.FileExistsEventProxy(System.Object,SevenZip.FileOverwriteEventArgs)">
            <summary>
            Event proxy for FileExists.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.Check">
            <summary>
            Performs the archive integrity test.
            </summary>
            <returns>True is the archive is ok; otherwise, false.</returns>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.ExtractFile(System.String,System.IO.Stream)">
            <summary>
            Unpacks the file by its name to the specified stream.
            </summary>
            <param name="fileName">The file full name in the archive file table.</param>
            <param name="stream">The stream where the file is to be unpacked.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.ExtractFile(System.Int32,System.IO.Stream)">
            <summary>
            Unpacks the file by its index to the specified stream.
            </summary>
            <param name="index">Index in the archive file table.</param>
            <param name="stream">The stream where the file is to be unpacked.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.ExtractFiles(System.String,System.Int32[])">
            <summary>
            Unpacks files by their indices to the specified directory.
            </summary>
            <param name="indexes">indexes of the files in the archive file table.</param>
            <param name="directory">Directory where the files are to be unpacked.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.ExtractFiles(System.String,System.String[])">
            <summary>
            Unpacks files by their full names to the specified directory.
            </summary>
            <param name="fileNames">Full file names in the archive file table.</param>
            <param name="directory">Directory where the files are to be unpacked.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.ExtractFiles(SevenZip.ExtractFileCallback)">
            <summary>
            Extracts files from the archive, giving a callback the choice what
            to do with each file. The order of the files is given by the archive.
            7-Zip (and any other solid) archives are NOT supported.
            </summary>
            <param name="extractFileCallback">The callback to call for each file in the archive.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.ExtractArchive(System.String)">
            <summary>
            Unpacks the whole archive to the specified directory.
            </summary>
            <param name="directory">The directory where the files are to be unpacked.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.DecompressStream(System.IO.Stream,System.IO.Stream,System.Nullable{System.Int32},System.EventHandler{SevenZip.ProgressEventArgs})">
            <summary>
            Decompress the specified stream (C# inside)
            </summary>
            <param name="inStream">The source compressed stream</param>
            <param name="outStream">The destination uncompressed stream</param>
            <param name="inLength">The length of compressed data (null for inStream.Length)</param>
            <param name="codeProgressEvent">The event for handling the code progress</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.ExtractBytes(System.Byte[])">
            <summary>
            Decompress byte array compressed with LZMA algorithm (C# inside)
            </summary>
            <param name="data">Byte array to decompress</param>
            <returns>Decompressed byte array</returns>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.RecreateInstanceIfNeeded">
            <summary>
            Recreates the instance of the SevenZipExtractor class.
            Used in asynchronous methods.
            </summary>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.BeginExtractArchive(System.String)">
            <summary>
            Unpacks the whole archive asynchronously to the specified directory name at the specified priority.
            </summary>
            <param name="directory">The directory where the files are to be unpacked.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.BeginExtractFile(System.String,System.IO.Stream)">
            <summary>
            Unpacks the file asynchronously by its name to the specified stream.
            </summary>
            <param name="fileName">The file full name in the archive file table.</param>
            <param name="stream">The stream where the file is to be unpacked.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.BeginExtractFile(System.Int32,System.IO.Stream)">
            <summary>
            Unpacks the file asynchronously by its index to the specified stream.
            </summary>
            <param name="index">Index in the archive file table.</param>
            <param name="stream">The stream where the file is to be unpacked.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.BeginExtractFiles(System.String,System.Int32[])">
            <summary>
            Unpacks files asynchronously by their indices to the specified directory.
            </summary>
            <param name="indexes">indexes of the files in the archive file table.</param>
            <param name="directory">Directory where the files are to be unpacked.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.BeginExtractFiles(System.String,System.String[])">
            <summary>
            Unpacks files asynchronously by their full names to the specified directory.
            </summary>
            <param name="fileNames">Full file names in the archive file table.</param>
            <param name="directory">Directory where the files are to be unpacked.</param>
        </member>
        <member name="M:SevenZip.SevenZipExtractor.BeginExtractFiles(SevenZip.ExtractFileCallback)">
            <summary>
            Extracts files from the archive asynchronously, giving a callback the choice what
            to do with each file. The order of the files is given by the archive.
            7-Zip (and any other solid) archives are NOT supported.
            </summary>
            <param name="extractFileCallback">The callback to call for each file in the archive.</param>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.FileName">
            <summary>
            Gets or sets archive full file name
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.PackedSize">
            <summary>
            Gets the size of the archive file
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.UnpackedSize">
            <summary>
            Gets the size of unpacked archive data
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.IsSolid">
            <summary>
            Gets a value indicating whether the archive is solid
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.FilesCount">
            <summary>
            Gets the number of files in the archive
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.Format">
            <summary>
            Gets archive format
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.PreserveDirectoryStructure">
            <summary>
            Gets or sets the value indicatin whether to preserve the directory structure of extracted files.
            </summary>
        </member>
        <member name="E:SevenZip.SevenZipExtractor.FileExtractionStarted">
            <summary>
            Occurs when a new file is going to be unpacked.
            </summary>
            <remarks>Occurs when 7-zip engine requests for an output stream for a new file to unpack in.</remarks>
        </member>
        <member name="E:SevenZip.SevenZipExtractor.FileExtractionFinished">
            <summary>
            Occurs when a file has been successfully unpacked.
            </summary>
        </member>
        <member name="E:SevenZip.SevenZipExtractor.ExtractionFinished">
            <summary>
            Occurs when the archive has been unpacked.
            </summary>
        </member>
        <member name="E:SevenZip.SevenZipExtractor.Extracting">
            <summary>
            Occurs when data are being extracted.
            </summary>
            <remarks>Use this event for accurate progress handling and various ProgressBar.StepBy(e.PercentDelta) routines.</remarks>
        </member>
        <member name="E:SevenZip.SevenZipExtractor.FileExists">
            <summary>
            Occurs during the extraction when a file already exists.
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.ArchiveFileData">
            <summary>
            Gets the collection of ArchiveFileInfo with all information about files in the archive
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.ArchiveProperties">
            <summary>
            Gets the properties for the current archive
            </summary>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.ArchiveFileNames">
            <summary>
            Gets the collection of all file names contained in the archive.
            </summary>
            <remarks>
            Each get recreates the collection
            </remarks>
        </member>
        <member name="P:SevenZip.SevenZipExtractor.VolumeFileNames">
            <summary>
            Gets the list of archive volume file names.
            </summary>
        </member>
        <member name="T:SevenZip.SevenZipExtractor.ExtractArchiveDelegate">
            <summary>
            The delegate to use in BeginExtractArchive.
            </summary>
            <param name="directory">The directory where the files are to be unpacked.</param>
        </member>
        <member name="T:SevenZip.SevenZipExtractor.ExtractFileByFileNameDelegate">
            <summary>
            The delegate to use in BeginExtractFile (by file name).
            </summary>
            <param name="fileName">The file full name in the archive file table.</param>
            <param name="stream">The stream where the file is to be unpacked.</param>
        </member>
        <member name="T:SevenZip.SevenZipExtractor.ExtractFileByIndexDelegate">
            <summary>
            The delegate to use in BeginExtractFile (by index).
            </summary>
            <param name="index">Index in the archive file table.</param>
            <param name="stream">The stream where the file is to be unpacked.</param>
        </member>
        <member name="T:SevenZip.SevenZipExtractor.ExtractFiles1Delegate">
            <summary>
            The delegate to use in BeginExtractFiles(string directory, params int[] indexes).
            </summary>
            <param name="indexes">indexes of the files in the archive file table.</param>
            <param name="directory">Directory where the files are to be unpacked.</param>
        </member>
        <member name="T:SevenZip.SevenZipExtractor.ExtractFiles2Delegate">
            <summary>
            The delegate to use in BeginExtractFiles(string directory, params string[] fileNames).
            </summary>
            <param name="fileNames">Full file names in the archive file table.</param>
            <param name="directory">Directory where the files are to be unpacked.</param>
        </member>
        <member name="T:SevenZip.SevenZipExtractor.ExtractFiles3Delegate">
            <summary>
            The delegate to use in BeginExtractFiles(ExtractFileCallback extractFileCallback).
            </summary>
            <param name="extractFileCallback">The callback to call for each file in the archive.</param>
        </member>
        <member name="T:SevenZip.DisposeVariableWrapper">
            <summary>
            A class that has DisposeStream property.
            </summary>
        </member>
        <member name="T:SevenZip.StreamWrapper">
            <summary>
            Stream wrapper used in InStreamWrapper
            </summary>
        </member>
        <member name="F:SevenZip.StreamWrapper._fileName">
            <summary>
            File name associated with the stream (for date fix)
            </summary>
        </member>
        <member name="F:SevenZip.StreamWrapper._baseStream">
            <summary>
            Worker stream for reading, writing and seeking.
            </summary>
        </member>
        <member name="M:SevenZip.StreamWrapper.#ctor(System.IO.Stream,System.String,System.DateTime,System.Boolean)">
            <summary>
            Initializes a new instance of the StreamWrapper class
            </summary>
            <param name="baseStream">Worker stream for reading, writing and seeking</param>
            <param name="fileName">File name associated with the stream (for attributes fix)</param>
            <param name="time">File last write time (for attributes fix)</param>
            <param name="disposeStream">Indicates whether to dispose the baseStream</param>
        </member>
        <member name="M:SevenZip.StreamWrapper.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the StreamWrapper class
            </summary>
            <param name="baseStream">Worker stream for reading, writing and seeking</param>
            <param name="disposeStream">Indicates whether to dispose the baseStream</param>
        </member>
        <member name="M:SevenZip.StreamWrapper.Dispose">
            <summary>
            Cleans up any resources used and fixes file attributes.
            </summary>
        </member>
        <member name="P:SevenZip.StreamWrapper.BaseStream">
            <summary>
            Gets the worker stream for reading, writing and seeking.
            </summary>
        </member>
        <member name="T:SevenZip.InStreamWrapper">
            <summary>
            IInStream wrapper used in stream read operations.
            </summary>
        </member>
        <member name="M:SevenZip.InStreamWrapper.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the InStreamWrapper class.
            </summary>
            <param name="baseStream">Stream for writing data</param>
            <param name="disposeStream">Indicates whether to dispose the baseStream</param>
        </member>
        <member name="M:SevenZip.InStreamWrapper.Read(System.Byte[],System.UInt32)">
            <summary>
            Reads data from the stream.
            </summary>
            <param name="data">A data array.</param>
            <param name="size">The array size.</param>
            <returns>The read bytes count.</returns>
        </member>
        <member name="E:SevenZip.InStreamWrapper.BytesRead">
            <summary>
            Occurs when IntEventArgs.Value bytes were read from the source.
            </summary>
        </member>
        <member name="T:SevenZip.OutStreamWrapper">
            <summary>
            IOutStream wrapper used in stream write operations.
            </summary>
        </member>
        <member name="M:SevenZip.OutStreamWrapper.#ctor(System.IO.Stream,System.String,System.DateTime,System.Boolean)">
            <summary>
            Initializes a new instance of the OutStreamWrapper class
            </summary>
            <param name="baseStream">Stream for writing data</param>
            <param name="fileName">File name (for attributes fix)</param>
            <param name="time">Time of the file creation (for attributes fix)</param>
            <param name="disposeStream">Indicates whether to dispose the baseStream</param>
        </member>
        <member name="M:SevenZip.OutStreamWrapper.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the OutStreamWrapper class
            </summary>
            <param name="baseStream">Stream for writing data</param>
            <param name="disposeStream">Indicates whether to dispose the baseStream</param>
        </member>
        <member name="M:SevenZip.OutStreamWrapper.Write(System.Byte[],System.UInt32,System.IntPtr)">
            <summary>
            Writes data to the stream
            </summary>
            <param name="data">Data array</param>
            <param name="size">Array size</param>
            <param name="processedSize">Count of written bytes</param>
            <returns>Zero if Ok</returns>
        </member>
        <member name="E:SevenZip.OutStreamWrapper.BytesWritten">
            <summary>
            Occurs when IntEventArgs.Value bytes were written.
            </summary>
        </member>
        <member name="T:SevenZip.MultiStreamWrapper">
            <summary>
            Base multi volume stream wrapper class.
            </summary>
        </member>
        <member name="M:SevenZip.MultiStreamWrapper.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MultiStreamWrapper class.
            </summary>
            <param name="dispose">Perform Dispose() if requested to.</param>
        </member>
        <member name="M:SevenZip.MultiStreamWrapper.Dispose">
            <summary>
            Cleans up any resources used and fixes file attributes.
            </summary>
        </member>
        <member name="P:SevenZip.MultiStreamWrapper.Length">
            <summary>
            Gets the total length of input data.
            </summary>
        </member>
        <member name="T:SevenZip.InMultiStreamWrapper">
            <summary>
            IInStream wrapper used in stream multi volume read operations.
            </summary>
        </member>
        <member name="M:SevenZip.InMultiStreamWrapper.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the InMultiStreamWrapper class.
            </summary>
            <param name="fileName">The archive file name.</param>
            <param name="dispose">Perform Dispose() if requested to.</param>
        </member>
        <member name="M:SevenZip.InMultiStreamWrapper.Read(System.Byte[],System.UInt32)">
            <summary>
            Reads data from the stream.
            </summary>
            <param name="data">A data array.</param>
            <param name="size">The array size.</param>
            <returns>The read bytes count.</returns>
        </member>
        <member name="T:SevenZip.OutMultiStreamWrapper">
            <summary>
            IOutStream wrapper used in multi volume stream write operations.
            </summary>
        </member>
        <member name="M:SevenZip.OutMultiStreamWrapper.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the OutMultiStreamWrapper class.
            </summary>
            <param name="archiveName">The archive name.</param>
            <param name="volumeSize">The volume size.</param>
        </member>
        <member name="M:SevenZip.FakeOutStreamWrapper.Write(System.Byte[],System.UInt32,System.IntPtr)">
            <summary>
            Does nothing except calling the BytesWritten event
            </summary>
            <param name="data">Data array</param>
            <param name="size">Array size</param>
            <param name="processedSize">Count of written bytes</param>
            <returns>Zero if Ok</returns>
        </member>
        <member name="E:SevenZip.FakeOutStreamWrapper.BytesWritten">
            <summary>
            Occurs when IntEventArgs.Value bytes were written
            </summary>
        </member>
        <member name="T:Lib2013.TSFWrapper">
            <summary>
            提供TSF控制
            </summary>
        </member>
        <member name="M:Lib2013.TSFWrapper.GetLangIDs">
            <summary>
            取得地區語言
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lib2013.TSFWrapper.ActiveInputMethodWithDesc(System.Int16,System.String)">
            <summary>
            設定輸入法
            </summary>
            <param name="langID">語系ID</param>
            <param name="desc">輸入法名稱</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.TSFWrapper.GetInputMethodList(System.Int16)">
            <summary>
            取得輸入法列表
            </summary>
            <param name="langID">語系ID</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.TSFWrapper.GetCurrentInputMethodDesc(System.Int16)">
            作用中輸入法名稱
             <summary>
             作用中輸入法名稱
             </summary>
             <param name="langID">語系ID</param>
             <returns></returns>
        </member>
        <member name="M:Lib2013.TSFWrapper.DeActiveInputMethod(System.Int16)">
            <summary>
            關閉輸入法
            </summary>
            <param name="langID">語系ID</param>
            <returns></returns>
        </member>
        <member name="F:Lib2013.oGroupBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGroupBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGroupBox.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oImageButton.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oImageButton.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oImageButton.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="T:Lib2013.oImageMap">
            <summary>
            Summary description for ImageMap.
            </summary>
        </member>
        <member name="F:Lib2013.oImageMap.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oImageMap.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oImageMap.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oLabel.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oLabel.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oLabel.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="M:Lib2013.oColorLabel.SetText(System.String,System.Drawing.Color[])">
            <summary>
            設定文字及顏色
            </summary>
            <param name="Text">文字</param>
            <param name="MarkColor">顏色</param>
        </member>
        <member name="F:Lib2013.oColorLabel.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oColorLabel.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oColorLabel.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oMultLabel.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oMultLabel.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oMultLabel.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oListView.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oListView.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oListView.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oPanel.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oPanel.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oPanel.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oTabControl.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oTabControl.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oTabControl.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="M:Lib2013.oStyleTextBox.BulidCharsWidthList">
            <summary>
            建立字元寬度表
            </summary>
        </member>
        <member name="M:Lib2013.oStyleTextBox.MeasureCharSize">
            <summary>
            測量字元大小
            </summary>
        </member>
        <member name="M:Lib2013.oStyleTextBox.GetMouseDownIndex(System.Int32)">
            <summary>
            滑鼠位置轉換字元位置
            </summary>
        </member>
        <member name="F:Lib2013.oStyleTextBox.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oStyleTextBox.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oStyleTextBox.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oDebugForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lib2013.oDebugForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lib2013.oDebugForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Lib2013.oToolStripButton2.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oToolStripButton2.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oToolStripButton2.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oToolStripDropDownButton.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oToolStripDropDownButton.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oToolStripDropDownButton.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oToolStripButton.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oToolStripButton.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oToolStripButton.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.ImageSplicePaddingTypeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lib2013.ImageSplicePaddingTypeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lib2013.ImageSplicePaddingTypeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Lib2013.LoadingForm">
            <summary>
            顯示載入中的視窗
            </summary>
        </member>
        <member name="F:Lib2013.LoadingForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lib2013.LoadingForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lib2013.LoadingForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Lib2013.oMainForm2.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lib2013.oMainForm2.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lib2013.oMainForm2.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.AutocompleteItem">
            <summary>
            Item of autocomplete menu
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.AutocompleteItem.GetTextForReplace">
            <summary>
            Returns text for inserting into Textbox
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.AutocompleteItem.Compare(System.String)">
            <summary>
            Compares fragment text with this item
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.AutocompleteItem.ToString">
            <summary>
            Returns text for display into popup menu
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.AutocompleteItem.OnSelected(FastColoredTextBoxNS.AutocompleteMenu,FastColoredTextBoxNS.SelectedEventArgs)">
            <summary>
            This method is called after item inserted into text
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteItem.ToolTipTitle">
            <summary>
            Title for tooltip.
            </summary>
            <remarks>Return null for disable tooltip for this item</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteItem.ToolTipText">
            <summary>
            Tooltip text.
            </summary>
            <remarks>For display tooltip text, ToolTipTitle must be not null</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteItem.MenuText">
            <summary>
            Menu text. This text is displayed in the drop-down menu.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteItem.ForeColor">
            <summary>
            Fore color of text of item
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteItem.BackColor">
            <summary>
            Back color of item
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.CompareResult.Hidden">
            <summary>
            Item do not appears
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.CompareResult.Visible">
            <summary>
            Item appears
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.CompareResult.VisibleAndSelected">
            <summary>
            Item appears and will selected
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.SnippetAutocompleteItem">
            <summary>
            Autocomplete item for code snippets
            </summary>
            <remarks>Snippet can contain special char ^ for caret position.</remarks>
        </member>
        <member name="M:FastColoredTextBoxNS.SnippetAutocompleteItem.Compare(System.String)">
            <summary>
            Compares fragment text with this item
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.MethodAutocompleteItem">
            <summary>
            This autocomplete item appears after dot
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.SuggestItem">
            <summary>
            This Item does not check correspondence to current text fragment.
            SuggestItem is intended for dynamic menus.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.AutocompleteMenu">
            <summary>
            Popup menu for autocomplete
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.AutocompleteMenu.Show(System.Boolean)">
            <summary>
            Shows popup menu immediately
            </summary>
            <param name="forced">If True - MinFragmentLength will be ignored</param>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteMenu.SearchPattern">
            <summary>
            Regex pattern for serach fragment around caret
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteMenu.MinFragmentLength">
            <summary>
            Minimum fragment length for popup
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.AutocompleteMenu.Selecting">
            <summary>
            User selects item
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.AutocompleteMenu.Selected">
            <summary>
            It fires after item inserting
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.AutocompleteMenu.Opening">
            <summary>
            Occurs when popup menu is opening
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteMenu.AllowTabKey">
            <summary>
            Allow TAB for select menu item
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteMenu.AppearInterval">
            <summary>
            Interval of menu appear (ms)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteMenu.SelectedColor">
            <summary>
            Back color of selected item
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteMenu.HoveredColor">
            <summary>
            Border color of hovered item
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteMenu.MinimumSize">
            <summary>
            Minimal size of menu
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteMenu.ImageList">
            <summary>
            Image list of menu
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteMenu.ToolTipDuration">
            <summary>
            Tooltip duration (ms)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutocompleteMenu.ToolTip">
            <summary>
            Tooltip
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.BaseBookmarks">
            <summary>
            Base class for bookmark collection
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.Bookmarks">
            <summary>
            Collection of bookmarks
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Bookmarks.Remove(System.Int32)">
            <summary>
            Removes bookmark by line index
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Bookmarks.GetBookmark(System.Int32)">
            <summary>
            Returns Bookmark by index.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.Bookmark">
            <summary>
            Bookmark of FastColoredTextbox
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Bookmark.DoVisible">
            <summary>
            Scroll textbox to the bookmark
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Bookmark.Name">
            <summary>
            Name of bookmark
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Bookmark.LineIndex">
            <summary>
            Line index
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Bookmark.Color">
            <summary>
            Color of bookmark sign
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.Char">
            <summary>
            Char and style
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.Char.c">
            <summary>
            Unicode character
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.Char.style">
            <summary>
            Style bit mask
            </summary>
            <remarks>Bit 1 in position n means that this char will rendering by FastColoredTextBox.Styles[n]</remarks>
        </member>
        <member name="T:FastColoredTextBoxNS.InsertCharCommand">
            <summary>
            Insert single char
            </summary>
            <remarks>This operation includes also insertion of new line and removing char by backspace</remarks>
        </member>
        <member name="M:FastColoredTextBoxNS.InsertCharCommand.#ctor(FastColoredTextBoxNS.TextSource,System.Char)">
            <summary>
            Constructor
            </summary>
            <param name="tb">Underlaying textbox</param>
            <param name="c">Inserting char</param>
        </member>
        <member name="M:FastColoredTextBoxNS.InsertCharCommand.Undo">
            <summary>
            Undo operation
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.InsertCharCommand.Execute">
            <summary>
            Execute operation
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.InsertCharCommand.MergeLines(System.Int32,FastColoredTextBoxNS.TextSource)">
            <summary>
            Merge lines i and i+1
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.InsertTextCommand">
            <summary>
            Insert text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.InsertTextCommand.#ctor(FastColoredTextBoxNS.TextSource,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="tb">Underlaying textbox</param>
            <param name="insertedText">Text for inserting</param>
        </member>
        <member name="M:FastColoredTextBoxNS.InsertTextCommand.Undo">
            <summary>
            Undo operation
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.InsertTextCommand.Execute">
            <summary>
            Execute operation
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.ReplaceTextCommand">
            <summary>
            Insert text into given ranges
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.ReplaceTextCommand.#ctor(FastColoredTextBoxNS.TextSource,System.Collections.Generic.List{FastColoredTextBoxNS.Range},System.String)">
            <summary>
            Constructor
            </summary>
            <param name="tb">Underlaying textbox</param>
            <param name="ranges">List of ranges for replace</param>
            <param name="insertedText">Text for inserting</param>
        </member>
        <member name="M:FastColoredTextBoxNS.ReplaceTextCommand.Undo">
            <summary>
            Undo operation
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.ReplaceTextCommand.Execute">
            <summary>
            Execute operation
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.ClearSelectedCommand">
            <summary>
            Clear selected text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.ClearSelectedCommand.#ctor(FastColoredTextBoxNS.TextSource)">
            <summary>
            Construstor
            </summary>
            <param name="tb">Underlaying textbox</param>
        </member>
        <member name="M:FastColoredTextBoxNS.ClearSelectedCommand.Undo">
            <summary>
            Undo operation
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.ClearSelectedCommand.Execute">
            <summary>
            Execute operation
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.ReplaceMultipleTextCommand">
            <summary>
            Replaces text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.ReplaceMultipleTextCommand.#ctor(FastColoredTextBoxNS.TextSource,System.Collections.Generic.List{FastColoredTextBoxNS.ReplaceMultipleTextCommand.ReplaceRange})">
            <summary>
            Constructor
            </summary>
            <param name="ts">Underlaying textsource</param>
            <param name="ranges">List of ranges for replace</param>
        </member>
        <member name="M:FastColoredTextBoxNS.ReplaceMultipleTextCommand.Undo">
            <summary>
            Undo operation
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.ReplaceMultipleTextCommand.Execute">
            <summary>
            Execute operation
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.RemoveLinesCommand">
            <summary>
            Removes lines
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.RemoveLinesCommand.#ctor(FastColoredTextBoxNS.TextSource,System.Collections.Generic.List{System.Int32})">
            <summary>
            Constructor
            </summary>
            <param name="tb">Underlaying textbox</param>
            <param name="ranges">List of ranges for replace</param>
            <param name="insertedText">Text for inserting</param>
        </member>
        <member name="M:FastColoredTextBoxNS.RemoveLinesCommand.Undo">
            <summary>
            Undo operation
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.RemoveLinesCommand.Execute">
            <summary>
            Execute operation
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.MultiRangeCommand">
            <summary>
            Wrapper for multirange commands
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.SelectCommand">
            <summary>
            Remembers current selection and restore it after Undo
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.DocumentMap">
            <summary>
            Shows document map of FCTB
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.DocumentMap.Scale">
            <summary>
            Scale
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.DocumentMap.ScrollbarVisible">
            <summary>
            Scrollbar visibility
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.ExportToHTML">
            <summary>
            Exports colored text as HTML
            </summary>
            <remarks>At this time only TextStyle renderer is supported. Other styles is not exported.</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.ExportToHTML.UseNbsp">
            <summary>
            Use nbsp; instead space
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.ExportToHTML.UseForwardNbsp">
            <summary>
            Use nbsp; instead space in beginning of line
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.ExportToHTML.UseOriginalFont">
            <summary>
            Use original font
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.ExportToHTML.UseStyleTag">
            <summary>
            Use style tag instead style attribute
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.ExportToHTML.UseBr">
            <summary>
            Use 'br' tag instead of '\n'
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.ExportToHTML.IncludeLineNumbers">
            <summary>
            Includes line numbers
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.ExportToRTF">
            <summary>
            Exports colored text as RTF
            </summary>
            <remarks>At this time only TextStyle renderer is supported. Other styles is not exported.</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.ExportToRTF.IncludeLineNumbers">
            <summary>
            Includes line numbers
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.ExportToRTF.UseOriginalFont">
            <summary>
            Use original font
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.FastColoredTextBox">
            <summary>
            Fast colored textbox
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ClearHints">
            <summary>
            Removes all hints
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.AddHint(FastColoredTextBoxNS.Range,System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Add and shows the hint
            </summary>
            <param name="range">Linked range</param>
            <param name="innerControl">Inner control</param>
            <param name="scrollToHint">Scrolls textbox to the hint</param>
            <param name="inline">Inlining. If True then hint will moves apart text</param>
            <param name="dock">Docking. If True then hint will fill whole line</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.AddHint(FastColoredTextBoxNS.Range,System.Windows.Forms.Control)">
            <summary>
            Add and shows the hint
            </summary>
            <param name="range">Linked range</param>
            <param name="innerControl">Inner control</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.AddHint(FastColoredTextBoxNS.Range,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Add and shows simple text hint
            </summary>
            <param name="range">Linked range</param>
            <param name="text">Text of simple hint</param>
            <param name="scrollToHint">Scrolls textbox to the hint</param>
            <param name="inline">Inlining. If True then hint will moves apart text</param>
            <param name="dock">Docking. If True then hint will fill whole line</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.AddHint(FastColoredTextBoxNS.Range,System.String)">
            <summary>
            Add and shows simple text hint
            </summary>
            <param name="range">Linked range</param>
            <param name="text">Text of simple hint</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OnHintClick(FastColoredTextBoxNS.Hint)">
            <summary>
            Occurs when user click on the hint
            </summary>
            <param name="hint"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OnVisibleRangeChanged">
            <summary>
            Occurs when VisibleRange is changed
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Invalidate">
            <summary>
            Invalidates the entire surface of the control and causes the control to be redrawn.
            This method is thread safe and does not require Invoke.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetStylesOfChar(FastColoredTextBoxNS.Place)">
            <summary>
            Returns list of styles of given place
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.NeedRecalc">
            <summary>
            Call this method if the recalc of the position of lines is needed.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.NeedRecalc(System.Boolean)">
            <summary>
            Call this method if the recalc of the position of lines is needed.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.NeedRecalc(System.Boolean,System.Boolean)">
            <summary>
            Call this method if the recalc of the position of lines is needed.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.NavigateForward">
            <summary>
            Navigates forward (by Line.LastVisit property)
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.NavigateBackward">
            <summary>
            Navigates backward (by Line.LastVisit property)
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Navigate(System.Int32)">
            <summary>
            Navigates to defined line, without Line.LastVisit reseting
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.AddStyle(FastColoredTextBoxNS.Style)">
            <summary>
            Add new style
            </summary>
            <returns>Layer index of this style</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ShowFindDialog">
            <summary>
            Shows find dialog
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ShowFindDialog(System.String)">
            <summary>
            Shows find dialog
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ShowReplaceDialog">
            <summary>
            Shows replace dialog
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ShowReplaceDialog(System.String)">
            <summary>
            Shows replace dialog
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetLineLength(System.Int32)">
            <summary>
            Gets length of given line
            </summary>
            <param name="iLine">Line index</param>
            <returns>Length of line</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetLine(System.Int32)">
            <summary>
            Get range of line
            </summary>
            <param name="iLine">Line index</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Copy">
            <summary>
            Copy selected text into Clipboard
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Cut">
            <summary>
            Cut selected text into Clipboard
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Paste">
            <summary>
            Paste text from clipboard into selected position
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.SelectAll">
            <summary>
            Select all chars of text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GoEnd">
            <summary>
            Move caret to end of text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GoHome">
            <summary>
            Move caret to first position
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Clear">
            <summary>
            Clear text, styles, history, caches
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ClearStylesBuffer">
            <summary>
            Clear buffer of styles
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ClearStyle(FastColoredTextBoxNS.StyleIndex)">
            <summary>
            Clear style of all text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ClearUndo">
            <summary>
            Clears undo and redo stacks
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.InsertText(System.String)">
            <summary>
            Insert text into current selected position
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.InsertText(System.String,System.Boolean)">
            <summary>
            Insert text into current selected position
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.InsertText(System.String,FastColoredTextBoxNS.Style)">
            <summary>
            Insert text into current selection position (with predefined style)
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.InsertText(System.String,FastColoredTextBoxNS.Style,System.Boolean)">
            <summary>
            Insert text into current selection position (with predefined style)
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.AppendText(System.String)">
            <summary>
            Append string to end of the Text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.AppendText(System.String,FastColoredTextBoxNS.Style)">
            <summary>
            Append string to end of the Text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetStyleIndex(FastColoredTextBoxNS.Style)">
            <summary>
            Returns index of the style in Styles
            -1 otherwise
            </summary>
            <param name="style"></param>
            <returns>Index of the style in Styles</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetStyleIndexMask(FastColoredTextBoxNS.Style[])">
            <summary>
            Returns StyleIndex mask of given styles
            </summary>
            <param name="styles"></param>
            <returns>StyleIndex mask of given styles</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ClearSelected">
            <summary>
            Deletes selected chars
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ClearCurrentLine">
            <summary>
            Deletes current line(s)
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.CalcCutOffs(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Boolean,System.Boolean,FastColoredTextBoxNS.Line)">
            <summary>
            Calculates wordwrap cutoffs
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DoVisibleRectangle(System.Drawing.Rectangle)">
            <summary>
            Scroll control for display defined rectangle
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.UpdateScrollbars">
            <summary>
            Updates scrollbar position after Value changed
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DoCaretVisible">
            <summary>
            Scroll control for display caret
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ScrollLeft">
            <summary>
            Scroll control left
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DoSelectionVisible">
            <summary>
            Scroll control for display selection area
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DoRangeVisible(FastColoredTextBoxNS.Range)">
            <summary>
            Scroll control for display given range
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DoRangeVisible(FastColoredTextBoxNS.Range,System.Boolean)">
            <summary>
            Scroll control for display given range
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ProcessKey(System.Windows.Forms.Keys)">
            <summary>
            Process control keys
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GotoNextBookmark(System.Int32)">
            <summary>
            Scrolls to nearest bookmark or to first bookmark
            </summary>
            <param name="iLine">Current bookmark line index</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GotoPrevBookmark(System.Int32)">
            <summary>
            Scrolls to nearest previous bookmark or to last bookmark
            </summary>
            <param name="iLine">Current bookmark line index</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.BookmarkLine(System.Int32)">
            <summary>
            Bookmarks line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.UnbookmarkLine(System.Int32)">
            <summary>
            Unbookmarks current line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.MoveSelectedLinesDown">
            <summary>
            Moves selected lines down
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.MoveSelectedLinesUp">
            <summary>
            Moves selected lines up
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.UpperCase">
            <summary>
            Convert selected text to upper case
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.LowerCase">
            <summary>
            Convert selected text to lower case
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.TitleCase">
            <summary>
            Convert selected text to title case
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.CommentSelected">
            <summary>
            Insert/remove comment prefix into selected lines
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.CommentSelected(System.String)">
            <summary>
            Insert/remove comment prefix into selected lines
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ProcessKey(System.Char,System.Windows.Forms.Keys)">
            <summary>
            Process "real" keys (no control)
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DoAutoIndentChars(System.Int32)">
            <summary>
            Do AutoIndentChars
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.FindChar(System.Char)">
            <summary>
            Finds given char after current caret position, moves the caret to found pos.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DoAutoIndent(System.Int32)">
            <summary>
            Inserts autoindent's spaces in the line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.CalcAutoIndent(System.Int32)">
            <summary>
            Returns needed start space count for the line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Undo">
            <summary>
            Undo last operation
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Redo">
            <summary>
            Redo
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DrawText(System.Drawing.Graphics,FastColoredTextBoxNS.Place,System.Drawing.Size)">
            <summary>
            Draws text to given Graphics
            </summary>
            <param name="gr"></param>
            <param name="start">Start place of drawing text</param>
            <param name="size">Size of drawing</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw control
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetControlPanelWheelScrollLinesValue">
            <summary>
            Gets the value for the system control panel mouse wheel scroll settings.
            The value returns the number of lines that shall be scolled if the user turns the mouse wheet one step.
            </summary>
            <remarks>
            This methods gets the "WheelScrollLines" value our from the registry key "HKEY_CURRENT_USER\Control Panel\Desktop".
            If the value of this option is 0, the screen will not scroll when the mouse wheel is turned.
            If the value of this option is -1 or is greater than the number of lines visible in the window,
            the screen will scroll up or down by one page.
            </remarks>
            <returns>
            Number of lines to scrol l when the mouse wheel is turned
            </returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.PointToPlace(System.Drawing.Point)">
            <summary>
            Gets nearest line and char position from coordinates
            </summary>
            <param name="point">Point</param>
            <returns>Line and char position</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.PointToPosition(System.Drawing.Point)">
            <summary>
            Gets nearest absolute text position for given point
            </summary>
            <param name="point">Point</param>
            <returns>Position</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OnTextChanging(System.String@)">
            <summary>
            Fires TextChanging event
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OnTextChanged">
            <summary>
            Fires TextChanged event
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OnTextChanged(System.Int32,System.Int32)">
            <summary>
            Fires TextChanged event
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OnTextChanged(FastColoredTextBoxNS.Range)">
            <summary>
            Fires TextChanged event
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.BeginUpdate">
            <summary>
            Call this method before multiple text changing
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.EndUpdate">
            <summary>
            Call this method after multiple text changing
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OnTextChanged(FastColoredTextBoxNS.TextChangedEventArgs)">
            <summary>
            Fires TextChanged event
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ClearFoldingState(FastColoredTextBoxNS.Range)">
            <summary>
            Clears folding state for range of text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OnSelectionChanged">
            <summary>
            Fires SelectionChanged event
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.PlaceToPosition(FastColoredTextBoxNS.Place)">
            <summary>
            Gets absolute text position from line and char position
            </summary>
            <param name="point">Line and char position</param>
            <returns>Point of char</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.PositionToPlace(System.Int32)">
            <summary>
            Gets line and char position from absolute text position
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.PositionToPoint(System.Int32)">
            <summary>
            Gets absolute char position from char position
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.PlaceToPoint(FastColoredTextBoxNS.Place)">
            <summary>
            Gets point for given line and char position
            </summary>
            <param name="place">Line and char position</param>
            <returns>Coordiantes</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetRange(System.Int32,System.Int32)">
            <summary>
            Get range of text
            </summary>
            <param name="fromPos">Absolute start position</param>
            <param name="toPos">Absolute finish position</param>
            <returns>Range</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetRange(FastColoredTextBoxNS.Place,FastColoredTextBoxNS.Place)">
            <summary>
            Get range of text
            </summary>
            <param name="fromPlace">Line and char position</param>
            <param name="toPlace">Line and char position</param>
            <returns>Range</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetRanges(System.String)">
            <summary>
            Finds ranges for given regex pattern
            </summary>
            <param name="regexPattern">Regex pattern</param>
            <returns>Enumeration of ranges</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetRanges(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Finds ranges for given regex pattern
            </summary>
            <param name="regexPattern">Regex pattern</param>
            <returns>Enumeration of ranges</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetLineText(System.Int32)">
            <summary>
            Get text of given line
            </summary>
            <param name="iLine">Line index</param>
            <returns>Text</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ExpandFoldedBlock(System.Int32)">
            <summary>
            Exapnds folded block
            </summary>
            <param name="iLine">Start line</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.AdjustFolding">
            <summary>
            Collapse folding blocks using FoldedBlocks dictionary.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ExpandBlock(System.Int32,System.Int32)">
            <summary>
            Expand collapsed block
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ExpandBlock(System.Int32)">
            <summary>
            Expand collapsed block
            </summary>
            <param name="iLine">Any line inside collapsed block</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.CollapseAllFoldingBlocks">
            <summary>
            Collapses all folding blocks
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ExpandAllFoldingBlocks">
            <summary>
            Exapnds all folded blocks
            </summary>
            <param name="iLine"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.CollapseFoldingBlock(System.Int32)">
            <summary>
            Collapses folding block
            </summary>
            <param name="iLine">Start folding line</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetLineFoldingStartMarker(System.Int32)">
            <summary>
            Start foilding marker for the line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetLineFoldingEndMarker(System.Int32)">
            <summary>
            End foilding marker for the line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.CollapseBlock(System.Int32,System.Int32)">
            <summary>
            Collapse text block
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.IncreaseIndent">
            <summary>
            Insert TAB into front of seletcted lines.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DecreaseIndent">
            <summary>
            Remove TAB from front of seletcted lines.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DecreaseIndentOfSingleLine">
            <summary>
            Remove TAB in front of the caret ot the selected line.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DoAutoIndent">
            <summary>
            Insert autoindents into selected lines
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.InsertLinePrefix(System.String)">
            <summary>
            Insert prefix into front of seletcted lines
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.RemoveLinePrefix(System.String)">
            <summary>
            Remove prefix from front of selected lines
            This method ignores forward spaces of the line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.BeginAutoUndo">
            <summary>
            Begins AutoUndo block.
            All changes of text between BeginAutoUndo() and EndAutoUndo() will be canceled in one operation Undo.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.EndAutoUndo">
            <summary>
            Ends AutoUndo block.
            All changes of text between BeginAutoUndo() and EndAutoUndo() will be canceled in one operation Undo.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.HighlightBrackets(System.Char,System.Char,FastColoredTextBoxNS.Range@,FastColoredTextBoxNS.Range@)">
            <summary>
            Highlights brackets around caret
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetBracketsRange(FastColoredTextBoxNS.Place,System.Char,System.Char)">
            <summary>
            Returns range between brackets (or null if not found)
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.SelectNext(System.String,System.Boolean,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Selectes next fragment for given regex.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Print(FastColoredTextBoxNS.Range,FastColoredTextBoxNS.PrintDialogSettings)">
            <summary>
            Prints range of text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Print(FastColoredTextBoxNS.PrintDialogSettings)">
            <summary>
            Prints all text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.Print">
            <summary>
            Prints all text, without any dialog windows
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OpenFile(System.String,System.Text.Encoding)">
            <summary>
            Open text file
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OpenFile(System.String)">
            <summary>
            Open text file (with automatic encoding detector)
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OpenBindingFile(System.String,System.Text.Encoding)">
            <summary>
            Open file binding mode
            </summary>
            <param name="fileName"></param>
            <param name="enc"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.CloseBindingFile">
            <summary>
            Close file binding mode
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.SaveToFile(System.String,System.Text.Encoding)">
            <summary>
            Save text to the file
            </summary>
            <param name="fileName"></param>
            <param name="enc"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.SetVisibleState(System.Int32,FastColoredTextBoxNS.VisibleState)">
            <summary>
            Set VisibleState of line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.GetVisibleState(System.Int32)">
            <summary>
            Returns VisibleState of the line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ShowGoToDialog">
            <summary>
            Shows Goto dialog form
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.OnUndoRedoStateChanged">
            <summary>
            Occurs when undo/redo stack is changed
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.FindLines(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Search lines by regex pattern
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.RemoveLines(System.Collections.Generic.List{System.Int32})">
            <summary>
            Removes given lines
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.ActivateMiddleClickScrollingMode(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Activates the scrolling mode (middle click button).
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.DeactivateMiddleClickScrollingMode">
            <summary>
            Deactivates the scrolling mode (middle click button).
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FastColoredTextBox.RestoreScrollsAfterMiddleClickScrollingMode">
            <summary>
            Restore scrolls
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AutoCompleteBrackets">
            <summary>
            AutoComplete brackets
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ServiceColors">
            <summary>
            Colors of some service visual markers
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.FoldedBlocks">
            <summary>
            Contains UniqueId of start lines of folded blocks
            </summary>
            <remarks>This dictionary remembers folding state of blocks.
            It is needed to restore child folding after user collapsed/expanded top-level folding block.</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.BracketsHighlightStrategy">
            <summary>
            Strategy of search of brackets to highlighting
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.WordWrapAutoIndent">
            <summary>
            Automatically shifts secondary wordwrap lines on the shift amount of the first line
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.WordWrapIndent">
            <summary>
            Indent of secondary wordwrap lines (in chars)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.MacrosManager">
            <summary>
            MacrosManager records, stores and executes the macroses
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AllowDrop">
            <summary>
            Allows drag and drop
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Hints">
            <summary>
            Collection of Hints.
            This is temporary buffer for currently displayed hints.
            </summary>
            <remarks>You can asynchronously add, remove and clear hints. Appropriate hints will be shown or hidden from the screen.</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ToolTipDelay">
            <summary>
            Delay (ms) of ToolTip
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ToolTip">
            <summary>
            ToolTip component
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.BookmarkColor">
            <summary>
            Color of bookmarks
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Bookmarks">
            <summary>
            Bookmarks
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.VirtualSpace">
            <summary>
            Enables virtual spaces
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.FindEndOfFoldingBlockStrategy">
            <summary>
            Strategy of search of end of folding block
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AcceptsTab">
            <summary>
            Indicates if tab characters are accepted as input
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AcceptsReturn">
            <summary>
            Indicates if return characters are accepted as input
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.CaretVisible">
            <summary>
            Shows or hides the caret
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.CaretBlinking">
            <summary>
            Enables caret blinking
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.TextAreaBorderColor">
            <summary>
            Color of border of text area
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.TextAreaBorder">
            <summary>
            Type of border of text area
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.CurrentLineColor">
            <summary>
            Background color for current line
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ChangedLineColor">
            <summary>
            Background color for highlighting of changed lines
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ForeColor">
            <summary>
            Fore color (default style color)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.CharHeight">
            <summary>
            Height of char in pixels (includes LineInterval)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.LineInterval">
            <summary>
            Interval between lines (in pixels)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.CharWidth">
            <summary>
            Width of char in pixels
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.TabLength">
            <summary>
            Spaces count for tab
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.IsChanged">
            <summary>
            Text was changed
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.TextVersion">
            <summary>
            Text version
            </summary>
            <remarks>This counter is incremented each time changes the text</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ReadOnly">
            <summary>
            Read only
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ShowLineNumbers">
            <summary>
            Shows line numbers.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ShowFoldingLines">
            <summary>
            Shows vertical lines between folding start line and folding end line.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.TextAreaRect">
            <summary>
            Rectangle where located text
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.LineNumberColor">
            <summary>
            Color of line numbers.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.LineNumberStartValue">
            <summary>
            Start value of first line number.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.IndentBackColor">
            <summary>
            Background color of indent area
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.PaddingBackColor">
            <summary>
            Background color of padding area
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.DisabledColor">
            <summary>
            Color of disabled component
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.CaretColor">
            <summary>
            Color of caret
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.WideCaret">
            <summary>
            Wide caret
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ServiceLinesColor">
            <summary>
            Color of service lines (folding lines, borders of blocks etc.)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Paddings">
            <summary>
            Padings of text area
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Padding">
            <summary>
            --Do not use this property--
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.FoldingIndicatorColor">
            <summary>
            Color of folding area indicator
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.HighlightFoldingIndicator">
            <summary>
            Enables folding indicator (left vertical line between folding bounds)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.LeftIndent">
            <summary>
            Left distance to text beginning
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.LeftPadding">
            <summary>
            Left padding in pixels
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.PreferredLineWidth">
            <summary>
            This property draws vertical line after defined char position.
            Set to 0 for disable drawing of vertical line.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Styles">
            <summary>
            Styles
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Hotkeys">
            <summary>
            Hotkeys. Do not use this property in your code, use HotkeysMapping property.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.HotkeysMapping">
            <summary>
            Hotkeys mapping
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.DefaultStyle">
            <summary>
            Default text style
            This style is using when no one other TextStyle is not defined in Char.style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.SelectionStyle">
            <summary>
            Style for rendering Selection area
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.FoldedBlockStyle">
            <summary>
            Style for folded block rendering
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.BracketsStyle">
            <summary>
            Style for brackets highlighting
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.BracketsStyle2">
            <summary>
            Style for alternative brackets highlighting
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.LeftBracket">
            <summary>
            Opening bracket for brackets highlighting.
            Set to '\x0' for disable brackets highlighting.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.RightBracket">
            <summary>
            Closing bracket for brackets highlighting.
            Set to '\x0' for disable brackets highlighting.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.LeftBracket2">
            <summary>
            Alternative opening bracket for brackets highlighting.
            Set to '\x0' for disable brackets highlighting.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.RightBracket2">
            <summary>
            Alternative closing bracket for brackets highlighting.
            Set to '\x0' for disable brackets highlighting.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.CommentPrefix">
            <summary>
            Comment line prefix.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.HighlightingRangeType">
            <summary>
            This property specifies which part of the text will be highlighted as you type (by built-in highlighter).
            </summary>
            <remarks>When a user enters text, a component refreshes highlighting (because the text was changed).
            This property specifies exactly which section of the text will be re-highlighted.
            This can be useful to highlight multi-line comments, for example.</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.IsReplaceMode">
            <summary>
            Is keyboard in replace mode (wide caret) ?
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AllowSeveralTextStyleDrawing">
            <summary>
            Allows text rendering several styles same time.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AllowMacroRecording">
            <summary>
            Allows to record macros.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AutoIndent">
            <summary>
            Allows AutoIndent. Inserts spaces before new line.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AutoIndentExistingLines">
            <summary>
            Does autoindenting in existing lines. It works only if AutoIndent is True.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.DelayedEventsInterval">
            <summary>
            Minimal delay(ms) for delayed events (except TextChangedDelayed).
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.DelayedTextChangedInterval">
            <summary>
            Minimal delay(ms) for TextChangedDelayed event.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Language">
            <summary>
            Language for highlighting by built-in highlighter.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.SyntaxHighlighter">
            <summary>
            Syntax Highlighter
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.DescriptionFile">
            <summary>
            XML file with description of syntax highlighting.
            This property works only with Language == Language.Custom.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.LeftBracketPosition">
            <summary>
            Position of left highlighted bracket.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.RightBracketPosition">
            <summary>
            Position of right highlighted bracket.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.LeftBracketPosition2">
            <summary>
            Position of left highlighted alternative bracket.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.RightBracketPosition2">
            <summary>
            Position of right highlighted alternative bracket.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.StartFoldingLine">
            <summary>
            Start line index of current highlighted folding area. Return -1 if start of area is not found.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.EndFoldingLine">
            <summary>
            End line index of current highlighted folding area. Return -1 if end of area is not found.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.TextSource">
            <summary>
            TextSource
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.SourceTextBox">
            <summary>
            The source of the text.
            Allows to get text from other FastColoredTextBox.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.VisibleRange">
            <summary>
            Returns current visible range of text
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Selection">
            <summary>
            Current selection range
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.BackColor">
            <summary>
            Background color.
            It is used if BackBrush is null.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.BackBrush">
            <summary>
            Background brush.
            If Null then BackColor is used.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Multiline">
            <summary>
            Multiline
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.WordWrap">
            <summary>
            WordWrap.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.WordWrapMode">
            <summary>
            WordWrap mode.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.SelectionHighlightingForLineBreaksEnabled">
            <summary>
            If <c>true</c> then line breaks included into the selection will be selected too.
            Then line breaks will be shown as selected blank character.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AutoScroll">
            <summary>
            Do not change this property
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.LinesCount">
            <summary>
            Count of lines
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Item(FastColoredTextBoxNS.Place)">
            <summary>
            Gets or sets char and styleId for given place
            This property does not fire OnTextChanged event
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Item(System.Int32)">
            <summary>
            Gets Line
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Text">
            <summary>
            Text of control
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Lines">
            <summary>
            Text lines
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Html">
            <summary>
            Gets colored text as HTML
            </summary>
            <remarks>For more flexibility you can use ExportToHTML class also</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Rtf">
            <summary>
            Gets colored text as RTF
            </summary>
            <remarks>For more flexibility you can use ExportToRTF class also</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.SelectedText">
            <summary>
            Text of current selection
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.SelectionStart">
            <summary>
            Start position of selection
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.SelectionLength">
            <summary>
            Length of selected text
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Font">
            <summary>
            Font
            </summary>
            <remarks>Use only monospaced font</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.BaseFont">
            <summary>
            Font
            </summary>
            <remarks>Use only monospaced font</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ImeAllowed">
            <summary>
            Indicates that IME is allowed (for CJK language entering)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.UndoEnabled">
            <summary>
            Is undo enabled?
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.RedoEnabled">
            <summary>
            Is redo enabled?
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Range">
            <summary>
            Range of all text
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.SelectionColor">
            <summary>
            Color of selected area
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.ReservedCountOfLineNumberChars">
            <summary>
            Reserved space for line number characters.
            If smaller than needed (e. g. line count >= 10 and this value set to 1) this value will have no impact.
            If you want to reserve space, e. g. for line numbers >= 10 or >= 100 than you can set this value to 2 or 3 or higher.
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.ToolTipNeeded">
            <summary>
            Occurs when mouse is moving over text and tooltip is needed
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.HintClick">
            <summary>
            HintClick event.
            It occurs if user click on the hint.
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.TextChanged">
            <summary>
            TextChanged event.
            It occurs after insert, delete, clear, undo and redo operations.
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.BindingTextChanged">
            <summary>
            Fake event for correct data binding
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.Pasting">
            <summary>
            Occurs when user paste text from clipboard
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.TextChanging">
            <summary>
            TextChanging event.
            It occurs before insert, delete, clear, undo and redo operations.
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.SelectionChanged">
            <summary>
            SelectionChanged event.
            It occurs after changing of selection.
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.VisibleRangeChanged">
            <summary>
            VisibleRangeChanged event.
            It occurs after changing of visible range.
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.TextChangedDelayed">
            <summary>
            TextChangedDelayed event. 
            It occurs after insert, delete, clear, undo and redo operations. 
            This event occurs with a delay relative to TextChanged, and fires only once.
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.SelectionChangedDelayed">
            <summary>
            SelectionChangedDelayed event.
            It occurs after changing of selection.
            This event occurs with a delay relative to SelectionChanged, and fires only once.
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.VisibleRangeChangedDelayed">
            <summary>
            VisibleRangeChangedDelayed event.
            It occurs after changing of visible range.
            This event occurs with a delay relative to VisibleRangeChanged, and fires only once.
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.VisualMarkerClick">
            <summary>
            It occurs when user click on VisualMarker.
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.KeyPressing">
            <summary>
            It occurs when visible char is enetering (alphabetic, digit, punctuation, DEL, BACKSPACE)
            </summary>
            <remarks>Set Handle to True for cancel key</remarks>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.KeyPressed">
            <summary>
            It occurs when visible char is enetered (alphabetic, digit, punctuation, DEL, BACKSPACE)
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.AutoIndentNeeded">
            <summary>
            It occurs when calculates AutoIndent for new line
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.PaintLine">
            <summary>
            It occurs when line background is painting
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.LineInserted">
            <summary>
            Occurs when line was inserted/added
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.LineRemoved">
            <summary>
            Occurs when line was removed
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.FoldingHighlightChanged">
            <summary>
            Occurs when current highlighted folding area is changed.
            Current folding area see in StartFoldingLine and EndFoldingLine.
            </summary>
            <remarks></remarks>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.UndoRedoStateChanged">
            <summary>
            Occurs when undo/redo stack is changed
            </summary>
            <remarks></remarks>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.ZoomChanged">
            <summary>
            Occurs when component was zoomed
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.CustomAction">
            <summary>
            Occurs when user pressed key, that specified as CustomAction
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.ScrollbarsUpdated">
            <summary>
            Occurs when scroolbars are updated
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FastColoredTextBox.WordWrapNeeded">
            <summary>
            Occurs when custom wordwrap is needed
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AutoIndentChars">
            <summary>
            Enables AutoIndentChars mode
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.AutoIndentCharsPatterns">
            <summary>
            Regex patterns for AutoIndentChars (one regex per line)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FastColoredTextBox.Zoom">
            <summary>
            Zooming (in percentages)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LineInsertedEventArgs.Index">
            <summary>
            Inserted line index
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LineInsertedEventArgs.Count">
            <summary>
            Count of inserted lines
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LineRemovedEventArgs.Index">
            <summary>
            Removed line index
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LineRemovedEventArgs.Count">
            <summary>
            Count of removed lines
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LineRemovedEventArgs.RemovedLineUniqueIds">
            <summary>
            UniqueIds of removed lines
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.TextChangedEventArgs">
            <summary>
            TextChanged event argument
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.TextChangedEventArgs.#ctor(FastColoredTextBoxNS.Range)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.TextChangedEventArgs.ChangedRange">
            <summary>
            This range contains changed area of text
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.TextChangingEventArgs.Cancel">
            <summary>
            Set to true if you want to cancel text inserting
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.WordWrapMode.WordWrapControlWidth">
            <summary>
            Word wrapping by control width
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.WordWrapMode.WordWrapPreferredWidth">
            <summary>
            Word wrapping by preferred line width (PreferredLineWidth)
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.WordWrapMode.CharWrapControlWidth">
            <summary>
            Char wrapping by control width
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.WordWrapMode.CharWrapPreferredWidth">
            <summary>
            Char wrapping by preferred line width (PreferredLineWidth)
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.WordWrapMode.Custom">
            <summary>
            Custom wrap (by event WordWrapNeeded)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.PrintDialogSettings.Title">
            <summary>
            Title of page. If you want to print Title on the page, insert code &amp;w in Footer or Header.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.PrintDialogSettings.Footer">
            <summary>
            Footer of page.
            Here you can use special codes: &amp;w (Window title), &amp;D, &amp;d (Date), &amp;t(), &amp;4 (Time), &amp;p (Current page number), &amp;P (Total number of pages),  &amp;&amp; (A single ampersand), &amp;b (Right justify text, Center text. If &amp;b occurs once, then anything after the &amp;b is right justified. If &amp;b occurs twice, then anything between the two &amp;b is centered, and anything after the second &amp;b is right justified).
            More detailed see <see cref="!:http://msdn.microsoft.com/en-us/library/aa969429(v=vs.85).aspx">here</see>
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.PrintDialogSettings.Header">
            <summary>
            Header of page
            Here you can use special codes: &amp;w (Window title), &amp;D, &amp;d (Date), &amp;t(), &amp;4 (Time), &amp;p (Current page number), &amp;P (Total number of pages),  &amp;&amp; (A single ampersand), &amp;b (Right justify text, Center text. If &amp;b occurs once, then anything after the &amp;b is right justified. If &amp;b occurs twice, then anything between the two &amp;b is centered, and anything after the second &amp;b is right justified).
            More detailed see <see cref="!:http://msdn.microsoft.com/en-us/library/aa969429(v=vs.85).aspx">here</see>
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.PrintDialogSettings.IncludeLineNumbers">
            <summary>
            Prints line numbers
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutoIndentEventArgs.Shift">
            <summary>
            Additional spaces count for this line, relative to previous line
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutoIndentEventArgs.ShiftNextLines">
            <summary>
            Additional spaces count for next line, relative to previous line
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.AutoIndentEventArgs.AbsoluteIndentation">
            <summary>
            Absolute indentation of current line. You can change this property if you want to set absolute indentation.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.HighlightingRangeType">
            <summary>
            Type of highlighting
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.HighlightingRangeType.ChangedRange">
            <summary>
            Highlight only changed range of text. Highest performance.
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.HighlightingRangeType.VisibleRange">
            <summary>
            Highlight visible range of text. Middle performance.
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.HighlightingRangeType.AllTextRange">
            <summary>
            Highlight all (visible and invisible) text. Lowest performance.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.FindEndOfFoldingBlockStrategy">
            <summary>
            Strategy of search of end of folding block
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.BracketsHighlightStrategy">
            <summary>
            Strategy of search of brackets to highlighting
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.ToolTipNeededEventArgs">
            <summary>
            ToolTipNeeded event args
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.HintClickEventArgs">
            <summary>
            HintClick event args
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.CustomActionEventArgs">
            <summary>
            CustomAction event args
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.StyleIndex">
            <summary>
            Style index mask (16 styles)
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.FileTextSource">
            <summary>
            This class contains the source text (chars and styles).
            It stores a text lines, the manager of commands, undo/redo stack, styles.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.TextSource">
            <summary>
            This class contains the source text (chars and styles).
            It stores a text lines, the manager of commands, undo/redo stack, styles.
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.TextSource.Styles">
            <summary>
            Styles
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.TextSource.GetLines">
            <summary>
            Text lines
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.TextSource.LineInserted">
            <summary>
            Occurs when line was inserted/added
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.TextSource.LineRemoved">
            <summary>
            Occurs when line was removed
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.TextSource.TextChanged">
            <summary>
            Occurs when text was changed
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.TextSource.RecalcNeeded">
            <summary>
            Occurs when recalc is needed
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.TextSource.RecalcWordWrap">
            <summary>
            Occurs when recalc wordwrap is needed
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.TextSource.TextChanging">
            <summary>
            Occurs before text changing
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.TextSource.CurrentTBChanged">
            <summary>
            Occurs after CurrentTB was changed
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.TextSource.CurrentTB">
            <summary>
            Current focused FastColoredTextBox
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.TextSource.DefaultStyle">
            <summary>
            Default text style
            This style is using when no one other TextStyle is not defined in Char.style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.TextSource.Count">
            <summary>
            Lines count
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FileTextSource.LineNeeded">
            <summary>
            Occurs when need to display line in the textbox
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.FileTextSource.LinePushed">
            <summary>
            Occurs when need to save line in the file
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.FileTextSource.SaveEOL">
            <summary>
            End Of Line characters used for saving
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LineNeededEventArgs.DisplayedLineText">
            <summary>
            This text will be displayed in textbox
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LinePushedEventArgs.DisplayedLineText">
            <summary>
            This property contains only changed text.
            If text of line is not changed, this property contains null.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LinePushedEventArgs.SavedText">
            <summary>
            This text will be saved in the file
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.FindForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.FindForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastColoredTextBoxNS.FindForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.GoToForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.GoToForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastColoredTextBoxNS.GoToForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.Hints">
            <summary>
            Collection of Hints.
            This is temporary buffer for currently displayed hints.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Hints.Clear">
            <summary>
            Clears all displayed hints
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Hints.Add(FastColoredTextBoxNS.Hint)">
            <summary>
            Add and shows the hint
            </summary>
            <param name="hint"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.Hints.Contains(FastColoredTextBoxNS.Hint)">
            <summary>
            Is collection contains the hint?
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hints.Count">
            <summary>
            Count of hints
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.Hint">
            <summary>
            Hint of FastColoredTextbox
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Hint.DoVisible">
            <summary>
            Scroll textbox to the hint
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Hint.#ctor(FastColoredTextBoxNS.Range,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates Hint
            </summary>
            <param name="range">Linked range</param>
            <param name="text">Text for simple hint</param>
            <param name="inline">Inlining. If True then hint will moves apart text</param>
            <param name="dock">Docking. If True then hint will fill whole line</param>
        </member>
        <member name="M:FastColoredTextBoxNS.Hint.#ctor(FastColoredTextBoxNS.Range,System.String)">
            <summary>
            Creates Hint
            </summary>
            <param name="range">Linked range</param>
            <param name="text">Text for simple hint</param>
        </member>
        <member name="M:FastColoredTextBoxNS.Hint.#ctor(FastColoredTextBoxNS.Range,System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            <summary>
            Creates Hint
            </summary>
            <param name="range">Linked range</param>
            <param name="innerControl">Inner control</param>
            <param name="inline">Inlining. If True then hint will moves apart text</param>
            <param name="dock">Docking. If True then hint will fill whole line</param>
        </member>
        <member name="M:FastColoredTextBoxNS.Hint.#ctor(FastColoredTextBoxNS.Range,System.Windows.Forms.Control)">
            <summary>
            Creates Hint
            </summary>
            <param name="range">Linked range</param>
            <param name="innerControl">Inner control</param>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.Text">
            <summary>
            Text of simple hint
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.Range">
            <summary>
            Linked range
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.BackColor">
            <summary>
            Backcolor
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.BackColor2">
            <summary>
            Second backcolor
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.BorderColor">
            <summary>
            Border color
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.ForeColor">
            <summary>
            Fore color
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.TextAlignment">
            <summary>
            Text alignment
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.Hint.Click">
            <summary>
            Occurs when user click on simple hint
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.InnerControl">
            <summary>
            Inner control
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.Dock">
            <summary>
            Docking (allows None and Fill only)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.Width">
            <summary>
            Width of hint (if Dock is None)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.Height">
            <summary>
            Height of hint
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.HostPanel">
            <summary>
            Host panel
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.Tag">
            <summary>
            Tag
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.Cursor">
            <summary>
            Cursor
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Hint.Inline">
            <summary>
            Inlining. If True then hint will moves apart text.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.HotkeysMapping">
            <summary>
            Dictionary of shortcuts for FCTB
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.FCTBAction">
            <summary>
            Actions for shortcuts
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.HotkeysEditorForm.GetHotkeys">
            <summary>
            Returns edited hotkey map
            </summary>
            <returns></returns>
        </member>
        <member name="F:FastColoredTextBoxNS.HotkeysEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.HotkeysEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastColoredTextBoxNS.HotkeysEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.LimitedStack`1">
            <summary>
            Limited stack
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.LimitedStack`1.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxItemCount">Maximum length of stack</param>
        </member>
        <member name="M:FastColoredTextBoxNS.LimitedStack`1.Pop">
            <summary>
            Pop item
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.LimitedStack`1.Peek">
            <summary>
            Peek item
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.LimitedStack`1.Push(`0)">
            <summary>
            Push item
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.LimitedStack`1.Clear">
            <summary>
            Clear stack
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LimitedStack`1.MaxItemCount">
            <summary>
            Max stack length
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LimitedStack`1.Count">
            <summary>
            Current length of stack
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.Line">
            <summary>
            Line of text
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Line.ClearStyle(FastColoredTextBoxNS.StyleIndex)">
            <summary>
            Clears style of chars, delete folding markers
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Line.ClearFoldingMarkers">
            <summary>
            Clears folding markers
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Line.IsChanged">
            <summary>
            Text of line was changed
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Line.LastVisit">
            <summary>
            Time of last visit of caret in this line
            </summary>
            <remarks>This property can be used for forward/backward navigating</remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.Line.BackgroundBrush">
            <summary>
            Background brush.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Line.UniqueId">
            <summary>
            Unique ID
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Line.AutoIndentSpacesNeededCount">
            <summary>
            Count of needed start spaces for AutoIndent
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Line.Text">
            <summary>
            Text of the line
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Line.StartSpacesCount">
            <summary>
            Count of start spaces
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Line.Count">
            <summary>
            Chars count
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.LineInfo.VisibleState">
            <summary>
            Visible state
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.LineInfo.GetWordWrapStringIndex(System.Int32)">
            <summary>
            Gets index of wordwrap string for given char position
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LineInfo.CutOffPositions">
            <summary>
            Positions for wordwrap cutoffs
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.LineInfo.WordWrapStringsCount">
            <summary>
            Count of wordwrap string count for this line
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.MacrosManager">
            <summary>
            This class records, stores and executes the macros.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.MacrosManager.ExecuteMacros">
            <summary>
            Executes recorded macro
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastColoredTextBoxNS.MacrosManager.AddCharToMacros(System.Char,System.Windows.Forms.Keys)">
            <summary>
            Adds the char to current macro
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.MacrosManager.AddKeyToMacros(System.Windows.Forms.Keys)">
            <summary>
            Adds keyboard key to current macro
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.MacrosManager.ClearMacros">
            <summary>
            Clears last recorded macro
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.MacrosManager.AllowMacroRecordingByUser">
            <summary>
            Allows to user to record macros
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.MacrosManager.IsRecording">
            <summary>
            Returns current recording state. Set to True/False to start/stop recording programmatically.
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.MacrosManager.UnderlayingControl">
            <summary>
            FCTB
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.MacrosManager.MacroIsEmpty">
            <summary>
            Returns True if last macro is empty
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.MacrosManager.Macros">
            <summary>
            Macros as string.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.Place">
            <summary>
            Line index and char index
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.Range">
            <summary>
            Diapason of text chars
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.#ctor(FastColoredTextBoxNS.FastColoredTextBox)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.#ctor(FastColoredTextBoxNS.FastColoredTextBox,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.#ctor(FastColoredTextBoxNS.FastColoredTextBox,FastColoredTextBoxNS.Place,FastColoredTextBoxNS.Place)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.#ctor(FastColoredTextBoxNS.FastColoredTextBox,System.Int32)">
            <summary>
            Constructor. Creates range of the line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetIntersectionWith(FastColoredTextBoxNS.Range)">
            <summary>
            Returns intersection with other range,
            empty range returned otherwise
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetUnionWith(FastColoredTextBoxNS.Range)">
            <summary>
            Returns union with other range.
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SelectAll">
            <summary>
            Select all chars of control
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetCharsBeforeStart(System.Int32)">
            <summary>
            Returns required char's number before start of the Range
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetCharsAfterStart(System.Int32)">
            <summary>
            Returns required char's number after start of the Range
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.Clone">
            <summary>
            Clone range
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GoRight">
            <summary>
            Move range right
            </summary>
            <remarks>This method jump over folded blocks</remarks>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GoRightThroughFolded">
            <summary>
            Move range left
            </summary>
            <remarks>This method can to go inside folded blocks</remarks>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GoLeft">
            <summary>
            Move range left
            </summary>
            <remarks>This method jump over folded blocks</remarks>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GoLeftThroughFolded">
            <summary>
            Move range left
            </summary>
            <remarks>This method can to go inside folded blocks</remarks>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SetStyle(FastColoredTextBoxNS.Style)">
            <summary>
            Set style for range
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SetStyle(FastColoredTextBoxNS.Style,System.String)">
            <summary>
            Set style for given regex pattern
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SetStyle(FastColoredTextBoxNS.Style,System.Text.RegularExpressions.Regex)">
            <summary>
            Set style for given regex
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SetStyle(FastColoredTextBoxNS.Style,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Set style for given regex pattern
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SetStyle(FastColoredTextBoxNS.StyleIndex,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Set style for given regex pattern
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SetStyle(FastColoredTextBoxNS.StyleIndex,System.Text.RegularExpressions.Regex)">
            <summary>
            Set style for given regex pattern
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SetStyle(FastColoredTextBoxNS.StyleIndex)">
            <summary>
            Appends style to chars of range
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SetFoldingMarkers(System.String,System.String)">
            <summary>
            Sets folding markers
            </summary>
            <param name="startFoldingPattern">Pattern for start folding line</param>
            <param name="finishFoldingPattern">Pattern for finish folding line</param>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SetFoldingMarkers(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Sets folding markers
            </summary>
            <param name="startFoldingPattern">Pattern for start folding line</param>
            <param name="finishFoldingPattern">Pattern for finish folding line</param>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.SetFoldingMarkers(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Sets folding markers
            </summary>
            <param name="startEndFoldingPattern">Pattern for start and end folding line</param>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetRanges(System.String)">
            <summary>
            Finds ranges for given regex pattern
            </summary>
            <param name="regexPattern">Regex pattern</param>
            <returns>Enumeration of ranges</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetRanges(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Finds ranges for given regex pattern
            </summary>
            <param name="regexPattern">Regex pattern</param>
            <returns>Enumeration of ranges</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetRangesByLines(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Finds ranges for given regex pattern.
            Search is separately in each line.
            This method requires less memory than GetRanges().
            </summary>
            <param name="regexPattern">Regex pattern</param>
            <returns>Enumeration of ranges</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetRangesByLines(System.Text.RegularExpressions.Regex)">
            <summary>
            Finds ranges for given regex.
            Search is separately in each line.
            This method requires less memory than GetRanges().
            </summary>
            <param name="regex">Regex</param>
            <returns>Enumeration of ranges</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetRangesByLinesReversed(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Finds ranges for given regex pattern.
            Search is separately in each line (order of lines is reversed).
            This method requires less memory than GetRanges().
            </summary>
            <param name="regexPattern">Regex pattern</param>
            <returns>Enumeration of ranges</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetRanges(System.Text.RegularExpressions.Regex)">
            <summary>
            Finds ranges for given regex
            </summary>
            <returns>Enumeration of ranges</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.ClearStyle(FastColoredTextBoxNS.Style[])">
            <summary>
            Clear styles of range
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.ClearStyle(FastColoredTextBoxNS.StyleIndex)">
            <summary>
            Clear styles of range
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.ClearFoldingMarkers">
            <summary>
            Clear folding markers of all lines of range
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.BeginUpdate">
            <summary>
            Starts selection position updating
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.EndUpdate">
            <summary>
            Ends selection position updating
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.Normalize">
            <summary>
            Exchanges Start and End if End appears before Start
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.Inverse">
            <summary>
            Exchanges Start and End
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.Expand">
            <summary>
            Expands range from first char of Start line to last char of End line
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetFragment(System.String)">
            <summary>
            Get fragment of text around Start place. Returns maximal matched to pattern fragment.
            </summary>
            <param name="allowedSymbolsPattern">Allowed chars pattern for fragment</param>
            <returns>Range of found fragment</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetFragment(FastColoredTextBoxNS.Style,System.Boolean)">
            <summary>
            Get fragment of text around Start place. Returns maximal matched to given Style.
            </summary>
            <param name="style">Allowed style for fragment</param>
            <returns>Range of found fragment</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.GetFragment(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Get fragment of text around Start place. Returns maximal mathed to pattern fragment.
            </summary>
            <param name="allowedSymbolsPattern">Allowed chars pattern for fragment</param>
            <returns>Range of found fragment</returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.IsReadOnlyLeftChar">
            <summary>
            Is char before range readonly
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Range.IsReadOnlyRightChar">
            <summary>
            Is char after range readonly
            </summary>
            <returns></returns>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.IsEmpty">
            <summary>
            Return true if no selected text
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.ColumnSelectionMode">
            <summary>
            Column selection mode
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.Start">
            <summary>
            Start line and char position
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.End">
            <summary>
            Finish line and char position
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.Text">
            <summary>
            Text of range
            </summary>
            <remarks>This property has not 'set' accessor because undo/redo stack works only with 
            FastColoredTextBox.Selection range. So, if you want to set text, you need to use FastColoredTextBox.Selection
            and FastColoredTextBox.InsertText() mehtod.
            </remarks>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.CharAfterStart">
            <summary>
            Returns first char after Start place
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.CharBeforeStart">
            <summary>
            Returns first char before Start place
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.FromX">
            <summary>
            Return minimum of end.X and start.X
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.ToX">
            <summary>
            Return maximum of end.X and start.X
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.Chars">
            <summary>
            Chars of range (exclude \n)
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.Range.ReadOnly">
            <summary>
            Range is readonly?
            This property return True if any char of the range contains ReadOnlyStyle.
            Set this property to True/False to mark chars of the range as Readonly/Writable.
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.ReplaceForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.ReplaceForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastColoredTextBoxNS.ReplaceForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FastColoredTextBoxNS.Ruler.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Ruler.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FastColoredTextBoxNS.Ruler.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.Style">
            <summary>
            Style of chars
            </summary>
            <remarks>This is base class for all text and design renderers</remarks>
        </member>
        <member name="M:FastColoredTextBoxNS.Style.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Style.Draw(System.Drawing.Graphics,System.Drawing.Point,FastColoredTextBoxNS.Range)">
            <summary>
            Renders given range of text
            </summary>
            <param name="gr">Graphics object</param>
            <param name="position">Position of the range in absolute control coordinates</param>
            <param name="range">Rendering range of text</param>
        </member>
        <member name="M:FastColoredTextBoxNS.Style.OnVisualMarkerClick(FastColoredTextBoxNS.FastColoredTextBox,FastColoredTextBoxNS.VisualMarkerEventArgs)">
            <summary>
            Occurs when user click on StyleVisualMarker joined to this style 
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Style.AddVisualMarker(FastColoredTextBoxNS.FastColoredTextBox,FastColoredTextBoxNS.StyleVisualMarker)">
            <summary>
            Shows VisualMarker
            Call this method in Draw method, when you need to show VisualMarker for your style
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.Style.GetCSS">
            <summary>
            Returns CSS for export to HTML
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastColoredTextBoxNS.Style.GetRTF">
            <summary>
            Returns RTF descriptor for export to RTF
            </summary>
            <returns></returns>
        </member>
        <member name="P:FastColoredTextBoxNS.Style.IsExportable">
            <summary>
            This style is exported to outer formats (HTML for example)
            </summary>
        </member>
        <member name="E:FastColoredTextBoxNS.Style.VisualMarkerClick">
            <summary>
            Occurs when user click on StyleVisualMarker joined to this style 
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.TextStyle">
            <summary>
            Style for chars rendering
            This renderer can draws chars, with defined fore and back colors
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.FoldedBlockStyle">
            <summary>
            Renderer for folded block
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.SelectionStyle">
            <summary>
            Renderer for selected area
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.MarkerStyle">
            <summary>
            Marker style
            Draws background color for text
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.ShortcutStyle">
            <summary>
            Draws small rectangle for popup menu
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.WavyLineStyle">
            <summary>
            This style draws a wavy line below a given text range.
            </summary>
            <remarks>Thanks for Yallie</remarks>
        </member>
        <member name="T:FastColoredTextBoxNS.ReadOnlyStyle">
            <summary>
            This style is used to mark range of text as ReadOnly block
            </summary>
            <remarks>You can inherite this style to add visual effects of readonly text</remarks>
        </member>
        <member name="M:FastColoredTextBoxNS.SyntaxHighlighter.HighlightSyntax(FastColoredTextBoxNS.Language,FastColoredTextBoxNS.Range)">
            <summary>
            Highlights syntax for given language
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.SyntaxHighlighter.HighlightSyntax(System.String,FastColoredTextBoxNS.Range)">
            <summary>
            Highlights syntax for given XML description file
            </summary>
        </member>
        <member name="M:FastColoredTextBoxNS.SyntaxHighlighter.CSharpSyntaxHighlight(FastColoredTextBoxNS.Range)">
            <summary>
            Highlights C# code
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.SyntaxHighlighter.VBSyntaxHighlight(FastColoredTextBoxNS.Range)">
            <summary>
            Highlights VB code
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.SyntaxHighlighter.HTMLSyntaxHighlight(FastColoredTextBoxNS.Range)">
            <summary>
            Highlights HTML code
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.SyntaxHighlighter.XMLSyntaxHighlight(FastColoredTextBoxNS.Range)">
            <summary>
            Highlights XML code
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.SyntaxHighlighter.SQLSyntaxHighlight(FastColoredTextBoxNS.Range)">
            <summary>
            Highlights SQL code
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.SyntaxHighlighter.PHPSyntaxHighlight(FastColoredTextBoxNS.Range)">
            <summary>
            Highlights PHP code
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.SyntaxHighlighter.JScriptSyntaxHighlight(FastColoredTextBoxNS.Range)">
            <summary>
            Highlights JavaScript code
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:FastColoredTextBoxNS.SyntaxHighlighter.LuaSyntaxHighlight(FastColoredTextBoxNS.Range)">
            <summary>
            Highlights Lua code
            </summary>
            <param name="range"></param>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.StringStyle">
            <summary>
            String style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.CommentStyle">
            <summary>
            Comment style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.NumberStyle">
            <summary>
            Number style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.AttributeStyle">
            <summary>
            C# attribute style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.ClassNameStyle">
            <summary>
            Class name style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.KeywordStyle">
            <summary>
            Keyword style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.CommentTagStyle">
            <summary>
            Style of tags in comments of C#
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.AttributeValueStyle">
            <summary>
            HTML attribute value style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.TagBracketStyle">
            <summary>
            HTML tag brackets style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.TagNameStyle">
            <summary>
            HTML tag name style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.HtmlEntityStyle">
            <summary>
            HTML Entity style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.XmlAttributeStyle">
            <summary>
            XML attribute style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.XmlAttributeValueStyle">
            <summary>
            XML attribute value style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.XmlTagBracketStyle">
            <summary>
            XML tag brackets style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.XmlTagNameStyle">
            <summary>
            XML tag name style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.XmlEntityStyle">
            <summary>
            XML Entity style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.XmlCDataStyle">
            <summary>
            XML CData style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.VariableStyle">
            <summary>
            Variable style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.KeywordStyle2">
            <summary>
            Specific PHP keyword style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.KeywordStyle3">
            <summary>
            Specific PHP keyword style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.StatementsStyle">
            <summary>
            SQL Statements style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.FunctionsStyle">
            <summary>
            SQL Functions style
            </summary>
        </member>
        <member name="P:FastColoredTextBoxNS.SyntaxHighlighter.TypesStyle">
            <summary>
            SQL Types style
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="T:FastColoredTextBoxNS.FCTBDescriptionProvider">
            
             These classes are required for correct data binding to Text property of FastColoredTextbox
             
        </member>
        <member name="F:Lib2013.oColorTextBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oColorTextBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oColorTextBox.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="M:Lib2013.oCropBox.GetCropImage">
            <summary>
            取得裁切後圖片
            </summary>
            <returns></returns>
        </member>
        <member name="F:Lib2013.oCropBox.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oCropBox.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oCropBox.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oDeBugListBox.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oDeBugListBox.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oDeBugListBox.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oButton.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oButton.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oButton.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetDateCell.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetDateCell.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetDateCell.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oGetMaskBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetMaskBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetMaskBox.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetDate2.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetDate2.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetDate2.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oDateForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lib2013.oDateForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lib2013.oDateForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Lib2013.oGetDateGrid.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetDateGrid.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetDateGrid.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oGetRadio.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetRadio.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetRadio.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetRegID.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetRegID.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetRegID.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oRunLabel.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oRunLabel.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oRunLabel.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="T:Lib2013.NodeLineType">
            <summary>
            NodeLineType enumeration
            Type of dotted line to draw when drawing a node.
            </summary>
        </member>
        <member name="T:Lib2013.TriStateTreeNode">
            <summary>
            TriStateTreeNode class
            </summary>
        </member>
        <member name="M:Lib2013.TriStateTreeNode.SetCheckedState(System.Windows.Forms.CheckState)">
            <summary>
            Used internally by the treeview to set a node to s specific state.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Lib2013.TriStateTreeNode.ChildCheckStateChanged(System.Windows.Forms.CheckState)">
            <summary>
            Private method that is called by one of the childnodes in order to report a
            change in state.
            </summary>
            <param name="childNewState">New state of the childnode in question</param>
        </member>
        <member name="M:Lib2013.TriStateTreeNode.CheckStateChanged(System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)">
            <summary>
            This method is only called when a node's state has been changed through the 
            Checked property
            </summary>
            <param name="oldState">Previous state</param>
            <param name="newState">New state</param>
        </member>
        <member name="M:Lib2013.TriStateTreeNode.ChangeChildState(System.Windows.Forms.CheckState)">
            <summary>
            This method is only called by other nodes so it can be private.
            Changes state of the node to the state provided.
            </summary>
            <param name="newState"></param>
        </member>
        <member name="P:Lib2013.TriStateTreeNode.Checked">
            <summary>
            Get / set if the node is checked or not.
            </summary>
        </member>
        <member name="P:Lib2013.TriStateTreeNode.CheckState">
            <summary>
            Get's the node's current state, either checked / unchecked for non-container nodes,
            or checked / unchecked / indeterminate for container nodes.
            </summary>
        </member>
        <member name="P:Lib2013.TriStateTreeNode.IsContainer">
            <summary>
            Determines if the node should act as a container
            </summary>
        </member>
        <member name="T:Lib2013.oTriStateTreeView">
            <summary>
            Tri-State implementation of the common TreeView control in .NET 1.1
            Some of this code was translated from a VB sample about CustomDraw treeviews
            on CodeProject. Author: Carlos J. Quintero
            http://www.codeproject.com/KB/cpp/CustomDrawTreeview.aspx
            </summary>
            
        </member>
        <member name="M:Lib2013.oTriStateTreeView.PaintTreeNode(Lib2013.TriStateTreeNode,System.Drawing.Graphics)">
            <summary>
            Paints the node specified.
            </summary>
            <param name="node"></param>
            <param name="gx"></param>
        </member>
        <member name="M:Lib2013.oTriStateTreeView.ClearCheckbox(System.Drawing.Rectangle,System.Drawing.Graphics)">
            <summary>
            Deletes the default checkboxes which are drawn when the treeview.Checkboxes property
            is set tot true.
            </summary>
            <param name="bounds"></param>
            <param name="gx"></param>
        </member>
        <member name="M:Lib2013.oTriStateTreeView.DrawNodeLines(Lib2013.TriStateTreeNode,System.Drawing.Rectangle,System.Drawing.Graphics)">
            <summary>
            Draws thee node lines before the checkboxes are drawn
            </summary>
            <param name="gx">Graphics context</param>
        </member>
        <member name="M:Lib2013.oTriStateTreeView.DrawCheckbox(System.Drawing.Rectangle,System.Drawing.Graphics,System.Windows.Forms.ButtonState)">
            <summary>
            Draws a checkbox in the desired state and style
            </summary>
            <param name="bounds">boundaries of the checkbox</param>
            <param name="gx">graphics context object</param>
            <param name="buttonState">state to draw the checkbox in</param>
        </member>
        <member name="M:Lib2013.oTriStateTreeView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Ovveride the WindowProcedure in order to intercept the itemdraw event
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Lib2013.oTriStateTreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            override the aftercheck event in order to get the node beeing checked/unchecked
            </summary>
            <param name="e"></param>
        </member>
        <!-- 忽略成員 "M:Lib2013.oTriStateTreeView.ToggleNodeState(Lib2013.TriStateTreeNode)" 中格式錯誤的 XML 註解 -->
        <member name="F:Lib2013.oCheckBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oCheckBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oCheckBox.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oMainForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Lib2013.oMainForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Lib2013.oMainForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Lib2013.oToolStripMenuItem.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oToolStripMenuItem.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oToolStripMenuItem.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oNumericUpDown.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oNumericUpDown.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oNumericUpDown.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oAddrForm.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oAddrForm.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oAddrForm.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="T:Lib2013.Properties.Resources">
            <summary>
              用於查詢當地語系化字串等的強類型資源類別。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.ResourceManager">
            <summary>
              傳回這個類別使用的快取的 ResourceManager 執行個體。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.Culture">
            <summary>
              覆寫目前執行緒的 CurrentUICulture 屬性，對象是所有
              使用這個強類型資源類別的資源查閱。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources._1">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources._2">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources._lock">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.alert">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.arrowD">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.arrowL">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.ArrowL2">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.arrowR">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.ArrowR2">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.arrowU">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.BarBack">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.DateButton">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.DefaultImage">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.error">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.exit">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.exit2">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.GlassCover">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.Highlight">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.home">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.IconImeOff">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.IconImeOn">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.info">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.loading">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.LoadingBack">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.Lock2">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.Path">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.progress">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.progress2">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.progress3">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.progress4">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.progressEmpty">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.question">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="P:Lib2013.Properties.Resources.Today">
            <summary>
              查詢類型 System.Drawing.Bitmap 的當地語系化資源。
            </summary>
        </member>
        <member name="M:Lib2013.Program.Main">
            <summary>
            應用程式的主要進入點。
            </summary>
        </member>
        <member name="T:Lib2013.SQLobject">
            <summary>
            SQL連線物件
            </summary>
        </member>
        <member name="F:Lib2013.SQLobject.TimeOut">
            <summary>
            資料庫逾時設定 0:預設
            </summary>
        </member>
        <member name="F:Lib2013.SQLobject.DoOnce">
            <summary>
            預設批次執行數量,指令超出此數量會分批執行 0:不限制
            </summary>
        </member>
        <member name="F:Lib2013.SQLobject.RollBack">
            <summary>
            執行失敗是否還原
            </summary>
        </member>
        <member name="F:Lib2013.SQLobject.oConn">
            <summary>
            資料庫連結物件
            </summary>
        </member>
        <member name="F:Lib2013.SQLobject.oCmd">
            <summary>
            資料庫指令元件
            </summary>
        </member>
        <member name="M:Lib2013.SQLobject.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            新建SQL物件實體
            </summary>
            <param name="Address">位置</param>
            <param name="Database">資料庫名稱</param>
            <param name="ID">帳號</param>
            <param name="PW">密碼</param>
            <param name="Port">PORT</param>
            <param name="DBKey">資料庫金鑰</param>
        </member>
        <member name="M:Lib2013.SQLobject.#ctor(Lib2013.SQLobject)">
            <summary>
            複製SQL物件實體
            </summary>
            <param name="SQLObj"></param>
        </member>
        <member name="M:Lib2013.SQLobject.#ctor(System.String)">
            <summary>
              新建SQL物件實體
            </summary>
            <param name="cConnString">連接字串</param>
        </member>
        <member name="M:Lib2013.SQLobject.#ctor">
            <summary>
             新建SQL物件實體
            </summary>
        </member>
        <member name="M:Lib2013.SQLobject.InsertPara(System.String,System.Object,System.Data.SqlDbType)">
            <summary>
            增加參數
            </summary>
            <param name="Name">參數名稱</param>
            <param name="Value">參數值</param>
            <param name="Type">參數型態</param>
        </member>
        <member name="M:Lib2013.SQLobject.ClearPara">
            <summary>
            清空參數
            </summary>
        </member>
        <member name="M:Lib2013.SQLobject.InsertCMD(System.String,System.String)">
            <summary>
            增加指令
            </summary>
            <param name="cSQLEXEC">SQL指令</param>
            <param name="cInfo">SQL指令說明</param>
        </member>
        <member name="M:Lib2013.SQLobject.ClearCMD">
            <summary>
            SQL清空指令
            </summary>
        </member>
        <member name="M:Lib2013.SQLobject.LockTable(System.String,System.String,System.String[])">
            <summary>
            鎖定資料表
            </summary>
            <param name="cObjectName">鎖定物件名稱</param>
            <param name="cCaption">視窗標題,空為不顯示視窗</param>
            <param name="cLockTable">鎖定資料表名稱</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.SQLobject.UnLockTable(System.String)">
            <summary>
            解除鎖定資料表
            </summary>
            <param name="ObjectName">鎖定物件名稱</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.SQLobject.GetReader(System.String)">
            <summary>
            取得SQLReader
            </summary>
            <param name="cCaption">錯誤時錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.SQLobject.RUNSQL(System.Data.DataSet@,System.String,System.Int32,System.String,System.String,System.Int32,Lib2013.YesNoDef,System.String,System.Boolean)">
            <summary>
            執行SQL指令
            </summary>
            <param name="dsSource">回傳資料庫</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">輸出SQL指令到指令路徑,default為全域設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行,-1為全域設定值,0為不分批</param>
            <param name="oRollBack">指令執行失敗時是否還原,注意此值開啟時批次執行皆視為不分批</param>
            <param name="UnLockObject">失敗的話解除鎖定物件名稱,多物件時用','分隔</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.SQLobject.RUNSQL(System.Data.DataTable[]@,System.String,System.Int32,System.String,System.String,System.Int32,Lib2013.YesNoDef,System.String,System.Boolean)">
            <summary>
            執行SQL指令
            </summary>
            <param name="dtSource">回傳資料表陣列</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全域設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行,-1為全域設定值,0為不分批</param>
            <param name="oRollBack">指令執行失敗時是否還原,注意此值開啟時批次執行皆視為不分批</param>
            <param name="UnLockObject">失敗的話解除鎖定物件名稱,多物件時用','分隔</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.SQLobject.RUNSQL(System.Windows.Forms.BindingSource[]@,System.String,System.Int32,System.String,System.String,System.Int32,Lib2013.YesNoDef,System.String,System.Boolean)">
            <summary>
            執行SQL指令
            </summary>
            <param name="bsSource">回傳資料連結陣列</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全域設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行,-1為全域設定值,0為不分批</param>
            <param name="oRollBack">指令執行失敗時是否還原,注意此值開啟時批次執行皆視為不分批</param>
            <param name="UnLockObject">失敗的話解除鎖定物件名稱,多物件時用','分隔</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.SQLobject.RUNSQL(System.Data.DataTable@,System.String,System.Int32,System.String,System.String,System.Int32,Lib2013.YesNoDef,System.String,System.Boolean)">
            <summary>
            執行SQL指令
            </summary>
            <param name="dtSource">傳回資料表(多張表只會傳回第1張)</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全域設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行,-1為全域設定值,0為不分批</param>
            <param name="oRollBack">指令執行失敗時是否還原,注意此值開啟時批次執行皆視為不分批</param>
            <param name="UnLockObject">失敗的話解除鎖定物件名稱,多物件時用','分隔</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.SQLobject.RUNSQL(System.Windows.Forms.BindingSource@,System.String,System.Int32,System.String,System.String,System.Int32,Lib2013.YesNoDef,System.String,System.Boolean)">
            <summary>
             執行SQL指令
            </summary>
            <param name="bsSource">傳回資料連結(多張表只會傳回第1張)</param>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全域設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行,-1為全域設定值,0為不分批</param>
            <param name="oRollBack">指令執行失敗時是否還原,注意此值開啟時批次執行皆視為不分批</param>
            <param name="UnLockObject">失敗的話解除鎖定物件名稱,多物件時用','分隔</param>
            <returns>是否執行成功</returns>
        </member>
        <member name="M:Lib2013.SQLobject.RUNSQL(System.String,System.Int32,System.String,System.String,System.Int32,Lib2013.YesNoDef,System.String,System.Boolean)">
            <summary>
            執行SQL指令(不回傳資料)
            </summary>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <param name="cMode">模式 1:檢查資料是否重覆 2:修改 3:檢查資料是否存在 4:純抓資料</param>
            <param name="cErrMsg">Mode為1或3時,資料數量不正確所顯示的訊息,留空為預設訊息</param>
            <param name="TxtFileName">>輸出SQL指令到指令路徑,default為全域設定,留空為不輸出</param>
            <param name="nDoOnce">SQL指令上限,指令數目超出此值則分批執行,-1為全域設定值,0為不分批</param>
            <param name="oRollBack">指令執行失敗時是否還原,注意此值開啟時批次執行皆視為不分批</param>
            <param name="UnLockObject">失敗的話解除鎖定物件名稱,多物件時用','分隔</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.SQLobject.ConnOpen(System.String)">
            <summary>
            開啟資料庫並回傳是否成功(如果已開啟則不執行並傳回True)
            </summary>
            <param name="cCaption">錯誤時顯示錯誤訊息視窗標題,留空則不顯示錯誤訊息</param>
            <returns>是否開啟成功</returns>
        </member>
        <member name="M:Lib2013.SQLobject.ConnClose">
            <summary>
            關閉資料庫(如已關閉則不執行)
            </summary>
        </member>
        <member name="M:Lib2013.SQLobject.Dispose">
            <summary>
            釋放資源
            </summary>
        </member>
        <member name="F:Lib2013.SQLobject.NewEDFormat">
            <summary>
            是否使用新加解密字串轉換函數
            </summary>
        </member>
        <member name="F:Lib2013.SQLobject.DataColumnSize">
            <summary>
            欄位長度對應表
            </summary>
        </member>
        <member name="M:Lib2013.SQLobject.EncStr(System.String,System.String)">
            <summary>
            加解密字串轉換
            </summary>
            <param name="cStr">文字</param>
            <param name="cDBKeyName">金鑰名稱</param>
            <returns></returns>
        </member>
        <member name="P:Lib2013.SQLobject.Log_TableName">
            <summary>
            LOG資料表表名
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.Log_UserID">
            <summary>
            LOG使用者ID
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.Log_UserName">
            <summary>
            LOG使用者名稱
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.Log_MacAddress">
            <summary>
            LOG使用者MAC
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.Log_PCid">
            <summary>
            使用者PC代號
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.DBKeyName">
            <summary>
            資料庫金鑰名稱
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.DBKey">
            <summary>
            資料庫金鑰
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.SQLEXECList">
            <summary>
            資料庫指令列表
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.MemoList">
            <summary>
            資料庫指令說明列表
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.ShowMsg">
            <summary>
            是否顯示錯誤訊息
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.ShowEx">
            <summary>
            是否顯示額外錯誤訊息
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.ErrorMsg">
            <summary>
            最後出現的錯誤訊息
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.ChangedCount">
            <summary>
            最後指令異動的資料數量
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.ConnectionString">
            <summary>
            連接字串
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.Address">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.Port">
            <summary>
            PORT
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.Database">
            <summary>
            資料庫名稱
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.ID">
            <summary>
            帳號
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.PW">
            <summary>
            密碼
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.CMD">
            <summary>
            指令
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.TxtFileName">
            <summary>
            輸出指令為文字檔至指定位置
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.TxtCount">
            <summary>
            輸出指令檔案索引值
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.HisLog">
            <summary>
            是否計錄LOG
            </summary>
        </member>
        <member name="P:Lib2013.SQLobject.Status">
            <summary>
            資料庫開啟狀態
            </summary>
        </member>
        <member name="F:Lib2013.oCommandButton.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oCommandButton.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oCommandButton.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="M:Lib2013.oBaseForm.GetAllChanged(System.Boolean,System.Boolean)">
            <summary>
            取得目前頁面中所有控制項的值變更字串
            </summary>
            <param name="GetTopValue">非容器控制項有第一項屬性時是否跳過子項目之值</param>
            <param name="OnlyCurPage">遇到Page時限定範圍為目前頁面</param>
            <returns></returns>
        </member>
        <member name="M:Lib2013.oBaseForm.GetAllValue(System.Boolean,System.Boolean)">
            <summary>
            取得目前頁面中所有控制項的值
            </summary>
            <param name="GetTopValue">非容器控制項有第一項屬性時是否跳過子項目之值</param>
            <param name="OnlyCurPage">遇到Page時限定範圍為目前頁面</param>
            <returns></returns>
        </member>
        <member name="F:Lib2013.oBaseForm.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oBaseForm.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oBaseForm.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.PickChar.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.PickChar.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.PickChar.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.辭庫.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.辭庫.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.辭庫.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.TestControl.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.TestControl.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.TestControl.InitializeComponent">
             <summary> 
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="M:Lib2013.oComBoBox.ReSetSize">
            <summary>
            重新計算下拉選單大小
            </summary>
        </member>
        <member name="F:Lib2013.oComBoBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oComBoBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oComBoBox.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oAdjustUserPassBox.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oAdjustUserPassBox.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oAdjustUserPassBox.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oBaseGroup.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oBaseGroup.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oBaseGroup.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oCheckBoxGroup.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oCheckBoxGroup.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oCheckBoxGroup.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oGetAddr.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetAddr.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetAddr.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetIP.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetIP.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetIP.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetMonth.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetMonth.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetMonth.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetFolder.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetFolder.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetFolder.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oProgressBar.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oProgressBar.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oProgressBar.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oScrollLabel.components">
            <summary> 
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oScrollLabel.Dispose(System.Boolean)">
            <summary> 
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oScrollLabel.InitializeComponent">
            <summary> 
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oGetFile.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetFile.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetFile.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oPictureBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oPictureBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oPictureBox.InitializeComponent">
            <summary>
            此為設計工具支援所需的方法 - 請勿使用程式碼編輯器
            修改這個方法的內容。
            </summary>
        </member>
        <member name="F:Lib2013.oGetNum.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetNum.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetNum.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetTime.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetTime.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetTime.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="M:Lib2013.oDataGridView.SetSelectIndex(System.Int32,System.Int32)">
            <summary>
            選取特定資料列
            </summary>
            <param name="Index"></param>
            <param name="PadCount"></param>
        </member>
        <member name="F:Lib2013.oDataGridView.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oDataGridView.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oDataGridView.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetBox.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetBox_Wh.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetBox_Wh.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetBox_Wh.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetComBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetComBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetComBox.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oStylusGetComBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oStylusGetComBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oStylusGetComBox.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetSeparator.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetSeparator.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetSeparator.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetDate.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetDate.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetDate.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oTextBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oTextBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oTextBox.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oMaskTextBox.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oMaskTextBox.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oMaskTextBox.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
        <member name="F:Lib2013.oGetColor.components">
            <summary>
            設計工具所需的變數。
            </summary>
        </member>
        <member name="M:Lib2013.oGetColor.Dispose(System.Boolean)">
            <summary>
            清除任何使用中的資源。
            </summary>
            <param name="disposing">如果應該處置 Managed 資源則為 true，否則為 false。</param>
        </member>
        <member name="M:Lib2013.oGetColor.InitializeComponent">
             <summary>
             此為設計工具支援所需的方法 - 請勿使用程式碼編輯器修改這個方法的內容。
            
             </summary>
        </member>
    </members>
</doc>
